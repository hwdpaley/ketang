{
    "version": 3,
    "sources": [
        "../../../src/common/model/channel.js"
    ],
    "names": [
        "get_parent_channel",
        "id",
        "breadcrumb",
        "where",
        "find",
        "nav",
        "push",
        "pid",
        "reverse",
        "get_channel_cache",
        "think",
        "cache",
        "get_channel",
        "timeout",
        "channel",
        "map",
        "order",
        "select",
        "list",
        "v",
        "name",
        "url",
        "indexOf",
        "isEmpty",
        "isString",
        "split",
        "isNumberString",
        "model",
        "config",
        "getField",
        "get_sub_category",
        "subcate",
        "on",
        "get_children",
        "info",
        "updates",
        "data",
        "res",
        "obj",
        "create_time",
        "Date",
        "getTime",
        "add",
        "err",
        "update_time",
        "update",
        "base"
    ],
    "mappings": "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",
    "file": "../../../src/common/model/channel.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\n/**\n * model\n */\nexport default class extends think.model.base {\n    /**\n     * 获取参数的所有父级导航\n     * @param int id 导航id\n     * @return array 参数导航和导航的信息集合\n     * @author\n     */\n    async get_parent_channel(id){\n        let breadcrumb = []\n        while (id!=0)\n        {\n            let nav = await this.where({'id':id,'status':1}).find();\n            breadcrumb.push(nav);\n            id = nav.pid;\n\n        }\n        return breadcrumb.reverse()\n    }\n    /**\n     * 缓存频道信息\n     * @returns {Promise}\n     */\n    async get_channel_cache(){\n        let channel=await think.cache('get_channel_cache',()=>{\n            return this.get_channel(0);\n        }, {timeout: 365 * 24 * 3600});\n        return channel;\n    }\n    /**\n     * 获取分类树，指定分类则返回指定分类及其子分类，不指定则返回所有分类树\n     *\n     */\n    async get_channel(id){\n        id = id||0;\n        /*获取当前分类信息*/\n\n        //if(id){\n        //    console.log(id);\n        //    let ids = id;\n        //    let info = await this.info(ids);\n        //    console.log(info);\n        //    let id   = info.id;\n        //}\n\n        //获取所有分类\n\n        let map = {\"status\":{\">\":-1}}\n        let list = await this.where(map).order('sort ASC').select();\n        //console.log(list);\n        //list = get_children(list,id);\n        for (let v of list){\n            let name =0;\n            if(v.url.indexOf(\"http://\")==-1 || v.url.indexOf(\"https://\")==-1){\n                if(!think.isEmpty(v.url)&& think.isString(v.url)){\n                    name = v.url.split(\"/\")[1];\n                    if(!think.isNumberString(name)&& !think.isEmpty(name)){\n                        name = await think.model('category',think.config(\"db\")).where({name:name}).getField(\"id\",true);\n                    }\n                }\n            }\n            if(name != 0 && !think.isEmpty(name)){\n                let subcate = await think.model('category',think.config(\"db\")).get_sub_category(name);\n                subcate.push(name);\n                v.on = subcate;\n            }\n\n\n        }\n        list = get_children(list,id);\n        let info = list;\n\n        return info;\n    }\n\n    /**\n     * 更新或者编辑信息\n     * @param data\n     * @returns {*}\n     */\n    async updates(data){\n        if(think.isEmpty(data)){\n            return false;\n        }\n        let res;\n        let obj;\n        /* 添加或更新数据 */\n        if(think.isEmpty(data.id)){\n            data.create_time=new Date().getTime();\n            res = this.add(data);\n            if(res){\n                obj={id:res,err:1};//添加成功\n            }else {\n                obj={err:2};//新增失败\n            }\n        }else{\n            data.update_time=new Date().getTime();\n            res = this.update(data);\n            if(res){\n                obj={id:res,err:3};//更新成功\n            }else {\n                obj = {err:4};//更新失败\n            }\n        }\n        think.cache(\"get_channel_cache\",null);//更新频道缓存信息\n        return obj;\n\n    }\n}"
    ]
}