{
    "version": 3,
    "sources": [
        "../../../../src/common/adapter/editor/ueditor.js"
    ],
    "names": [
        "init",
        "fileField",
        "config",
        "type",
        "http",
        "upBase64",
        "upFile",
        "file",
        "think",
        "isFile",
        "path",
        "stateInfo",
        "oriName",
        "originalFilename",
        "fileSize",
        "size",
        "fileType",
        "getFileExt",
        "fullName",
        "getFullName",
        "filePath",
        "getFilePath",
        "fileName",
        "getFileName",
        "mkdir",
        "replace",
        "checkSize",
        "checkType",
        "renameSync",
        "base64Data",
        "post",
        "img",
        "Buffer",
        "length",
        "writeFileSync",
        "spiderImage",
        "imgUrl",
        "deferred",
        "defer",
        "get",
        "res",
        "imgData",
        "setEncoding",
        "on",
        "chunk",
        "resolve",
        "promise",
        "saveRemote",
        "log",
        "indexOf",
        "m",
        "match",
        "promises",
        "substr",
        "lastIndexOf",
        "toLocaleLowerCase",
        "self",
        "format",
        "pathFormat",
        "d",
        "Date",
        "t",
        "getTime",
        "date",
        "yyyy",
        "getFullYear",
        "mm",
        "getMonth",
        "dd",
        "getDate",
        "str",
        "index",
        "search",
        "charAt",
        "rand",
        "Math",
        "random",
        "toString",
        "ext",
        "RESOURCE_PATH",
        "basename",
        "in_array",
        "getFileInfo",
        "adapter",
        "base"
    ],
    "mappings": "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",
    "file": "../../../../src/common/adapter/editor/ueditor.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\n/**\n * base adapter\n */\nimport fs from 'fs';\nimport path from 'path';\nimport http from 'http';\nexport default class extends think.adapter.base {\n    /**\n     * init\n     * @return {[]}         []\n     */\n    init(fileField, config, type ,http){\n        type = type||\"upload\";\n        //super.init(http);\n        this.http = http;\n        this.fileField = fileField;\n        this.config = config;\n        this.type = type;\n        if (type == \"remote\") {\n            //await this.saveRemote();\n        } else if(type == \"base64\") {\n            this.upBase64();\n        } else {\n            this.upFile();\n        }\n\n    }\n\n    /**\n     * 上传文件的主处理方法\n     * @return mixed\n     */\n     upFile(){\n        let http=this.http;\n        let file = http.file(this.fileField);\n        //console.log(file);\n        if(!think.isFile(file.path)){\n            this.stateInfo = \"找不到临时文件\";\n            return;\n        }\n\n        this.oriName = file.originalFilename;\n        this.fileSize = file.size;\n        this.fileType = this.getFileExt();\n        this.fullName = this.getFullName();\n        this.filePath = this.getFilePath();\n        this.fileName = this.getFileName();\n        think.mkdir(this.filePath.replace(this.fileName, \"\"));\n        //检查文件大小是否超出限制\n        if (!this.checkSize()) {\n            this.stateInfo = \"文件大小超出网站限制\";\n            return;\n        }\n        //检查是否不允许的文件格式\n        if (!this.checkType()) {\n            this.stateInfo = \"文件类型不允许\";\n            return;\n        }\n        \n        //移动文件\n        fs.renameSync(file.path, this.filePath);\n        if(think.isFile(this.filePath)){\n            this.stateInfo = \"SUCCESS\";\n        }else{\n            this.stateInfo ='文件保存时出错';\n        }\n\n    }\n    /**\n     * 处理base64编码的图片上传\n     * @return mixed\n     */\n    upBase64()\n    {\n        let http=this.http;\n        let base64Data = http.post(this.fileField);\n        // console.log(base64Data);\n        let img = new Buffer(base64Data, 'base64');\n        //console.log(img);\n        this.oriName = this.config['oriName'];\n        //console.log(this.oriName);\n        this.fileSize = img.length;\n        this.fileType = this.getFileExt();\n        this.fullName = this.getFullName();\n        this.filePath = this.getFilePath();\n        this.fileName = this.getFileName();\n        think.mkdir(this.filePath.replace(this.fileName, \"\"));\n\n        //检查文件大小是否超出限制\n        //if (!this.checkSize()) {\n        //  this.stateInfo = \"文件大小超出网站限制\";\n        //  return;\n        //}\n        ////检查是否不允许的文件格式\n        //if (!this.checkType()) {\n        //  this.stateInfo = \"文件类型不允许\";\n        //  return;\n        //}\n        //移动文件\n        //fs.renameSync(img, this.filePath);\n        fs.writeFileSync(this.filePath, img);\n        if(think.isFile(this.filePath)){\n            this.stateInfo = \"SUCCESS\";\n        }else{\n            this.stateInfo ='文件保存时出错';\n        }\n\n    }\n\n    spiderImage(imgUrl,filePath) {\n        let deferred = think.defer();\n        http.get(imgUrl, function (res) {\n            var imgData = \"\";\n            res.setEncoding(\"binary\");\n            res.on(\"data\", function (chunk) {\n                imgData += chunk;\n            });\n\n            res.on(\"end\", function () {\n                fs.writeFileSync(filePath, imgData, \"binary\");\n                deferred.resolve(filePath);\n            });\n        });\n        return deferred.promise;\n    }\n    /**\n     * 拉取远程图片\n     * @return mixed\n     */\n    async saveRemote(){\n        think.log(\"dddddd\")\n        let imgUrl = this.fileField;\n        //imgUrl = imgUrl.replace(/&amp;/,\"&\");\n        //http开头验证\n        if (imgUrl.indexOf(\"http\") !== 0) {\n            this.stateInfo = \"链接不是http链接\";\n            return;\n        }\n        //TODO 各种验证后面弄\n        let m = imgUrl.match(/[\\/]([^\\/]*)[\\.]?[^\\.\\/]*$/)[1];\n        this.oriName = m ? m:\"\";\n        //console.log(this.oriName);\n        this.fileSize = imgUrl.length;//TODO 这里有问题，后面弄\n        this.fileType = this.getFileExt();\n        this.fullName = this.getFullName();\n        this.filePath = this.getFilePath();\n        this.fileName = this.getFileName();\n        let filePath = this.filePath;\n        let fullName =this.fullName;\n        think.mkdir(this.filePath.replace(this.fileName, \"\"));\n        let promises = await this.spiderImage(imgUrl,filePath);\n        // console.log(promises);\n        if(think.isFile(promises)){\n            this.stateInfo = \"SUCCESS\";\n        }else{\n            this.stateInfo ='文件保存时出错';\n        }\n        return {\n            \"state\" : this.stateInfo,\n            \"url\" : this.fullName,\n            \"title\" : this.fileName,\n            \"original\" : this.oriName,\n            \"type\" : this.fileType,\n            \"size\" : this.fileSize\n        };\n    }\n\n    /**\n     * 获取文件扩展名\n     * @return string\n     */\n    getFileExt()\n    {\n\n        return this.oriName.substr(this.oriName.lastIndexOf(\".\")).toLocaleLowerCase();\n    }\n\n    /**\n     * 重命名文件\n     * @return string\n     */\n    getFullName() {\n        //替换目录日期事件\n        ///ueditor/php/upload/image/{yyyy}{mm}{dd}/{time}{rand:6}\n        var self = this;\n        //var filename= this.filed;\n        var format = this.config.pathFormat;\n        var d = new Date();\n        var t = d.getTime();\n        var date = {};\n        date.yyyy = d.getFullYear();\n        date.mm = (d.getMonth() + 1) < 10 ? \"0\" + (d.getMonth() + 1) : d.getMonth() + 1;\n        date.dd = (d.getDate() < 10 ? \"0\" : \"\") + d.getDate();\n        format = format.replace(\"{yyyy}\", date.yyyy);\n        format = format.replace(\"{mm}\", date.mm);\n        format = format.replace(\"{dd}\", date.dd);\n        format = format.replace(\"{time}\", t);\n        //计算随机数\n        var str = format.match(/\\{rand\\:[\\d]*\\}/i)\n        var index = str[0].search(/:/) + 1;\n        index = str[0].charAt(index);\n        var rand = Math.random();\n        rand = rand.toString();\n        rand = rand.substr(2, index);\n        //替换随机数\n        format = format.replace(str[0], rand);\n        var ext = this.getFileExt();\n        return  format + ext;\n    }\n\n    /**\n     * 获取文件完整路径\n     * @return string\n     */\n    getFilePath()\n    {\n\n        if (this.fullName.substr(0, 1) != '/') {\n            this.fullName = '/' + this.fullName;\n        }\n\n        return think.RESOURCE_PATH + this.fullName;\n    }\n    /**\n     * 获取文件名\n     * @return string\n     */\n    getFileName() {\n        return path.basename(this.filePath);\n    }\n\n    /**\n     * 文件类型检测\n     * @return bool\n     */\n    checkType()\n    {\n        return in_array(this.getFileExt(), this.config[\"allowFiles\"]);\n    }\n\n    /**\n     * 文件大小检测\n     * @return bool\n     */\n    checkSize()\n    {\n        return this.fileSize <= (this.config[\"maxSize\"]);\n    }\n    /**\n     * 获取当前上传成功文件的各项信息\n     * @return array\n     */\n    getFileInfo()\n    {\n        return {\n            \"state\" : this.stateInfo,\n            \"url\" : this.fullName,\n            \"title\" : this.fileName,\n            \"original\" : this.oriName,\n            \"type\" : this.fileType,\n            \"size\" : this.fileSize\n        };\n    }\n}"
    ]
}