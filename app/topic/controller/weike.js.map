{
    "version": 3,
    "sources": [
        "../../../src/topic/controller/weike.js"
    ],
    "names": [
        "init",
        "http",
        "active",
        "indexAction",
        "meta_title",
        "keywords",
        "description",
        "display",
        "pkivalidationAction",
        "listAction",
        "q",
        "get",
        "split",
        "console",
        "log",
        "model",
        "get_model",
        "key_show",
        "models",
        "assign",
        "mod",
        "where",
        "keyname",
        "find",
        "topic",
        "list",
        "think",
        "isEmpty",
        "extend",
        "tagid",
        "id",
        "mod_id",
        "page",
        "join",
        "table",
        "name",
        "as",
        "on",
        "order",
        "countSelect",
        "data",
        "v",
        "imgs",
        "img_text_view",
        "detail",
        "param",
        "mod_type",
        "html",
        "desc",
        "pageNum",
        "url",
        "class",
        "text",
        "next",
        "prev",
        "total",
        "is_login",
        "key_id",
        "uid",
        "user",
        "focus"
    ],
    "mappings": "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",
    "file": "../../../src/topic/controller/weike.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\n\nimport Base from './base.js';\nimport pagination from 'think-pagination';\nexport default class extends Base {\n    init(http) {\n        super.init(http);\n        this.active = \"/topic\";\n    }\n  /**\n   * index action\n   * @return {Promise} []\n   */\n async indexAction(){\n     // let q = this.get('key');\n     //  let map ={}\n     //  if(!think.isEmpty(q)){\n     //      switch (q){\n     //          case 'week':\n     //              //todo\n     //              map.discuss_count_update = [\">\",new Date().valueOf() - (7*3600*3600*1000)]\n     //              break;\n     //          case 'month':\n     //              //todo\n     //              map.discuss_count_update = [\">\",new Date().valueOf() - (30*3600*3600*1000)]\n     //              break;\n     //      }\n     //  }\n     //  let list = await this.model('keyword').page(this.get('page'),15).where(map).order(\"videonum DESC,focus_count DESC\").countSelect();\n     //  let html = pagination(list, this.http, {\n     //      desc: false, //show description\n     //      pageNum: 2,\n     //      url: '', //page url, when not set, it will auto generated\n     //      class: 'nomargin', //pagenation extra class\n     //      text: {\n     //          next: '下一页',\n     //          prev: '上一页',\n     //          total: 'count: ${count} , pages: ${pages}'\n     //      }\n     //  });\n     //  this.assign('pagination', html);\n     //  //console.log(list);\n     //  this.assign(\"list\",list);\n      //seo\n      this.meta_title = \"音乐\"; //标题\n      this.keywords =  \"音乐\"; //seo关键词\n      this.description =  \"音乐\"; //seo描述\n    //auto render template file index_index.html\n    return this.display();\n  }\n  async pkivalidationAction(){\n     \n      this.meta_title = \"音乐\"; //标题\n      this.keywords =  \"音乐\"; //seo关键词\n      this.description =  \"音乐\"; //seo描述\n    //auto render template file index_index.html\n    return this.display();\n  }\n async listAction(){\n     let q = this.get(\"key\").split(\",\");\n     console.log(q);\n\n     //获取所有的模型\n     let models = await this.model(\"model\").get_model(null,null,{key_show:1});\n     this.assign(\"models\",models);\n     //获取当前模型\n     let mod = await this.model(\"model\").get_model(q[1]);\n     console.log(mod);\n     this.assign(\"mod\",mod);\n\n     //获取当前话题\n     let topic = await this.model(\"keyword\").where({keyname:q[0]}).find();\n     this.assign(\"topic\",topic);\n     console.log(topic);\n\n     let list=[];\n     if(!think.isEmpty(q[1])){\n         if(mod.extend==0){\n             list = await this.model('keyword_data').where({tagid:topic.id,mod_id:q[1]}).page(this.get('page'),10).join({\n                 table: mod.name,\n                 join: \"left\", //join 方式，有 left, right, inner 3 种方式\n                 as: \"c\", // 表别名\n                 on: [\"docid\", \"id\"] //ON 条件\n             }).order(\"c.id DESC\").countSelect();\n             if(mod.id==8){\n                 for (let v of list.data){\n                     v.imgs = img_text_view(v.detail,200,120);\n                 }\n             }\n         }else {\n             list = await this.model('keyword_data').where({tagid:topic.id,mod_id:q[1]}).page(this.param('page'),10)\n                 .join({\n                     table: \"document\",\n                     join: \"left\", //join 方式，有 left, right, inner 3 种方式\n                     as: \"c\", // 表别名\n                     on: [\"docid\", \"id\"] //ON 条件\n                 }).order(\"c.id DESC\").countSelect();\n         }\n     }else {\n         list = await this.model('keyword_data').where({tagid:topic.id,mod_type:0}).page(this.param('page'),10)\n             .join({\n                 table: \"document\",\n                 join: \"left\", //join 方式，有 left, right, inner 3 种方式\n                 as: \"c\", // 表别名\n                 on: [\"docid\", \"id\"] //ON 条件\n             }).order(\"c.id DESC\").countSelect();\n     }\n\n     let html = pagination(list, this.http, {\n         desc: false, //show description\n         pageNum: 2,\n         url: '', //page url, when not set, it will auto generated\n         class: 'nomargin', //pagenation extra class\n         text: {\n             next: '下一页',\n             prev: '上一页',\n             total: 'count: ${count} , pages: ${pages}'\n         }\n     });\n     this.assign('pagination', html);\n     console.log(list);\n     this.assign(\"list\",list);\n     //该主题是否被关注。\n     if(this.is_login) {\n         let focus = await this.model(\"keyword_focus\").where({key_id: topic.id, uid:this.user.uid}).find();\n         this.assign(\"focus\", focus);\n     }\n     //seo\n     this.meta_title = topic.keyname; //标题\n     this.keywords = topic.keyname; //seo关键词\n     this.description = topic.description; //seo描述\n\n     this.assign(\"key\",q[0]);\n     return this.display();\n }\n}"
    ]
}