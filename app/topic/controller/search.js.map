{
    "version": 3,
    "sources": [
        "../../../src/topic/controller/search.js"
    ],
    "names": [
        "locale",
        "indexAction",
        "q",
        "get",
        "meta_title",
        "think",
        "isEmpty",
        "checkMobile",
        "userAgent",
        "display",
        "http",
        "controller",
        "action",
        "time",
        "search_time",
        "sql_time",
        "sql",
        "m_id",
        "Date",
        "getTime",
        "segment",
        "useDefault",
        "segment_q",
        "doSegment",
        "simple",
        "stripPunctuation",
        "model",
        "query",
        "variables",
        "ft_min_word_len",
        "_",
        "find",
        "Value",
        "console",
        "log",
        "join",
        "k",
        "length",
        "numsPerPage",
        "currentPage",
        "Number",
        "count",
        "res",
        "hs",
        "cookie",
        "assign",
        "split",
        "reverse",
        "hsq",
        "in_array",
        "order",
        "select",
        "modlist",
        "data",
        "v",
        "get_model",
        "extend",
        "m_type",
        "table",
        "where",
        "mod",
        "getField",
        "pk",
        "map",
        "d_id",
        "push",
        "list",
        "totalPages",
        "Math",
        "ceil",
        "html",
        "desc",
        "pageNum",
        "url",
        "class",
        "text",
        "next",
        "prev",
        "total",
        "isAjax",
        "get_url",
        "name",
        "id",
        "get_category",
        "category_id",
        "categoryname",
        "add_time",
        "format",
        "json"
    ],
    "mappings": "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",
    "file": "../../../src/topic/controller/search.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\n\nimport Base from './base.js';\nimport Segment from 'segment';\nimport pagination from 'think-pagination';\nimport moment from \"moment\"\nmoment.locale('zh-cn');\nexport default class extends Base {\n  /**\n   * index action\n   * @return {Promise} []\n   */\n  async indexAction(){\n    //auto render template file index_index.html\n      let q = this.get(\"q\");\n      this.meta_title=\"搜索\";\n      if(think.isEmpty(q)){\n          if(checkMobile(this.userAgent())){\n              return this.display(`mobile/${this.http.controller}/${this.http.action}`);\n          }else {\n              return this.display();\n          }\n\n      }else {\n          let time = this.get(\"d\");\n          let search_time,sql_time,sql;\n          let q = this.get('q');\n          let m_id = this.get('m')||0;\n          //按时间搜索\n          if(time=='day'){\n              search_time = new Date().getTime() - 86400000;\n              sql_time = ` AND add_time > ${search_time}`;\n          }else if(time=='week'){\n              search_time = new Date().getTime() - 604800000;\n              sql_time = ` AND add_time > ${search_time}`;\n          }else if(time=='month'){\n              search_time = new Date().getTime() - 2592000000;\n              sql_time = ` AND add_time > ${search_time}`;\n          }else if(time=='year'){\n              search_time = new Date().getTime() - 31536000000;\n              sql_time = ` AND add_time > ${search_time}`;\n          }else {\n              search_time=0;\n              sql_time='';\n          }\n          let segment = new Segment();\n          // 使用默认的识别模块及字典，载入字典文件需要1秒，仅初始化时执行一次即可\n          segment.useDefault();\n          // 开始分词\n          let segment_q= segment.doSegment(q, {\n              simple: true,\n              stripPunctuation: true\n          });\n          //检查全文搜索配置\n          let variables = await this.model(\"mysql\").query(`show variables`);\n          let ft_min_word_len =think._.find(variables, ['Variable_name', 'ft_min_word_len']).Value;\n          if(ft_min_word_len ==1){\n              console.log(segment_q.join(\" \"));\n              sql = \"\";\n              sql = `MATCH (data) AGAINST ('${segment_q.join(\" \")}' IN BOOLEAN MODE)`;\n              if(m_id){\n                  sql += ` AND m_id=${m_id}`\n              }\n              if(search_time !=0){\n                  sql += sql_time\n              }\n          }else {\n              sql = \"\";\n              sql +='('\n              for (let k=0; k<segment_q.length ;k++){\n                  sql +=\"`data` like '%\"+segment_q[k]+\"%'\";\n                  if(segment_q[k+1]){\n                      sql +=' OR '\n                  }\n              }\n              sql +=')'\n              if(m_id){\n                  sql += ` AND m_id=${m_id}`\n              }\n              if(search_time !=0){\n                  sql += sql_time\n              }\n              console.log(q+\"dddddddddd\");\n          }\n          console.log(sql);\n          let numsPerPage =10;\n          let currentPage = Number(this.get(\"page\"))||1;\n          let count = await this.model(\"mysql\").query(`SELECT count(search_id) FROM __SEARCH__ WHERE ${sql}`)\n          let res = await this.model(\"mysql\").query(`SELECT * FROM __SEARCH__ WHERE ${sql} order by search_id DESC LIMIT ${(currentPage-1)*numsPerPage},${numsPerPage}`);\n          let hs = this.cookie(\"cmswing_historical_search\");\n          this.assign(\"hs\",hs.split(\"|\").reverse());\n          //搜索记录\n          if(count[0]['count(search_id)']>0){\n\n\n              let hsq;\n              if(think.isEmpty(hs)){\n                  this.cookie(\"cmswing_historical_search\", q);\n              }else {\n                  if(!in_array(q,hs.split(\"|\"))){\n                      hsq = hs+'|'+q;\n                      this.cookie(\"cmswing_historical_search\", hsq);\n                  }\n\n              }\n\n          }\n\n          let modlist = await this.model(\"search_model\").order('sort ASC').select();\n          //console.log(modlist);\n          let data = [];\n          for(let v of res){\n              let extend = await this.model(\"model\").get_model(v.m_id,\"extend\");\n              v.m_type =extend;\n              let table;\n              if(extend==0){\n                  table= await this.model(\"model\").get_model(v.m_id,\"name\");\n              }else {\n                  table=\"document\";\n              }\n              let pk = await this.model(\"search_model\").where({mod:v.m_id}).getField('pk', true)\n              let map = {}\n               map[pk] = v.d_id;\n              data.push(think.extend(await this.model(table).where(map).find(),v))\n          }\n          //console.log(data);\n          let list = {\n              numsPerPage: numsPerPage, //每页显示的条数\n                  currentPage: currentPage, //当前页\n              count: count[0]['count(search_id)'], //总条数\n              totalPages: Math.ceil(count[0]['count(search_id)']/numsPerPage), //总页数\n              data:data\n          }\n          //查询数据\n\n          let html = pagination(list, this.http, {\n              desc: false, //show description\n              pageNum: 2,\n              url: '', //page url, when not set, it will auto generated\n              class: 'nomargin', //pagenation extra class\n              text: {\n                  next: '下一页',\n                  prev: '上一页',\n                  total: 'count: ${count} , pages: ${pages}'\n              }\n          });\n          this.assign('pagination', html);\n          this.assign(\"modlist\",modlist);\n          this.assign(\"list\",list);\n          if(checkMobile(this.userAgent())){\n              if(this.isAjax('get')){\n                  for(let v of list.data){\n                      v.model = await this.model(\"model\").get_model(v.m_id,\"title\") ;\n                      if (v.m_type ==1){\n                          v.url = get_url(v.name,v.id);\n                      }else {\n                          v.url =`/mod/${await this.model(\"model\").get_model(v.m_id,\"name\")}/index/detail/id/${v.d_id}`\n                      }\n                      v.categoryname = await this.model(\"category\").get_category(v.category_id,\"title\");\n                      v.add_time = moment(v.add_time).format('YYYY-MM-DD HH:mm')\n                  }\n                  return this.json(list);\n              }\n              return this.display(`mobile/${this.http.controller}/${this.http.action}`);\n          }else {\n              return this.display(\"result\");\n          }\n\n      }\n\n  }\n}"
    ]
}