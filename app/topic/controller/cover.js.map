{
    "version": 3,
    "sources": [
        "../../../src/topic/controller/cover.js"
    ],
    "names": [
        "locale",
        "indexAction",
        "get",
        "id",
        "split",
        "category",
        "cate",
        "think",
        "extend",
        "roleid",
        "console",
        "log",
        "is_login",
        "assign",
        "model",
        "where",
        "getField",
        "priv",
        "http",
        "error",
        "Error",
        "statusAction",
        "get_category",
        "models",
        "modellist",
        "isEmpty",
        "val",
        "modelobj",
        "get_model",
        "title",
        "push",
        "meta_title",
        "keywords",
        "description",
        "get_parent_category",
        "breadcrumb",
        "get_sub_category",
        "temp",
        "template_index",
        "action",
        "checkMobile",
        "userAgent",
        "template_m_index",
        "controller",
        "display"
    ],
    "mappings": "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",
    "file": "../../../src/topic/controller/cover.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n\n'use strict';\nimport moment from \"moment\"\nmoment.locale('zh-cn');\nimport Base from './base.js';\nexport default class extends Base {\n  /**\n   * index action\n   * @return {Promise} []\n   */\n  //频道页\n  async indexAction() {\n\n    //auto render template file index_index.html\n    let get = this.get('category') || 0;\n    let id=0;\n    if(get != 0){\n      id = get.split(\"-\")[0];\n    }\n    let cate = await this.category(id);\n    cate = think.extend({}, cate);\n    //console.log(cate);\n    let roleid=8;//游客\n    //访问控制\n    console.log(\"uid=============\"+this.is_login);\n    if(this.is_login){\n      this.assign('userid', this.is_login);\n      roleid = await this.model(\"member\").where({id:this.is_login}).getField('groupid', true);\n    }else{\n      this.assign('userid', 0);\n    }\n    let priv = await this.model(\"category_priv\").priv(cate.id,roleid,'visit');\n    if(!priv){\n      this.http.error = new Error('您所在的用户组,禁止访问本栏目！');\n      return think.statusAction(700, this.http);\n    }\n\n    // 获取当前栏目的模型\n    let models = await this.model(\"category\").get_category(cate.id, 'model');\n    //获取模型信息\n    let modellist = [];\n    //console.log(111111111)\n    if (think.isEmpty(models)) {\n      modellist = null;\n    } else {\n      for (let val of models.split(\",\")) {\n        let modelobj = {}\n        modelobj.id = val;\n        modelobj.title = await this.model(\"model\").get_model(val, \"title\");\n        modellist.push(modelobj);\n      }\n    }\n    this.assign('modellist', modellist);\n    this.assign('model', models.split(\",\"));\n\n\n    this.meta_title = cate.meta_title ? cate.meta_title : cate.title; //标题\n    this.keywords = cate.keywords ? cate.keywords : ''; //seo关键词\n    this.description = cate.description ? cate.description : \"\"; //seo描述\n    //频道页只显示模板，默认不读取任何内容\n    //内容可以通过模板标签自行定制\n    //获取面包屑信息 \n    let breadcrumb = await this.model('category').get_parent_category(cate.id,true);\n    this.assign('breadcrumb', breadcrumb);\n    console.log(\"cover breadcrumb===========\"+JSON.stringify(breadcrumb));\n\n    let get_sub_category = await this.model('category').get_sub_category(cate.id);\n    this.assign('cate_id', get_sub_category[0]);\n    // console.log(\"cover get_sub_category===========\"+JSON.stringify(get_sub_category));\n\n    /* 模板赋值并渲染模板 */\n    this.assign('category', cate);\n    this.assign('group_id', 0);\n    this.assign('sortid', 0);\n\n    // console.log(\"cover category--------\"+JSON.stringify(cate));\n    let temp = cate.template_index ? `${cate.template_index}` : `${this.http.action}`;\n\n    //判断浏览客户端\n    if(checkMobile(this.userAgent())){\n      temp = cate.template_m_index ? `${cate.template_m_index}` : `${this.http.action}`\n      console.log(\"cover index===========,\"+`mobile/${this.http.controller}/${temp}`);\n      return this.display(`mobile/${this.http.controller}/${temp}`)\n    }else{\n      console.log(\"cover index===========\"+temp);\n      console.log(\"cover category===========\"+JSON.stringify(cate));\n      return this.display(temp);\n    }\n  }\n}"
    ]
}