{
    "version": 3,
    "sources": [
        "../../../src/topic/controller/keyword.js"
    ],
    "names": [
        "init",
        "http",
        "active",
        "indexAction",
        "q",
        "get",
        "map",
        "think",
        "isEmpty",
        "discuss_count_update",
        "Date",
        "valueOf",
        "model",
        "page",
        "where",
        "order",
        "countSelect",
        "list",
        "html",
        "desc",
        "pageNum",
        "url",
        "class",
        "text",
        "next",
        "prev",
        "total",
        "assign",
        "meta_title",
        "keywords",
        "description",
        "display",
        "listAction",
        "split",
        "console",
        "log",
        "get_model",
        "key_show",
        "models",
        "mod",
        "keyname",
        "find",
        "topic",
        "extend",
        "tagid",
        "id",
        "mod_id",
        "join",
        "table",
        "name",
        "as",
        "on",
        "data",
        "v",
        "imgs",
        "img_text_view",
        "detail",
        "param",
        "mod_type",
        "is_login",
        "key_id",
        "uid",
        "user",
        "focus"
    ],
    "mappings": "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",
    "file": "../../../src/topic/controller/keyword.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\n\nimport Base from './base.js';\nimport pagination from 'think-pagination';\nexport default class extends Base {\n    init(http) {\n        super.init(http);\n        this.active = \"/topic\";\n    }\n  /**\n   * index action\n   * @return {Promise} []\n   */\n async indexAction(){\n     let q = this.get('key');\n      let map ={}\n      if(!think.isEmpty(q)){\n          switch (q){\n              case 'week':\n                  //todo\n                  map.discuss_count_update = [\">\",new Date().valueOf() - (7*3600*3600*1000)]\n                  break;\n              case 'month':\n                  //todo\n                  map.discuss_count_update = [\">\",new Date().valueOf() - (30*3600*3600*1000)]\n                  break;\n          }\n      }\n      let list = await this.model('keyword').page(this.get('page'),15).where(map).order(\"videonum DESC,focus_count DESC\").countSelect();\n      let html = pagination(list, this.http, {\n          desc: false, //show description\n          pageNum: 2,\n          url: '', //page url, when not set, it will auto generated\n          class: 'nomargin', //pagenation extra class\n          text: {\n              next: '下一页',\n              prev: '上一页',\n              total: 'count: ${count} , pages: ${pages}'\n          }\n      });\n      this.assign('pagination', html);\n      //console.log(list);\n      this.assign(\"list\",list);\n      //seo\n      this.meta_title = \"话题\"; //标题\n      this.keywords =  \"话题\"; //seo关键词\n      this.description =  \"话题\"; //seo描述\n    //auto render template file index_index.html\n    return this.display();\n  }\n\n async listAction(){\n     let q = this.get(\"key\").split(\",\");\n     console.log(q);\n\n     //获取所有的模型\n     let models = await this.model(\"model\").get_model(null,null,{key_show:1});\n     this.assign(\"models\",models);\n     //获取当前模型\n     let mod = await this.model(\"model\").get_model(q[1]);\n     console.log(mod);\n     this.assign(\"mod\",mod);\n\n     //获取当前话题\n     let topic = await this.model(\"keyword\").where({keyname:q[0]}).find();\n     this.assign(\"topic\",topic);\n     console.log(topic);\n\n     let list=[];\n     if(!think.isEmpty(q[1])){\n         if(mod.extend==0){\n             list = await this.model('keyword_data').where({tagid:topic.id,mod_id:q[1]}).page(this.get('page'),10).join({\n                 table: mod.name,\n                 join: \"left\", //join 方式，有 left, right, inner 3 种方式\n                 as: \"c\", // 表别名\n                 on: [\"docid\", \"id\"] //ON 条件\n             }).order(\"c.id DESC\").countSelect();\n             if(mod.id==8){\n                 for (let v of list.data){\n                     v.imgs = img_text_view(v.detail,200,120);\n                 }\n             }\n         }else {\n             list = await this.model('keyword_data').where({tagid:topic.id,mod_id:q[1]}).page(this.param('page'),10)\n                 .join({\n                     table: \"document\",\n                     join: \"left\", //join 方式，有 left, right, inner 3 种方式\n                     as: \"c\", // 表别名\n                     on: [\"docid\", \"id\"] //ON 条件\n                 }).order(\"c.id DESC\").countSelect();\n         }\n     }else {\n         list = await this.model('keyword_data').where({tagid:topic.id,mod_type:0}).page(this.param('page'),10)\n             .join({\n                 table: \"document\",\n                 join: \"left\", //join 方式，有 left, right, inner 3 种方式\n                 as: \"c\", // 表别名\n                 on: [\"docid\", \"id\"] //ON 条件\n             }).order(\"c.id DESC\").countSelect();\n     }\n\n     let html = pagination(list, this.http, {\n         desc: false, //show description\n         pageNum: 2,\n         url: '', //page url, when not set, it will auto generated\n         class: 'nomargin', //pagenation extra class\n         text: {\n             next: '下一页',\n             prev: '上一页',\n             total: 'count: ${count} , pages: ${pages}'\n         }\n     });\n     this.assign('pagination', html);\n     console.log(list);\n     this.assign(\"list\",list);\n     //该主题是否被关注。\n     if(this.is_login) {\n         let focus = await this.model(\"keyword_focus\").where({key_id: topic.id, uid:this.user.uid}).find();\n         this.assign(\"focus\", focus);\n     }\n     //seo\n     this.meta_title = topic.keyname; //标题\n     this.keywords = topic.keyname; //seo关键词\n     this.description = topic.description; //seo描述\n\n     this.assign(\"key\",q[0]);\n     return this.display();\n }\n}"
    ]
}