{
    "version": 3,
    "sources": [
        "../../../src/api/controller/document.js"
    ],
    "names": [
        "locale",
        "init",
        "http",
        "__before",
        "method",
        "toLowerCase",
        "fail",
        "getAction",
        "data",
        "id",
        "modelInstance",
        "detail",
        "model",
        "get_category",
        "category_id",
        "catename",
        "get_nickname",
        "uid",
        "update_time",
        "fromNow",
        "success",
        "map",
        "o",
        "cid",
        "get",
        "order",
        "think",
        "isNumberString",
        "get_sub_category",
        "subcate",
        "push",
        "view",
        "where",
        "page",
        "countSelect",
        "http_",
        "config",
        "http__",
        "v",
        "imgarr",
        "cover_id",
        "get_pic",
        "pic",
        "indexOf",
        "host",
        "isEmpty",
        "pics",
        "split",
        "i",
        "imgurl",
        "controller",
        "rest"
    ],
    "mappings": "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",
    "file": "../../../src/api/controller/document.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\n/**\n * rest controller\n * @type {Class}\n */\nimport moment from \"moment\"\nmoment.locale('zh-cn');\nexport default class extends think.controller.rest {\n  /**\n   * init\n   * @param  {Object} http []\n   * @return {}      []\n   */\n  init(http){\n    super.init(http);\n  }\n  /**\n   * before magic method\n   * @return {Promise} []\n   */\n  __before(){\n\n      if(this.http.method.toLowerCase() != \"get\"){\n          return this.fail(\"method err\")\n      };\n  }\n\n    /**\n     * 默认最新列表\n     * \"/api/document\"\n     * cid:栏目id\n     * order: new:默认最新，hot:热点,\n     * @returns {Promise<PreventPromise>}\n     */\n\n    async getAction(){\n        let data;\n        if (this.id) {\n            //let pk = await this.modelInstance.getPk();\n            data = await this.modelInstance.detail(this.id);\n            //data.content=html_encode(data.content);\n            data.catename = await this.model(\"category\").get_category(data.category_id, \"title\");\n            data.uid = await get_nickname(data.uid);\n            data.update_time = moment(data.update_time).fromNow()\n            return this.success(data);\n        }\n        let map={'pid':0, 'status': 1};\n        let o = {};\n        let cid = this.get('cid')||0;\n        let order = this.get('order');\n        if(cid !=0 && think.isNumberString(cid)){\n            //获取当前分类的所有子栏目\n            let subcate = await this.model('category').get_sub_category(cid);\n            // console.log(subcate);\n            subcate.push(cid);\n          map.category_id = ['IN',subcate];\n        }else if (cid == \"hot\") {\n            o.view = 'DESC';\n        }else {\n            o.update_time = 'DESC';\n        }\n        if(order == \"hot\"){\n            o.view = 'DESC';\n        }else {\n            o.update_time = 'DESC';\n        }\n        data = await this.modelInstance.where(map).page(this.get('page')).order(o).countSelect();\n        let http_=this.config(\"http_\")==1?\"http\":\"https\";\n        let http__;\n        for(let v of data.data){\n            let imgarr = [];\n            if(v.cover_id !=0){\n                let pic = await get_pic(v.cover_id,1,360,240);\n                if(pic.indexOf(\"//\")==0){\n                     http__ =`${http_}:`;\n                }else {\n                     http__ =`${http_}://${this.http.host}`;\n                }\n                imgarr.push(http__+pic)\n            }\n            if(!think.isEmpty(v.pics)){\n                let pics = v.pics.split(\",\")\n                for(let i of pics){\n                    let pic = await get_pic(i,1,360,240);\n                    if(pic.indexOf(\"//\")==0){\n                        http__ =`${http_}:`;\n                    }else {\n                        http__ =`${http_}://${this.http.host}`;\n                    }\n                    imgarr.push(http__+pic)\n                }\n            }\n            v.imgurl=imgarr;\n            v.catename = await this.model(\"category\").get_category(v.category_id, \"title\");\n            v.uid = await get_nickname(v.uid);\n            v.update_time = moment(v.update_time).fromNow()\n        }\n        return this.success(data);\n    }\n\n}"
    ]
}