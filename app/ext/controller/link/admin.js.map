{
    "version": 3,
    "sources": [
        "../../../../src/ext/controller/link/admin.js"
    ],
    "names": [
        "indexAction",
        "typeid",
        "get",
        "assign",
        "map",
        "model",
        "where",
        "page",
        "countSelect",
        "data",
        "Pages",
        "think",
        "adapter",
        "pages",
        "http",
        "gettype",
        "display",
        "ajaxaddAction",
        "isPost",
        "post",
        "linktype",
        "isEmpty",
        "logo",
        "fail",
        "add",
        "res",
        "success",
        "name",
        "meta_title",
        "ajaxeditAction",
        "id",
        "update",
        "find",
        "link",
        "console",
        "log",
        "delAction",
        "ids",
        "param",
        "delete",
        "applyAction",
        "passed"
    ],
    "mappings": "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",
    "file": "../../../../src/ext/controller/link/admin.js",
    "sourcesContent": [
        "'use strict';\n/**\n * 插件后台控制器\n * 如果插件有后台管理业务写在这个控制器里面\n */\nimport Base from '../admin.js';\nexport default class extends Base {\n  /**\n   * index action\n   * 插件管理入口\n   * 友情链接管理列表\n   * @return {Promise} []\n   */\n  async indexAction(){\n    //auto render template file index_index.html\n    let typeid = this.get(\"typeid\")||0;\n    this.assign(\"typeid\",typeid);\n    let map = {}\n      if(typeid>0){\n          map.typeid =typeid\n      }\n    //获取友情链接\n    let data = await this.model(\"ext_link\").where(map).page(this.get('page')).countSelect();\n    //console.log(data);\n    let Pages = think.adapter(\"pages\", \"page\"); //加载名为 dot 的 Template Adapter\n    let pages = new Pages(this.http); //实例化 Adapter\n    let page = pages.pages(data);\n    this.assign('pagerData', page); //分页展示使用\n    this.assign('list', data.data);\n    //获取当前插件的分类\n    this.assign(\"type\",await this.gettype());\n    return this.display();\n  }\n\n  /**\n   * 添加友情链接\n   * @returns {*}\n   */\n async ajaxaddAction(){\n    if(this.isPost()){\n      let data = this.post();\n      if(data.linktype==1){\n        if(think.isEmpty(data.logo)){\n          return this.fail(\"logo链接类型，请填写logo地址！\")\n        }\n      }\n      let res = await this.model(\"ext_link\").add(data);\n      if(res){\n        return this.success({name:\"添加成功!\"})\n      }else {\n        return this.fail(\"添加失败！\")\n      }\n    }else {\n      //获取当前插件的分类\n      this.assign(\"type\",await this.gettype());\n      this.meta_title=\"添加友情链接\";\n      return this.display();\n    }\n\n  }\n\n    /**\n     * 修改友情链接\n     */\n    async ajaxeditAction(){\n        if(this.isPost()){\n            let data = this.post();\n            if(data.linktype==1){\n                if(think.isEmpty(data.logo)){\n                    return this.fail(\"logo链接类型，请填写logo地址！\")\n                }\n            }\n            let res = await this.model(\"ext_link\").where({id:data.id}).update(data);\n            if(res){\n                return this.success({name:\"修改成功!\"})\n            }else {\n                return this.fail(\"修改失败！\")\n            }\n        }else {\n            let id = this.get(\"id\");\n            let link = await this.model(\"ext_link\").find(id);\n            console.log(link);\n            this.assign(\"link\",link);\n            //获取当前插件的分类\n            this.assign(\"type\",await this.gettype());\n            this.meta_title=\"添加友情链接\";\n            return this.display();\n        }\n\n    }\n    async delAction(){\n        let ids = this.param(\"ids\");\n        //console.log(ids);\n        let res = await this.model(\"ext_link\").where({id:[\"IN\",ids]}).delete()\n        if(res){\n            return this.success({name:\"删除成功!\"})\n        }else {\n            return this.fail(\"删除失败！\")\n        }\n    }\n\n  /**\n   *  友情链接审核申请\n   * @returns {*}\n   */\n  async applyAction(){\n      if(this.isPost()){\n          let ids = this.post(\"ids\");\n          let res = await this.model(\"ext_link\").where({id:[\"IN\",ids]}).update({passed:1});\n          if(res){\n              return this.success({name:\"审核成功!\"})\n          }else {\n              return this.fail(\"审核失败！\")\n          }\n      }else {\n          //获取友情链接\n          let data = await this.model(\"ext_link\").where({passed:0}).page(this.get('page')).countSelect();\n          //console.log(data);\n          let Pages = think.adapter(\"pages\", \"page\"); //加载名为 dot 的 Template Adapter\n          let pages = new Pages(this.http); //实例化 Adapter\n          let page = pages.pages(data);\n          this.assign('pagerData', page); //分页展示使用\n          this.assign('list', data.data);\n          return this.display();\n      }\n\n  }\n\n}"
    ]
}