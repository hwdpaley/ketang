{
    "version": 3,
    "sources": [
        "../../../src/ext/controller/admin.js"
    ],
    "names": [
        "__before",
        "tactive",
        "active",
        "model",
        "where",
        "ext",
        "http",
        "controller",
        "split",
        "find",
        "meta_title",
        "name",
        "think",
        "isEmpty",
        "setting",
        "JSON",
        "parse",
        "gettype",
        "order",
        "select",
        "data",
        "sortAction",
        "self",
        "table",
        "id",
        "console",
        "log",
        "param",
        "sort",
        "v",
        "map",
        "push",
        "updateMany",
        "res",
        "success",
        "fail",
        "settingAction",
        "isPost",
        "post",
        "update",
        "assign",
        "display",
        "typeAction",
        "page",
        "get",
        "countSelect",
        "Pages",
        "adapter",
        "pages",
        "typesortAction",
        "typeid",
        "typedelAction",
        "ids",
        "delete",
        "typeaddAction",
        "add",
        "typeeditAction",
        "type"
    ],
    "mappings": "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",
    "file": "../../../src/ext/controller/admin.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n\n'use strict';\nimport Base from '../../admin/controller/base.js';\nexport default class extends Base {\n  /**\n   * some base method in here\n   */\n  async __before(){\n    await  super.__before();\n    this.tactive = \"ext\";\n    this.active ='admin/ext/index';\n    this.ext = await this.model(\"ext\").where({ext:this.http.controller.split(\"/\")[0]}).find();\n    //console.log(this.ext);\n    this.meta_title = this.ext.name+\"管理\";\n    if(!think.isEmpty(this.ext.setting)){\n      this.setting = JSON.parse(this.ext.setting)\n    }else {\n      this.setting = {}\n    }\n  }\n\n  /**\n   * 获取当前插件分类\n   * @returns {*}\n   */\n  async gettype(){\n    let data = await this.model(\"ext_type\").where({ext:this.ext.ext}).order(\"sort ASC\").select();\n    return data;\n  }\n\n  /**\n   * 排序\n   * @param self\n   * @param model 表名\n   * @param id 主键\n   * @returns {*}\n   */\n  async sortAction(self,table,id='id'){\n    table = table||\"ext_\"+this.http.controller.split(\"/\")[0];\n      console.log(table);\n      let param = this.param();\n    let sort = JSON.parse(param.sort);\n      console.log(sort);\n      let data =[]\n    for(let v of sort){\n      let map={}\n      map[id]=v.id;\n      map.sort =v.sort;\n      data.push(map)\n    }\n    let res = await this.model(table).updateMany(data);\n    if (res>0) {\n      return this.success({ name: \"更新排序成功！\"});\n    } else {\n      return this.fail(\"排序失败！\");\n    }\n  }\n\n  /**\n   *  插件配置管理。\n   */\n  async settingAction(){\n    if(this.isPost()){\n      let data = this.post();\n      if(think.isEmpty(data.ext)){\n        data.ext = this.ext.ext;\n      }\n     // console.log(data);\n      let res = await this.model(\"ext\").where({ext:this.ext.ext}).update({setting:JSON.stringify(data)});\n      if (res) {\n        return this.success({ name: \"更新成功！\"});\n      } else {\n        return this.fail(\"更新失败！\");\n      }\n    }else {\n      this.assign(\"setting\",this.setting);\n      return this.display();\n    }\n\n  }\n  /**\n   * 插件分类管理\n   * @returns {*}\n   */\n async typeAction(){\n    //获取友情链接\n    let data = await this.model(\"ext_type\").where({ext:this.ext.ext}).page(this.get('page')).order(\"sort ASC\").countSelect();\n    //console.log(data);\n    let Pages = think.adapter(\"pages\", \"page\"); //加载名为 dot 的 Template Adapter\n    let pages = new Pages(this.http); //实例化 Adapter\n    let page = pages.pages(data);\n    this.assign('pagerData', page); //分页展示使用\n    this.assign('list', data.data);\n    return this.display();\n  }\n  /**\n   * 排序\n   * @param self\n   * @param model 表名\n   * @param id 主键\n   * @returns {*}\n   */\n  async typesortAction(){\n    let param = this.param();\n    let sort = JSON.parse(param.sort);\n    let data =[]\n    for(let v of sort){\n      let map={}\n      map.typeid=v.id;\n      map.sort =v.sort;\n      data.push(map)\n    }\n    let res = await this.model(\"ext_type\").updateMany(data);\n    if (res>0) {\n      return this.success({ name: \"更新排序成功！\"});\n    } else {\n      return this.fail(\"排序失败！\");\n    }\n  }\n\n  /**\n   * 删除分类\n   * @returns {*}\n   */\n  async typedelAction(){\n    let ids = this.param(\"ids\");\n    //console.log(ids);\n    let res = await this.model(\"ext_type\").where({typeid:[\"IN\",ids]}).delete()\n    if(res){\n      return this.success({name:\"删除成功!\"})\n    }else {\n      return this.fail(\"删除失败！\")\n    }\n  }\n  /**\n   * 添加类别\n   * @returns {*}\n   */\n  async typeaddAction(){\n    if(this.isPost()){\n      let data = this.post();\n      data.ext = this.ext.ext;\n      let res = await this.model(\"ext_type\").add(data);\n      if(res){\n        return this.success({name:\"添加成功!\"})\n      }else {\n        return this.fail(\"添加失败！\")\n      }\n    }else {\n      this.meta_title=\"添加类别\";\n      return this.display();\n    }\n\n  }\n  /**\n   * 修改友情链接\n   */\n  async typeeditAction(){\n    if(this.isPost()){\n      let data = this.post();\n      data.ext = this.ext.ext;\n      let res = await this.model(\"ext_type\").where({typeid:data.typeid}).update(data);\n      if(res){\n        return this.success({name:\"修改成功!\"})\n      }else {\n        return this.fail(\"修改失败！\")\n      }\n    }else {\n      let id = this.get(\"id\");\n      let type = await this.model(\"ext_type\").where({typeid:id}).find();\n      console.log(type);\n      this.assign(\"type\",type);\n      //获取当前插件的分类\n      this.meta_title=\"修改类别\";\n      return this.display();\n    }\n\n  }\n}"
    ]
}