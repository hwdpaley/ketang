{
    "version": 3,
    "sources": [
        "../../../src/mod/model/question_answer.js"
    ],
    "names": [
        "updates",
        "data",
        "id",
        "think",
        "isEmpty",
        "answer_id",
        "add_time",
        "Date",
        "getTime",
        "add",
        "model",
        "where",
        "question_id",
        "increment",
        "update",
        "answer_users",
        "uid",
        "last_answer",
        "update_time",
        "thenAdd",
        "answer_count",
        "userup",
        "type",
        "base"
    ],
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAII;qBACMA,O;;gBAAQC,I,uEAAK,I;;;;;;AACf;AACIC,8B,GAAK,I;;iCACNC,MAAMC,OAAN,CAAcH,KAAKI,SAAnB,C;;;;;AAAgC;AAC/BJ,iCAAKK,QAAL,GAAgB,IAAIC,IAAJ,GAAWC,OAAX,EAAhB;;mCACW,KAAKC,GAAL,CAASR,IAAT,C;;;AAAXC,8B;;iCACGA,E;;;;;;mCACO,KAAKQ,KAAL,CAAW,UAAX,EAAuBC,KAAvB,CAA6B,EAACT,IAAGD,KAAKW,WAAT,EAA7B,EAAoDC,SAApD,CAA8D,cAA9D,C;;;;mCACA,KAAKH,KAAL,CAAW,UAAX,EAAuBC,KAAvB,CAA6B,EAACT,IAAGD,KAAKW,WAAT,EAA7B,EAAoDE,MAApD,CAA2D,EAACC,cAAad,KAAKe,GAAnB,EAAuBC,aAAYf,EAAnC,EAAsCgB,aAAYjB,KAAKK,QAAvD,EAA3D,C;;;;mCAGa,KAAKI,KAAL,CAAW,eAAX,EAA4BS,OAA5B,CAAoC,EAACC,cAAa,CAAd,EAAgBJ,KAAIf,KAAKe,GAAzB,EAApC,EAAkE,EAACA,KAAIf,KAAKe,GAAV,EAAlE,C;;;AAAfK,kC;;kCACDA,OAAOC,IAAP,IAAa,O;;;;;;mCACN,KAAKZ,KAAL,CAAW,eAAX,EAA4BC,KAA5B,CAAkC,EAACK,KAAIK,OAAOnB,EAAZ,EAAlC,EAAmDW,SAAnD,CAA6D,cAA7D,EAA6E,CAA7E,C;;;;;;;;mCAIX,KAAKF,KAAL,CAAW,EAACN,WAAUJ,KAAKI,SAAhB,EAAX,EAAuCS,MAAvC,CAA8Cb,IAA9C,C;;;6DAEA,EAACA,MAAKA,IAAN,EAAWC,IAAGA,EAAd,E;;;;;;;;;;;;;;;;;;EArBcC,MAAMO,KAAN,CAAYa,I",
    "file": "../../../src/mod/model/question_answer.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n\n'use strict';\n/**\n * model\n */\nexport default class extends think.model.base {\n    //更新回复\n    async updates(data=null){\n        //添加或者新增基础内容\n        let id = null;\n        if(think.isEmpty(data.answer_id)) {//新增主题\n            data.add_time = new Date().getTime();\n            id = await this.add(data);\n            if(id){\n                await this.model(\"question\").where({id:data.question_id}).increment('answer_count');\n                await this.model(\"question\").where({id:data.question_id}).update({answer_users:data.uid,last_answer:id,update_time:data.add_time});\n                //更新用户统计信息\n                //初始化如果没有就添加\n                let userup = await this.model(\"question_user\").thenAdd({answer_count:1,uid:data.uid},{uid:data.uid});\n                if(userup.type==\"exist\"){\n                    await this.model(\"question_user\").where({uid:userup.id}).increment(\"answer_count\", 1);\n                }\n            }\n        }else {//更新主题\n         await this.where({answer_id:data.answer_id}).update(data);\n        }\n        return {data:data,id:id};\n    }\n}"
    ]
}