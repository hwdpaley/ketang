{
    "version": 3,
    "sources": [
        "../../../src/mod/model/author.js"
    ],
    "names": [
        "updates",
        "data",
        "time",
        "Date",
        "getTime",
        "think",
        "isEmpty",
        "id",
        "create_time",
        "valueOf",
        "update_time",
        "status",
        "console",
        "log",
        "add",
        "error",
        "sort_id",
        "sortarr",
        "sortdata",
        "k",
        "arr",
        "split",
        "obj",
        "value",
        "isArray",
        "model",
        "where",
        "identifier",
        "getField",
        "optionid",
        "sortid",
        "fid",
        "category_id",
        "tid",
        "push",
        "addMany",
        "addsearch",
        "model_id",
        "update",
        "updatesearch",
        "count",
        "cou",
        "delete",
        "base"
    ],
    "mappings": "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",
    "file": "../../../src/mod/model/author.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n\n'use strict';\n/**\n * model\n */\nexport default class extends think.model.base {\n\n    /**\n     * 更新或者新增一个文档\n     * @param data 手动传入的数据\n     * @returns boolean fasle 失败 ， int  成功 返回完整的数据\n     */\n    async updates(data,time=new Date().getTime()){\n        //console.log(data);\n        data=data||null;\n        //添加或者新增基础内容\n        if(think.isEmpty(data.id)){//新增数据\n            if(think.isEmpty(data.create_time)){\n                data.create_time = time;\n            }else{\n                data.create_time = data.create_time!=0? new Date(data.create_time).valueOf():time;\n            }\n            data.update_time=new Date().getTime();\n            data.status = 1;\n            console.log(data);\n            //return false;\n            var id = await this.add(data);//添加基础数据\n            //let id = 100;\n            if(!id){\n                this.error = '新增基础内容出错！';\n                return false\n            }else {\n                //添加分类信息\n                if(data.sort_id !=0 && !think.isEmpty(data.sort_id)){\n                    let sortarr = [];\n                    let sortdata = {};\n                    for(let k in data){\n                        let arr = k.split(\"_\");\n                        if(arr[0]==\"sortid\" && !think.isEmpty(arr[1])){\n                            let obj ={}\n                            obj.value = think.isArray(data[k])?JSON.stringify(data[k]):data[k];\n                            obj.optionid = await this.model(\"typeoption\").where({identifier:arr[1]}).getField(\"optionid\",true);\n                            obj.sortid = data.sort_id;\n                            obj.fid = data.category_id;\n                            obj.tid = id;\n                            sortarr.push(obj);\n                            sortdata[arr[1]] = think.isArray(data[k])?JSON.stringify(data[k]):data[k];\n                            sortdata.tid = id;\n                            sortdata.fid = data.category_id;\n                        }\n                    }\n                    //console.log(sortarr);\n                    //console.log(sortdata);\n                    //return false;\n                    //添加分类\n                    this.model(\"typeoptionvar\").addMany(sortarr);\n                    this.model(\"type_optionvalue\"+data.sort_id).add(sortdata);\n                }\n                //添加关键词\n                //添加关键词\n                /**\n                 * 添加话题\n                 * @param keyname \"话题1,话题2.话题3\"\n                 * @param id  \"主题id\"\n                 * @param uid \"用户id\"\n                 * @param mod_id \"模型id\"\n                 * @param mod_type \"模型类型 0系统模型，1独立模型\"\n                 */\n               //await this.model(\"keyword\").addkey(data.keyname,id,data.uid,data.model_id,0);\n                //添加到搜索\n                await this.model(\"search\").addsearch(data.model_id,id,data);\n            }\n        }else {//更新内容\n            data.update_time=new Date().getTime();\n            if(!think.isEmpty(data.create_time)){\n                data.create_time = data.create_time!=0? new Date(data.create_time).valueOf():new Date().getTime();\n            }\n            // //更新关键词\n            // await this.model(\"keyword\").updatekey(data.keyname,data.id,data.userid,data.model_id,0);\n            let status = this.update(data);\n            if(!status){\n                this.error = '更新基础内容出错！';\n                return false;\n            }else {\n                //更新搜索\n                await this.model(\"search\").updatesearch(data.model_id,data);\n                if(data.sort_id !=0 && !think.isEmpty(data.sort_id)){\n                    let sortdata = {};\n                    let sortarr = [];\n                    for(let k in data){\n                        let arr = k.split(\"_\");\n                        if(arr[0]==\"sortid\" && !think.isEmpty(arr[1])){\n                            let obj ={}\n                            obj.value = think.isArray(data[k])?JSON.stringify(data[k]):data[k];\n                            obj.optionid = await this.model(\"typeoption\").where({identifier:arr[1]}).getField(\"optionid\",true);\n                            obj.sortid = data.sort_id;\n                            obj.fid = data.category_id;\n                            obj.tid = data.id;\n                            sortarr.push(obj);\n                            sortdata[arr[1]] = think.isArray(data[k])?JSON.stringify(data[k]):data[k];\n                            sortdata.tid = data.id;\n                            sortdata.fid = data.category_id;\n                        }\n                    }\n                    //console.log(sortarr);\n                    //console.log(sortdata);\n                    let cou = await this.model(\"type_optionvalue\"+data.sort_id).where({tid:data.id}).count(\"tid\");\n                    if(cou > 0){\n                        await this.model(\"type_optionvalue\"+data.sort_id).where({tid:data.id}).update(sortdata);\n                    }else {\n                        await this.model(\"type_optionvalue\"+data.sort_id).add(sortdata);\n                    }\n                    this.model(\"typeoptionvar\").where({tid:data.id}).delete();\n                    //添加分类\n                    this.model(\"typeoptionvar\").addMany(sortarr);\n                }\n            }\n\n        }\n\n        return {data:data,id:id};\n    }\n\n}"
    ]
}