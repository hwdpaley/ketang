{
    "version": 3,
    "sources": [
        "../../../../src/mod/controller/author/admin.js"
    ],
    "names": [
        "init",
        "http",
        "tactive",
        "indexAction",
        "cate_id",
        "get",
        "group_id",
        "sortid",
        "think",
        "isEmpty",
        "error",
        "Error",
        "statusAction",
        "model",
        "get_parent_category",
        "nav",
        "assign",
        "get_category",
        "sort",
        "JSON",
        "parse",
        "defaultshow",
        "where",
        "select",
        "typevar",
        "val",
        "optionid",
        "find",
        "option",
        "type",
        "rules",
        "parse_type_attr",
        "choices",
        "parse_config_attr",
        "console",
        "log",
        "v",
        "id",
        "searchtxt",
        "searcharr",
        "arr",
        "split",
        "len",
        "length",
        "i",
        "obj",
        "name",
        "unit",
        "pid",
        "push",
        "db",
        "mod",
        "map",
        "get_sub_category",
        "subcate",
        "category_id",
        "nsobj",
        "sortval",
        "qarr",
        "vv",
        "Number",
        "groups",
        "title",
        "list",
        "join",
        "table",
        "as",
        "on",
        "order",
        "page",
        "countSelect",
        "Pages",
        "adapter",
        "pages",
        "meta_title",
        "m_cate",
        "modtemp",
        "addAction",
        "admin_priv",
        "editAction",
        "fail",
        "data",
        "get_model",
        "model_id",
        "sort_id",
        "tid",
        "fid",
        "getField",
        "value",
        "active",
        "updateAction",
        "post",
        "updates",
        "res",
        "user",
        "uid",
        "ip",
        "url",
        "success"
    ],
    "mappings": "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",
    "file": "../../../../src/mod/controller/author/admin.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n\n'use strict';\n\nimport Base from '../admin.js';\n\nexport default class extends Base {\n    init(http) {\n        super.init(http);\n        this.tactive = \"article\";\n    }\n    /**\n     * 模型后台管理入口\n     * index action\n     * @return {Promise} []\n     */\n    async indexAction(){\n        let cate_id = this.get('cate_id') || null;\n        let group_id =  this.get('group_id') || 0;\n        let sortid = this.get('sortid')||0;\n        if(think.isEmpty(cate_id)){\n            this.http.error = new Error('该栏目不存在！');\n            return think.statusAction(702, this.http);\n        }\n        //获取面包屑信息\n        let nav = await this.model('category').get_parent_category(cate_id);\n        this.assign('breadcrumb', nav);\n        // 获取分类信息\n        let sort = await this.model(\"category\").get_category(cate_id, 'documentsorts');\n        if (sort) {\n            sort = JSON.parse(sort);\n            if(sortid==0){\n                sortid=sort.defaultshow;\n            }\n            let typevar = await this.model(\"typevar\").where({sortid:sortid}).select();\n            for (let val of typevar){\n\n                val.option= await this.model(\"typeoption\").where({optionid:val.optionid}).find();\n                if(val.option.type == 'select'||val.option.type == 'radio'){\n                    if(!think.isEmpty(val.option.rules)){\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.rules=parse_type_attr(val.option.rules.choices);\n                        val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n                    }\n\n                }else if(val.option.type == 'checkbox'){\n                    if(!think.isEmpty(val.option.rules)){\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.rules=parse_type_attr(val.option.rules.choices);\n                        console.log(val.rules);\n                        for(let v of val.rules){\n                            v.id = \"l>\"+v.id\n                        }\n                        val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n                        //console.log(val.rules);\n                    }\n                }else if(val.option.type == 'range'){\n                    if(!think.isEmpty(val.option.rules)){\n                        let searchtxt = JSON.parse(val.option.rules).searchtxt;\n                        let searcharr = []\n                        if(!think.isEmpty(searchtxt)){\n                            let arr = searchtxt.split(\",\");\n                            let len = arr.length;\n                            for (var i=0;i<len;i++)\n                            {\n                                let obj = {}\n                                if (!think.isEmpty(arr[i-1])){\n                                    if(i==1){\n                                        obj.id = 'd>'+arr[i];\n                                        obj.name = '低于'+arr[i]+val.option.unit;\n                                        obj.pid=0\n                                        searcharr.push(obj);\n                                    }else {\n                                        obj.id = arr[i-1]+'>'+arr[i];\n                                        obj.name = arr[i-1]+\"-\"+arr[i]+val.option.unit;\n                                        obj.pid=0\n                                        searcharr.push(obj)\n                                    }\n\n                                }\n\n                            }\n                            searcharr.push({id:'u>'+arr[len-1],name:'高于'+arr[len-1]+val.option.unit,pid:0})\n                        }\n                        //console.log(searcharr);\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.rules=searcharr;\n                        // val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n\n                    }\n                }\n            }\n            //console.log(typevar);\n            this.assign(\"typevar\",typevar);\n        }\n        //console.log(sort);\n        this.assign(\"sort\",sort);\n        this.assign('sortid',sortid);\n        //获取内容\n        // 构建列表数据\n        let db = this.model(this.mod.name);\n        let map = {}\n        if (cate_id) {\n            //获取当前分类的所有子栏目\n            let subcate = await this.model('category').get_sub_category(cate_id);\n            // console.log(subcate);\n            subcate.push(cate_id);\n            map.category_id = ['IN', subcate];\n        }\n        if(group_id != 0){\n            map.group_id=group_id;\n        }\n        let nsobj = {};\n        if(!think.isEmpty(this.get('sortval'))) {\n            let sortval = this.get('sortval').split(\"|\");\n            nsobj = {}\n            for (let v of sortval) {\n                let qarr = v.split(\"_\");\n                nsobj[qarr[0]] = qarr[1];\n                if(qarr[1] !=0){\n                    let vv = qarr[1].split(\">\");\n                    //console.log(vv);\n                    if(vv[0]==\"d\" && !think.isEmpty(vv[1])){\n                        map[\"t.\"+qarr[0]] = [\"<\",vv[1]];\n                    }else if(vv[0]==\"u\" && !think.isEmpty(vv[1])){\n                        map[\"t.\"+qarr[0]] = [\">\",vv[1]];\n                    }else if(vv[0]==\"l\" && !think.isEmpty(vv[1])){\n                        map[\"t.\"+qarr[0]] = [\"like\",`%\"${vv[1]}\"%`];\n                    }else if(!think.isEmpty(vv[0])&&!think.isEmpty(vv[1])){\n                        map[\"t.\"+qarr[0]] = [\"BETWEEN\", Number(vv[0]), Number(vv[1])];\n                    }else {\n                        map[\"t.\"+qarr[0]] = qarr[1];\n                    }\n\n                }\n            }\n            this.assign(\"nsobj\",nsobj);\n\n        }\n        console.log(map);\n        //获取分组\n        let  groups = await this.model(\"category\").get_category(cate_id, 'groups');\n        if (groups) {\n            groups = parse_config_attr(groups);\n        }\n        this.assign('groups', groups);\n        //搜索\n        if(this.get(\"title\")){\n            map.title=[\"like\",\"%\"+this.get(\"title\")+\"%\"]\n        }\n        let list;\n        if(!think.isEmpty(this.get('sortval'))){\n            list = await db.join({\n                table: \"type_optionvalue\"+sortid,\n                join: \"left\", // 有 left,right,inner 3 个值\n                as: \"t\",\n                on: [\"id\", \"tid\"]\n\n            }).where(map).order('update_time DESC').page(this.get(\"page\"),20).countSelect();\n        }else {\n            list = await db.where(map).order('update_time DESC').page(this.get(\"page\"),20).countSelect();\n        }\n\n        console.log(list);\n        let Pages = think.adapter(\"pages\", \"page\"); //加载名为 dot 的 Template Adapter\n        let pages = new Pages(this.http); //实例化 Adapter\n        let page = pages.pages(list);\n        this.assign('list', list);\n        this.assign('pagerData', page); //分页展示使用\n        console.log(map);\n        this.meta_title = this.m_cate.title;\n        this.assign({\n            \"navxs\": true,\n            \"name\":this.m_cate.name,\n        });\n        this.assign('group_id', group_id);\n        //渲染模版\n        return this.modtemp(this.mod.name);\n    }\n\n    /**\n     * 添加名家\n     * @returns {Promise.<void>}\n     */\n    async addAction(){\n        let cate_id = this.get('cate_id') || null;\n        let group_id =  this.get('group_id') || 0;\n        let sortid = this.get('sortid')||0;\n        //权限验证\n        await this.admin_priv(\"add\",cate_id);\n        // 获取分组定义\n        let groups = await this.model(\"category\").get_category(cate_id, 'groups');\n        if (groups) {\n            groups = parse_config_attr(groups);\n        }\n        this.assign('groups',groups);\n        // 获取分类信息\n        let sort = await this.model(\"category\").get_category(cate_id, 'documentsorts');\n        if (sort) {\n            sort = JSON.parse(sort);\n            if(sortid==0){\n                sortid=sort.defaultshow;\n            }\n            let typevar = await this.model(\"typevar\").where({sortid:sortid}).select();\n            for (let val of typevar){\n\n                val.option= await this.model(\"typeoption\").where({optionid:val.optionid}).find();\n                if(val.option.type == 'select'){\n                    if(!think.isEmpty(val.option.rules)){\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.rules=parse_type_attr(val.option.rules.choices);\n                        val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n                    }\n\n                }else if (val.option.type ==\"radio\" || val.option.type ==\"checkbox\"){\n                    if(!think.isEmpty(val.option.rules)){\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n                    }\n                }else {\n                    if(!think.isEmpty(val.option.rules)){\n                        val.option.rules = JSON.parse(val.option.rules);\n                    }\n                }\n            }\n\n            this.assign(\"typevar\",typevar);\n        }\n        //console.log(sort);\n        this.assign(\"sort\",sort);\n        if(think.isEmpty(cate_id)){\n            this.http.error = new Error('该栏目不存在！');\n            return think.statusAction(702, this.http);\n        }\n        //获取面包屑信息\n        let nav = await this.model('category').get_parent_category(cate_id);\n        this.assign('breadcrumb', nav);\n\n        this.meta_title = \"添加\"+this.m_cate.title;\n        this.assign({\n            \"navxs\": true,\n            \"name\":this.m_cate.name,\n        });\n        //渲染模版\n       return this.modtemp(this.mod.name);\n    }\n\n    /**\n     * 编辑\n     *\n     */\n  async editAction(){\n        let id = this.get(\"id\")||\"\";\n        let sortid = this.get(\"sortid\")||0;\n        if(think.isEmpty(id)){\n            return this.fail(\"参数不能为空\");\n        }\n        let db = this.model(\"author\");\n        let data = await db.find(id);\n        console.log(data);\n        //权限验证\n        await this.admin_priv(\"edit\",data.category_id);\n        let model = await this.model(\"model\").get_model(data.model_id);\n        console.log(model);\n        // 获取分组定义\n        let groups = await this.model(\"category\").get_category(data.category_id, 'groups');\n        if (groups) {\n            groups = parse_config_attr(groups);\n        }\n        this.assign('groups',groups);\n        // 获取分类信息\n        let sort = await this.model(\"category\").get_category(data.category_id, 'documentsorts');\n        if (sort) {\n            sort = JSON.parse(sort);\n            if(sortid !=0){\n                data.sort_id=sortid;\n            }else if(data.sort_id==0){\n                data.sort_id=sort.defaultshow;\n            }\n            let typevar = await this.model(\"typevar\").where({sortid:data.sort_id}).select();\n            for (let val of typevar){\n\n                val.option= await this.model(\"typeoption\").where({optionid:val.optionid}).find();\n                if(val.option.type == 'select'){\n                    if(!think.isEmpty(val.option.rules)){\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n                        val.option.value = await this.model(\"typeoptionvar\").where({sortid:data.sort_id,tid:data.id,fid:data.category_id,optionid:val.option.optionid}).getField(\"value\",true)||\"\";\n                    }\n\n                }else if (val.option.type ==\"radio\" || val.option.type ==\"checkbox\"){\n                    if(!think.isEmpty(val.option.rules)){\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n                        val.option.value = await this.model(\"typeoptionvar\").where({sortid:data.sort_id,tid:data.id,fid:data.category_id,optionid:val.option.optionid}).getField(\"value\",true)||\"\";\n                    }\n                }else {\n                    if(!think.isEmpty(val.option.rules)){\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.option.value = await this.model(\"typeoptionvar\").where({sortid:data.sort_id,tid:data.id,fid:data.category_id,optionid:val.option.optionid}).getField(\"value\",true)||\"\";\n                    }\n                }\n            }\n             console.log(typevar);\n            this.assign(\"typevar\",typevar);\n\n        }\n        //console.log(sort);\n        this.assign(\"sort\",sort);\n        //获取面包屑信息\n        let nav = await this.model('category').get_parent_category(data.category_id);\n        //console.log(model);\n        this.assign('breadcrumb', nav);\n        this.meta_title = '编辑' + model.title;\n        this.active = \"admin/article/index\";\n        this.assign({\n            \"navxs\": true,\n        });\n        this.assign('data', data);\n        this.assign('model_id', data.model_id);\n        this.assign('model', model);\n        return this.modtemp(model.name);\n   }\n    /**\n     * 更新或者添加数据\n     */\n    async updateAction() {\n        let data = this.post();\n        let res = await this.model('author').updates(data);\n\n        if (res) {\n            //行为记录\n            if (!res.data.id) {\n                await this.model(\"action\").log(\"add_document\", \"document\", res.id, this.user.uid, this.ip(), this.http.url);\n                this.success({name: \"添加成功\", url: \"/mod/admin/index/cate_id/\" + res.data.category_id});\n            } else {\n                this.success({name: \"更新成功\", url: \"/mod/admin/index/cate_id/\" + res.data.category_id});\n            }\n\n        } else {\n            this.fail(\"操作失败！\");\n        }\n\n\n    }\n\n}"
    ]
}