{
    "version": 3,
    "sources": [
        "../../../../src/mod/controller/author/index.js"
    ],
    "names": [
        "locale",
        "indexAction",
        "end",
        "display",
        "listAction",
        "method",
        "http",
        "toLowerCase",
        "setCorsHeader",
        "get",
        "id",
        "query",
        "split",
        "cate",
        "m_cate",
        "think",
        "extend",
        "c_verify",
        "model",
        "mod",
        "assign",
        "get_sub_category",
        "subcate",
        "push",
        "num",
        "page_num",
        "get_parent_category",
        "breadcrumb",
        "map",
        "o",
        "order",
        "modget",
        "Number",
        "popular_value",
        "is_recommend",
        "answer_count",
        "update_time",
        "sortid",
        "isEmpty",
        "sort_id",
        "sortarr",
        "nsobj",
        "get_category",
        "sort",
        "JSON",
        "parse",
        "defaultshow",
        "where",
        "select",
        "typevar",
        "val",
        "optionid",
        "find",
        "option",
        "type",
        "rules",
        "parse_type_attr",
        "choices",
        "parse_config_attr",
        "console",
        "log",
        "v",
        "searchtxt",
        "searcharr",
        "arr",
        "len",
        "length",
        "i",
        "obj",
        "name",
        "pid",
        "optionidarr",
        "valuearr",
        "qarr",
        "vv",
        "fid",
        "group_id",
        "data",
        "join",
        "table",
        "as",
        "on",
        "page",
        "param",
        "countSelect",
        "html",
        "desc",
        "pageNum",
        "url",
        "class",
        "text",
        "next",
        "prev",
        "total",
        "count",
        "checkMobile",
        "userAgent",
        "isAjax",
        "get_nickname",
        "uid",
        "nickname",
        "create_time",
        "fromNow",
        "category_id",
        "catename",
        "detail",
        "replace",
        "answer_users",
        "answer_username",
        "json",
        "modtemp",
        "detailAction",
        "error",
        "Error",
        "statusAction",
        "isNumberString",
        "pinyin",
        "getField",
        "info",
        "meta_title",
        "title",
        "keywords",
        "keyname",
        "description",
        "category",
        "is_login",
        "question_id",
        "user",
        "focus",
        "focususer",
        "increment",
        "answer",
        "a",
        "answer_id",
        "ccount",
        "docid",
        "mod_type",
        "mod_id",
        "tagid",
        "rtid",
        "limit",
        "rq",
        "str",
        "img",
        "image_view",
        "infoAction",
        "author_id",
        "model_id",
        "level",
        "view",
        "list"
    ],
    "mappings": "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",
    "file": "../../../../src/mod/controller/author/index.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n\n'use strict';\nimport Base from '../index.js';\nimport pagination from 'think-pagination';\nimport moment from \"moment\"\nmoment.locale('zh-cn');\nexport default class extends Base {\n    /**\n     * index action\n     * @return {Promise} []\n     * 封面入口\n     */\n    indexAction() {\n        //console.log(this);\n        //auto render template file index_index.html\n\n        this.end(2222)\n        return this.display();\n    }\n    /**\n     * 列表入口\n     * @returns {*}\n     */\n    async listAction(){\n        //跨域\n        let method = this.http.method.toLowerCase();\n        if(method === \"options\"){\n            this.setCorsHeader();\n            this.end();\n            return;\n        }\n        this.setCorsHeader();\n        let get = this.get('category') || 0;\n        let id=0;\n        let query = get.split(\"-\");\n        if(get != 0){\n            id = query[0];\n        }\n        //获取栏目信息\n        let cate = this.m_cate;\n        cate = think.extend({}, cate);\n\n        //栏目权限验证\n        await this.c_verify(\"visit\");\n\n        // 获取当前栏目的模型\n        let model = this.mod;\n        this.assign('model', model);\n\n        //获取当前分类的所有子栏目\n        let subcate = await this.model('category').get_sub_category(cate.id);\n        subcate.push(cate.id);\n\n        //当前栏目列表每页行数\n        let num = this.page_num();\n\n        //获取面包屑信息\n        let breadcrumb = await this.model('category').get_parent_category(cate.id,true);\n\n        //获取列表数据\n        //条件\n        let map = {\n            'category_id': ['IN', subcate]\n        };\n        //排序\n        let o = {};\n\n        let order = this.modget(1)||0;\n        order = Number(order);\n        switch (order){\n            case 1:\n                o.popular_value = 'DESC';\n                break;\n            case 2:\n                map.is_recommend = 1;\n                o.id='DESC';\n                break;\n            case 3:\n                map.answer_count = 0;\n                o.id='DESC';\n                break;\n            default:\n                o.update_time = 'DESC';\n        }\n        this.assign('order',order);\n        // 获取分类信息\n        let sortid = query[3]||0;\n        if(!think.isEmpty(sortid)){\n            map.sort_id = sortid;\n        }\n        let sortarr = query[4]||null;\n        let nsobj = {};\n        let sort = await this.model(\"category\").get_category(cate.id, 'documentsorts');\n        if (sort) {\n            this.assign(\"sorturl\",get.split(\"-\")[4])\n            sort = JSON.parse(sort);\n            if(sortid==0){\n                sortid=sort.defaultshow;\n            }\n            let typevar = await this.model(\"typevar\").where({sortid:sortid}).order('displayorder ASC').select();\n            for (let val of typevar){\n\n                val.option= await this.model(\"typeoption\").where({optionid:val.optionid}).find();\n                if(val.option.type == 'select' ||val.option.type == 'radio'){\n                    if(!think.isEmpty(val.option.rules)){\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.rules=parse_type_attr(val.option.rules.choices);\n                        val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n                        //console.log(val.rules);\n                    }\n\n                }else if(val.option.type == 'checkbox'){\n                    if(!think.isEmpty(val.option.rules)){\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.rules=parse_type_attr(val.option.rules.choices);\n                        console.log(val.rules);\n                        for(let v of val.rules){\n                            v.id = \"l>\"+v.id\n                        }\n                        val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n                        //console.log(val.rules);\n                    }\n                }else if(val.option.type == 'range'){\n                    if(!think.isEmpty(val.option.rules)){\n                        let searchtxt = JSON.parse(val.option.rules).searchtxt;\n                        let searcharr = []\n                        if(!think.isEmpty(searchtxt)){\n                            let arr = searchtxt.split(\",\");\n                            let len = arr.length;\n                            for (var i=0;i<len;i++)\n                            {\n                                let obj = {}\n                                if (!think.isEmpty(arr[i-1])){\n                                    if(i==1){\n                                        obj.id = 'd>'+arr[i];\n                                        obj.name = '低于'+arr[i];\n                                        obj.pid=0\n                                        searcharr.push(obj);\n                                    }else {\n                                        obj.id = arr[i-1]+'>'+arr[i];\n                                        obj.name = arr[i-1]+\"-\"+arr[i];\n                                        obj.pid=0\n                                        searcharr.push(obj)\n                                    }\n\n                                }\n\n                            }\n                            searcharr.push({id:'u>'+arr[len-1],name:'高于'+arr[len-1],pid:0})\n                        }\n                        //console.log(searcharr);\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.rules=searcharr;\n                        // val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n\n                    }\n                }\n            }\n            // console.log(typevar);\n            this.assign(\"typevar\",typevar);\n        }\n        if(!think.isEmpty(sortarr)) {\n            sortarr = sortarr.split(\"|\");\n            nsobj = {}\n            let optionidarr = [];\n            let valuearr = [];\n            for (let v of sortarr) {\n                let qarr = v.split(\"_\");\n                nsobj[qarr[0]] = qarr[1];\n                if(qarr[1] !=0){\n                    let vv = qarr[1].split(\">\");\n                    //console.log(vv);\n                    if(vv[0]==\"d\" && !think.isEmpty(vv[1])){\n                        map[\"t.\"+qarr[0]] = [\"<\",vv[1]];\n                    }else if(vv[0]==\"u\" && !think.isEmpty(vv[1])){\n                        map[\"t.\"+qarr[0]] = [\">\",vv[1]];\n                    }else if(vv[0]==\"l\" && !think.isEmpty(vv[1])){\n                        map[\"t.\"+qarr[0]] = [\"like\",`%\"${vv[1]}\"%`];\n                    }else if(!think.isEmpty(vv[0])&&!think.isEmpty(vv[1])){\n                        map[\"t.\"+qarr[0]] = [\"BETWEEN\", Number(vv[0]), Number(vv[1])];\n                    }else {\n                        map[\"t.\"+qarr[0]] = qarr[1];\n                    }\n\n                }\n            }\n            map.fid = cate.id;\n            // where.optionid = [\"IN\",optionidarr];\n            // where['value'] = [\"IN\",valuearr];\n            // let type= await this.model(\"typeoptionvar\").where(where).select();\n            //  console.log(type);\n            // console.log(map);\n\n        }\n        //console.log(map);\n        //return false;\n        //console.log(sort);\n        this.assign(\"sort\",sort);\n        this.assign(\"nsobj\",nsobj);\n\n        this.assign(\"sortid\",sortid);\n        //分组\n        let group_id = 0;\n        if(!think.isEmpty(this.modget(2)) && this.modget(2) !=0){\n            map.group_id=this.modget(2);\n            group_id = map.group_id;\n        }\n        let data;\n        if(!think.isEmpty(sortarr)){\n            data = await this.model(this.mod.name).join({\n                table: \"type_optionvalue\"+sortid,\n                join: \"left\", // 有 left,right,inner 3 个值\n                as: \"t\",\n                on: [\"id\", \"tid\"]\n\n            }).where(map).page(this.param('page'),num).order(o).countSelect();\n        }else {\n            data = await this.model(this.mod.name).where(map).page(this.param('page'),num).order(o).countSelect();\n        }\n\n        //分页\n        let html = pagination(data, this.http, {\n            desc: false, //show description\n            pageNum: 2,\n            url: '', //page url, when not set, it will auto generated\n            class: 'nomargin', //pagenation extra class\n            text: {\n                next: '下一页',\n                prev: '上一页',\n                total: 'count: ${count} , pages: ${pages}'\n            }\n        });\n        this.assign('pagination', html);\n        /* 模板赋值并渲染模板 */\n        this.assign(\"group_id\",group_id);\n        this.assign('category', cate);\n        this.assign('list', data.data);\n        this.assign('count',data.count);\n        this.assign('breadcrumb', breadcrumb);\n\n        //跨屏\n        if(checkMobile(this.userAgent())){\n            if(this.isAjax(\"get\")){\n                for (let v of data.data){\n                    v.nickname= await get_nickname(v.uid);\n                    v.create_time=moment(v.create_time).fromNow();\n                    v.catename = await this.model(\"category\").get_category(v.category_id,\"title\");\n                    v.detail=(v.detail).replace(/<[^>]+>/g, \"\");\n                    v.answer_username = await get_nickname(v.answer_users);\n                    v.update_time = moment(v.update_time).fromNow();\n                }\n\n                return this.json(data);\n            }\n            //手机端模版\n            return this.modtemp(this.mod.name,\"mobile\");\n        }else{\n            //console.log(temp);\n            // return this.display(temp);\n            return this.modtemp(this.mod.name);\n        }\n\n    }\n\n    /**\n     * 详情入口\n     * @returns {*}\n     */\n    async detailAction(){\n        //获取详情id\n        let id =this.get(\"id\");\n        // //判断请求参数是否合法。\n        if(think.isEmpty(id)){\n            this.http.error = new Error(\"请求参数不合法！\");\n            return think.statusAction(702, this.http);\n        }\n        if(!think.isNumberString(id)){\n           id = await this.model(\"author\").where({pinyin:id}).getField(\"id\",true);\n        }\n        // //判断请求参数是否合法。\n        // if(!think.isNumberString(id)){\n        //     this.http.error = new Error(\"请求参数不合法！\");\n        //     return think.statusAction(702, this.http);\n        // }\n        //获取详情信息\n        let info = await this.model(\"author\").find(id);\n        //判断信息是否存在\n        if(think.isEmpty(info)){\n            this.http.error = new Error(\"信息不存在！\");\n            return think.statusAction(702, this.http);\n        }\n        //TODO\n        //访问控制\n        //await this.c_verify(\"visit\",info.category_id);\n\n        this.assign(\"info\",info);\n\n        //seo\n        this.meta_title = info.title; //标题\n        this.keywords = info.keyname ? info.keyname : ''; //seo关键词\n        this.description = info.description ? info.description : \"\"; //seo描述\n\n        //获取面包屑信息\n        let breadcrumb = await this.model('category').get_parent_category(info.category_id,true);\n        this.assign('breadcrumb', breadcrumb);\n        //获取栏目信息\n        let cate = await this.category(info.category_id);\n        this.assign('category', cate);\n        //当前用户是否关注\n        if(this.is_login){\n            let focus = await this.model(\"question_focus\").where({question_id:id,uid:this.user.uid}).find();\n            this.assign(\"focus\",focus);\n        }\n        //获取当前主题所有关注的用户\n        let focususer = await this.model(\"question_focus\").where({question_id:id}).getField(\"uid\");\n        this.assign(\"focususer\",focususer);\n        //访问统计\n        await this.model(\"author\").where({id:info.id}).increment('view');\n        //话题\n        // let topicid = await this.model(\"keyword_data\").where({docid:id,mod_type:1,mod_id:cate.model}).getField(\"tagid\");\n        // if(!think.isEmpty(topicid)){\n        //     let topic = await this.model(\"keyword\").where({id:[\"IN\",topicid]}).select();\n        //     console.log(topic);\n        // }\n        //获取回复\n        let answer = await this.model(\"question_answer\").where({question_id:id}).select();\n        for(let a of answer){\n            a.ccount = await this.model(\"question_answer_comments\").where({answer_id:a.answer_id}).count(\"id\");\n        }\n        this.assign(\"answer\",answer);\n        //console.log(cate);\n        //相关问题\n        let where ={docid:id,mod_type:1,mod_id:cate.model}\n        //获取相关tagid\n        let tagid =  await this.model(\"keyword_data\").where(where).getField(\"tagid\");\n        if(!think.isEmpty(tagid)){\n            //找出相关的tagid\n            let rtid = await this.model(\"keyword_data\").where({tagid:[\"IN\",tagid],mod_id:cate.model}).getField(\"docid\");\n            //相关问题\n            let rq = await this.model(\"question\").where({id:[\"IN\",rtid]}).limit(10).select();\n            this.assign(\"rq\",rq);\n        }\n\n        //不同的设备,压缩不同的图片尺寸\n        let str = info.detail;\n        if(!think.isEmpty(str)){\n            let img;\n            if(checkMobile(this.userAgent())){\n                //手机端\n                img = image_view(str,640,4);\n            }else {\n                //pc端\n\n                img = image_view(str,847,0);\n            }\n            info.detail=img\n        }\n        if(checkMobile(this.userAgent())){\n            if(this.isAjax(\"get\")){\n                for (let v of data.data){\n                    v.nickname= await get_nickname(v.uid);\n                    v.create_time=moment(v.create_time).fromNow();\n                    v.catename = await this.model(\"category\").get_category(v.category_id,\"title\");\n                    v.detail=(v.detail).replace(/<[^>]+>/g, \"\");\n                    v.answer_username = await get_nickname(v.answer_users);\n                    v.update_time = moment(v.update_time).fromNow();\n                }\n                return this.json(data);\n            }\n            //手机端模版\n            return this.modtemp(\"question\",\"mobile\");\n        }else{\n            //console.log(temp);\n            // return this.display(temp);\n            return this.modtemp();\n        }\n    }\n\n    async infoAction(){\n        let author_id = this.get('author_id');\n        let model_id = this.get(\"model_id\");\n        //获取详情信息\n        let info = await this.model(\"author\").find(author_id);\n        //判断信息是否存在\n        if(think.isEmpty(info)){\n            this.http.error = new Error(\"信息不存在！\");\n            return think.statusAction(702, this.http);\n        }\n        this.assign(\"info\",info);\n        //seo\n        this.meta_title = info.title; //标题\n        this.keywords = info.keyname ? info.keyname : ''; //seo关键词\n        this.description = info.description ? info.description : \"\"; //seo描述\n        //获取面包屑信息\n        let breadcrumb = await this.model('category').get_parent_category(info.category_id,true);\n        this.assign('breadcrumb', breadcrumb);\n        //获取栏目信息\n        let cate = await this.category(info.category_id);\n        this.assign('category', cate);\n        \n        //排序\n        let o = {};\n        o.level = 'DESC';\n        let order = this.get(\"order\");\n        order = Number(order);\n        switch (order){\n            case 1:\n                o.update_time = 'ASC';\n                break;\n            case 2:\n                o.view = 'DESC';\n                break;\n            case 3:\n                o.view = 'ASC';\n                break;\n            default:\n                o.update_time = 'DESC';\n        }\n        this.assign('order',order);\n        let list = await this.model(\"document\").where({model_id:model_id,author_id:author_id}).page(this.param('page'),10).order(o).countSelect();\n        this.assign(\"list\",list);\n        //分页\n        let html = pagination(list, this.http, {\n            desc: false, //show description\n            pageNum: 2,\n            url: '', //page url, when not set, it will auto generated\n            class: 'nomargin', //pagenation extra class\n            text: {\n                next: '下一页',\n                prev: '上一页',\n                total: 'count: ${count} , pages: ${pages}'\n            }\n        });\n        this.assign('pagination', html);\n        console.log(list);\n        return this.modtemp();\n    }\n}"
    ]
}