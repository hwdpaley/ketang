{
    "version": 3,
    "sources": [
        "../../../../src/mod/controller/question/index.js"
    ],
    "names": [
        "locale",
        "indexAction",
        "end",
        "display",
        "listAction",
        "method",
        "http",
        "toLowerCase",
        "setCorsHeader",
        "cate",
        "m_cate",
        "think",
        "extend",
        "c_verify",
        "model",
        "mod",
        "assign",
        "get_sub_category",
        "id",
        "subcate",
        "push",
        "num",
        "page_num",
        "get_parent_category",
        "breadcrumb",
        "map",
        "o",
        "order",
        "modget",
        "Number",
        "popular_value",
        "is_recommend",
        "answer_count",
        "update_time",
        "group_id",
        "isEmpty",
        "name",
        "where",
        "page",
        "param",
        "countSelect",
        "data",
        "v",
        "imgs",
        "img_text_view",
        "detail",
        "html",
        "desc",
        "pageNum",
        "url",
        "class",
        "text",
        "next",
        "prev",
        "total",
        "count",
        "checkMobile",
        "userAgent",
        "isAjax",
        "get_nickname",
        "uid",
        "nickname",
        "create_time",
        "fromNow",
        "get_category",
        "category_id",
        "catename",
        "replace",
        "answer_users",
        "answer_username",
        "json",
        "modtemp",
        "detailAction",
        "get",
        "isNumberString",
        "error",
        "Error",
        "statusAction",
        "find",
        "info",
        "meta_title",
        "title",
        "keywords",
        "keyname",
        "description",
        "category",
        "is_login",
        "question_id",
        "user",
        "focus",
        "getField",
        "focususer",
        "increment",
        "select",
        "answer",
        "a",
        "answer_id",
        "ccount",
        "docid",
        "mod_type",
        "mod_id",
        "tagid",
        "rtid",
        "limit",
        "rq",
        "str",
        "img",
        "image_view"
    ],
    "mappings": "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",
    "file": "../../../../src/mod/controller/question/index.js",
    "sourcesContent": [
        "'use strict';\nimport Base from '../index.js';\nimport pagination from 'think-pagination';\nimport moment from \"moment\"\nmoment.locale('zh-cn');\nexport default class extends Base {\n  /**\n   * index action\n   * @return {Promise} []\n   * 封面入口\n   */\n  indexAction(){\n    //console.log(this);\n    //auto render template file index_index.html\n\n   this.end(2222)\n   return this.display();\n  }\n\n  /**\n   * 列表入口\n   * @returns {*}\n   */\n async listAction(){\n    //跨域\n    let method = this.http.method.toLowerCase();\n    if(method === \"options\"){\n      this.setCorsHeader();\n      this.end();\n      return;\n    }\n    this.setCorsHeader();\n\n    //获取栏目信息\n    let cate = this.m_cate;\n    cate = think.extend({}, cate);\n\n      //栏目权限验证\n    await this.c_verify(\"visit\");\n\n    // 获取当前栏目的模型\n    let model = this.mod;\n    this.assign('model', model);\n\n    //获取当前分类的所有子栏目\n    let subcate = await this.model('category').get_sub_category(cate.id);\n        subcate.push(cate.id);\n\n    //当前栏目列表每页行数\n     let num = this.page_num();\n\n      //获取面包屑信息\n    let breadcrumb = await this.model('category').get_parent_category(cate.id,true);\n\n    //获取列表数据\n      //条件\n    let map = {\n      'category_id': ['IN', subcate]\n    };\n    //排序\n    let o = {};\n\n    let order = this.modget(1)||0;\n    order = Number(order);\n    switch (order){\n      case 1:\n        o.popular_value = 'DESC';\n        break;\n      case 2:\n        map.is_recommend = 1;\n          o.id='DESC';\n        break;\n      case 3:\n        map.answer_count = 0;\n          o.id='DESC';\n        break;\n      default:\n        o.update_time = 'DESC';\n    }\n    this.assign('order',order);\n    //分组\n    let group_id = 0;\n    if(!think.isEmpty(this.modget(2)) && this.modget(2) !=0){\n      map.group_id=this.modget(2);\n      group_id = map.group_id;\n    }\n\n    let data = await this.model(this.mod.name).where(map).page(this.param('page'),num).order(o).countSelect();\n     for (let v of data.data){\n         v.imgs = img_text_view(v.detail,200,120);\n     }\n     //分页\n      let html = pagination(data, this.http, {\n          desc: false, //show description\n          pageNum: 2,\n          url: '', //page url, when not set, it will auto generated\n          class: 'nomargin', //pagenation extra class\n          text: {\n              next: '下一页',\n              prev: '上一页',\n              total: 'count: ${count} , pages: ${pages}'\n          }\n      });\n      this.assign('pagination', html);\n      /* 模板赋值并渲染模板 */\n      this.assign(\"group_id\",group_id);\n      this.assign('category', cate);\n      this.assign('list', data.data);\n      this.assign('count',data.count);\n      this.assign('breadcrumb', breadcrumb);\n\n    //跨屏\n    if(checkMobile(this.userAgent())){\n      if(this.isAjax(\"get\")){\n          for (let v of data.data){\n              v.nickname= await get_nickname(v.uid);\n              v.create_time=moment(v.create_time).fromNow();\n              v.catename = await this.model(\"category\").get_category(v.category_id,\"title\");\n              v.detail=(v.detail).replace(/<[^>]+>/g, \"\");\n              v.answer_username = await get_nickname(v.answer_users);\n              v.update_time = moment(v.update_time).fromNow();\n          }\n          \n        return this.json(data);\n      }\n      //手机端模版\n      return this.modtemp(this.mod.name,\"mobile\");\n    }else{\n      //console.log(temp);\n     // return this.display(temp);\n      return this.modtemp(this.mod.name);\n    }\n\n  }\n\n  /**\n   * 详情入口\n   * @returns {*}\n   */\n  async detailAction(){\n      //获取详情id\n      let id =this.get(\"id\");\n      //判断请求参数是否合法。\n      if(!think.isNumberString(id)){\n          this.http.error = new Error(\"请求参数不合法！\");\n          return think.statusAction(702, this.http);\n      }\n      //获取详情信息\n      let info = await this.model(\"question\").find(id);\n      //判断信息是否存在\n      if(think.isEmpty(info)){\n              this.http.error = new Error(\"信息不存在！\");\n              return think.statusAction(702, this.http);\n      }\n      //TODO\n      //访问控制\n      await this.c_verify(\"visit\",info.category_id);\n\n      this.assign(\"info\",info);\n\n      //seo\n      this.meta_title = info.title; //标题\n      this.keywords = info.keyname ? info.keyname : ''; //seo关键词\n      this.description = info.description ? info.description : \"\"; //seo描述\n\n      //获取面包屑信息\n      let breadcrumb = await this.model('category').get_parent_category(info.category_id,true);\n      this.assign('breadcrumb', breadcrumb);\n      //获取栏目信息\n      let cate = await this.category(info.category_id);\n      this.assign('category', cate);\n      //当前用户是否关注\n      if(this.is_login){\n          let focus = await this.model(\"question_focus\").where({question_id:id,uid:this.user.uid}).find();\n          this.assign(\"focus\",focus);\n      }\n      //获取当前主题所有关注的用户\n      let focususer = await this.model(\"question_focus\").where({question_id:id}).getField(\"uid\");\n      this.assign(\"focususer\",focususer);\n      //访问统计\n      await this.model(\"question\").where({id:info.id}).increment('view');\n      //话题\n      // let topicid = await this.model(\"keyword_data\").where({docid:id,mod_type:1,mod_id:cate.model}).getField(\"tagid\");\n      // if(!think.isEmpty(topicid)){\n      //     let topic = await this.model(\"keyword\").where({id:[\"IN\",topicid]}).select();\n      //     console.log(topic);\n      // }\n      //获取回复\n       let answer = await this.model(\"question_answer\").where({question_id:id}).select();\n      for(let a of answer){\n          a.ccount = await this.model(\"question_answer_comments\").where({answer_id:a.answer_id}).count(\"id\");\n      }\n       this.assign(\"answer\",answer);\n      //console.log(cate);\n      //相关问题\n      let where ={docid:id,mod_type:1,mod_id:cate.model}\n      //获取相关tagid\n      let tagid =  await this.model(\"keyword_data\").where(where).getField(\"tagid\");\n      if(!think.isEmpty(tagid)){\n          //找出相关的tagid\n          let rtid = await this.model(\"keyword_data\").where({tagid:[\"IN\",tagid],mod_id:cate.model}).getField(\"docid\");\n          //相关问题\n          let rq = await this.model(\"question\").where({id:[\"IN\",rtid]}).limit(10).select();\n          this.assign(\"rq\",rq);\n      }\n\n      //不同的设备,压缩不同的图片尺寸\n      let str = info.detail;\n      if(!think.isEmpty(str)){\n          let img;\n          if(checkMobile(this.userAgent())){\n              //手机端\n              img = image_view(str,640,4);\n          }else {\n              //pc端\n\n              img = image_view(str,847,0);\n          }\n          info.detail=img\n      }\n      if(checkMobile(this.userAgent())){\n          if(this.isAjax(\"get\")){\n              for (let v of data.data){\n                  v.nickname= await get_nickname(v.uid);\n                  v.create_time=moment(v.create_time).fromNow();\n                  v.catename = await this.model(\"category\").get_category(v.category_id,\"title\");\n                  v.detail=(v.detail).replace(/<[^>]+>/g, \"\");\n                  v.answer_username = await get_nickname(v.answer_users);\n                  v.update_time = moment(v.update_time).fromNow();\n              }\n              return this.json(data);\n          }\n          //手机端模版\n          return this.modtemp(\"question\",\"mobile\");\n      }else{\n          //console.log(temp);\n          // return this.display(temp);\n          return this.modtemp();\n      }\n  }\n}"
    ]
}