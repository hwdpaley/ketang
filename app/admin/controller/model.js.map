{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/model.js"
    ],
    "names": [
        "init",
        "http",
        "db",
        "model",
        "tactive",
        "indexAction",
        "map",
        "where",
        "page",
        "get",
        "countSelect",
        "data",
        "Pages",
        "think",
        "adapter",
        "pages",
        "assign",
        "meta_title",
        "display",
        "addAction",
        "isPost",
        "post",
        "create_time",
        "Date",
        "valueOf",
        "update_time",
        "status",
        "add",
        "res",
        "update_cache",
        "success",
        "name",
        "url",
        "fail",
        "active",
        "addextAction",
        "addtable",
        "editAction",
        "isArray",
        "attribute_list",
        "join",
        "update",
        "id",
        "allfields",
        "isEmpty",
        "find",
        "split",
        "model_id",
        "field",
        "select",
        "fields",
        "extend",
        "extend_fields",
        "concat",
        "in_array",
        "is_show",
        "obj",
        "v",
        "field_sort",
        "JSON",
        "parse",
        "group",
        "forEach",
        "k",
        "sort",
        "console",
        "log",
        "order",
        "_",
        "values",
        "orderbgy",
        "orderBy",
        "editextAction",
        "cache",
        "generateAction",
        "delAction",
        "ids",
        "del",
        "checknameAction",
        "checkName",
        "json"
    ],
    "mappings": "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",
    "file": "../../../src/admin/controller/model.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\nimport Base from './base.js';\nimport url from 'url';\n/**\n * 模型管理模型\n * @author arterli <arterli@qq.com>\n */\nexport default class extends Base {\n    init(http) {\n        super.init(http);\n        this.db = this.model('model');\n        this.tactive = \"setup\"\n    }\n\n    async indexAction() {\n        let map = {'status': ['>', -1]}\n        let data = await this.db.where(map).page(this.get('page')).countSelect();\n        let Pages = think.adapter(\"pages\", \"page\"); //加载名为 dot 的 Template Adapter\n        let pages = new Pages(this.http); //实例化 Adapter\n        let page = pages.pages(data);\n        this.assign('pagerData', page); //分页展示使用\n        this.assign('list', data.data);\n        this.meta_title = \"模型管理\";\n        return this.display()\n    }\n\n    /**\n     * 新建模型\n     * @returns {*}\n     */\n    async addAction() {\n        if (this.isPost()) {\n            let data = this.post();\n            //console.log(data);\n            data.create_time = new Date().valueOf();\n            data.update_time = new Date().valueOf();\n            data.status = 1\n            //console.log(data);\n            let res = await this.db.add(data);\n            if (res) {\n                update_cache(\"model\")//更新模型缓存\n                return this.success({name: \"添加成功\", url: \"/admin/model/index\"});\n            }else {\n                return this.fail(\"添加模型失败!\");\n            }\n        } else {\n            this.active = \"admin/model/index\";\n            this.meta_title = \"添加系统模型\";\n            return this.display()\n        }\n    }\n    /**\n     * 新建独立模型\n     * @returns {*}\n     */\n    async addextAction() {\n        if (this.isPost()) {\n            let data = this.post();\n            //console.log(data);\n            data.create_time = new Date().valueOf();\n            data.update_time = new Date().valueOf();\n            data.status = 1;\n            //console.log(data);\n\n            let res = await this.db.add(data);\n            if (res) {\n                //初始化表结构\n                let addtable = await this.model(\"attribute\").addtable(res);\n                //console.log(addtable);\n                update_cache(\"model\")//更新模型缓存\n                return this.fail(\"添加失败!\")\n                return this.success({name: \"添加成功\", url: \"/admin/model/index\"});\n            }else {\n                return this.fail(\"添加失败!\")\n            }\n        } else {\n            this.active = \"admin/model/index\"\n            this.meta_title = \"添加独立模型\"\n            return this.display()\n        }\n    }\n\n    /**\n     * 编辑模型\n     *\n     */\n    async editAction() {\n        if (this.isPost()) {\n            let post = this.post()\n            post.update_time = new Date().valueOf();\n           if(think.isArray(post.attribute_list)){\n               post.attribute_list=post.attribute_list.join(\",\");\n           }\n\n            let res =await this.db.update(post);\n            if(res){\n                update_cache(\"model\")//更新模型缓存\n                return this.success({name:\"更新模型成功!\",url: \"/admin/model/index\"})\n            }\n        } else {\n            let id = this.get(\"id\");\n            let allfields;\n            if (think.isEmpty(id)) {\n                this.fail('参数不能为空！');\n            }\n            let data = await this.db.find(id);\n           // console.log(data);\n            data.attribute_list = think.isEmpty(data.attribute_list) ? '' : data.attribute_list.split(\",\");\n           // console.log(data.attribute_list);\n            let fields = await this.model('attribute').where({model_id: data.id}).field('id,name,title,is_show').select();\n            //是否继承了其他模型\n            if (data.extend != 0) {\n                var extend_fields = await this.model('attribute').where({model_id: data.extend}).field('id,name,title,is_show').select();\n                allfields = fields.concat(extend_fields);\n            } else {\n                allfields = fields;\n            }\n           // console.log(allfields)\n            //梳理属性的可见性\n            for (let field of allfields) {\n                if (!think.isEmpty(data.attribute_list) && !in_array(field.id, data.attribute_list)) {\n                    field.is_show = 0;\n                }\n                //console.log(field);\n            }\n            //console.log(allfields);\n            //改造数组\n            var obj = {}\n            if (allfields) {\n                for (let v of allfields) {\n                    obj[v.id] = v;\n                }\n            } else {\n                for (let v of fields) {\n                    obj[v.id] = v;\n                }\n            }\n            //获取模型排序字段\n            let field_sort = JSON.parse(data.field_sort);\n            if (!think.isEmpty(field_sort)) {\n                for (let group in field_sort) {\n                    //console.log(field_sort[group])\n                    //for(var value of field_sort[group]){\n                    //    console.log(value)\n                    //}\n\n                    field_sort[group].forEach((v, k)=> {\n                        if(obj[v]){\n                        obj[v].group = group;\n                        obj[v].sort = k;\n                        }\n                        //console.log(v, k)\n                    })\n\n                }\n            }\n            console.log(obj);\n            let order = think._.values(obj);\n            //console.log(order);\n            let orderbgy = think._.orderBy(order, ['group', 'sort'], ['asc', 'asc']);\n\n            this.assign({'fields': fields, 'extend_fields': extend_fields, 'allfields': orderbgy, 'info': data})\n            this.active = \"admin/model/index\"\n            this.meta_title = \"编辑模型\"\n            this.display();\n        }\n    }\n\n    /**\n     * 编辑独立模型\n     *\n     */\n    async editextAction() {\n        if (this.isPost()) {\n            let post = this.post()\n            post.update_time = new Date().valueOf();\n            if(think.isArray(post.attribute_list)){\n                post.attribute_list=post.attribute_list.join(\",\");\n            }\n\n            let res =await this.db.update(post);\n            if(res){\n                this.cache(\"get_document_model\", null);//清除模型缓存\n                this.cache(\"get_model\", null);//清除模型缓存\n                return this.success({name:\"更新模型成功!\",url: \"/admin/model/index\"})\n            }\n        } else {\n            let id = this.get(\"id\");\n            let allfields;\n            if (think.isEmpty(id)) {\n                this.fail('参数不能为空！');\n            }\n            let data = await this.db.find(id);\n            // console.log(data);\n            data.attribute_list = think.isEmpty(data.attribute_list) ? '' : data.attribute_list.split(\",\");\n            // console.log(data.attribute_list);\n            let fields = await this.model('attribute').where({model_id: data.id}).field('id,name,title,is_show').select();\n            //是否继承了其他模型\n            if (data.extend != 0) {\n                var extend_fields = await this.model('attribute').where({model_id: data.extend}).field('id,name,title,is_show').select();\n                allfields = fields.concat(extend_fields);\n            } else {\n                allfields = fields;\n            }\n            // console.log(allfields)\n            //梳理属性的可见性\n            for (let field of allfields) {\n                if (!think.isEmpty(data.attribute_list) && !in_array(field.id, data.attribute_list)) {\n                    field.is_show = 0;\n                }\n                //console.log(field);\n            }\n            //console.log(allfields);\n            //改造数组\n            var obj = {}\n            if (allfields) {\n                for (let v of allfields) {\n                    obj[v.id] = v;\n                }\n            } else {\n                for (let v of fields) {\n                    obj[v.id] = v;\n                }\n            }\n            //获取模型排序字段\n            let field_sort = JSON.parse(data.field_sort);\n            if (!think.isEmpty(field_sort)) {\n                for (let group in field_sort) {\n                    //console.log(field_sort[group])\n                    //for(var value of field_sort[group]){\n                    //    console.log(value)\n                    //}\n\n                    field_sort[group].forEach((v, k)=> {\n                        if(obj[v]){\n                            obj[v].group = group;\n                            obj[v].sort = k;\n                        }\n                        //console.log(v, k)\n                    })\n\n                }\n            }\n\n            let order = think._.values(obj);\n            //console.log(order);\n            let orderbgy = think._.orderBy(order, ['group', 'sort'], ['asc', 'asc']);\n\n            this.assign({'fields': fields, 'extend_fields': extend_fields, 'allfields': orderbgy, 'info': data})\n            this.active = \"admin/model/index\"\n            this.meta_title = \"编辑模型\"\n            this.display();\n        }\n    }\n    /**\n     * 生成模型\n     * @returns {*}\n     */\n    generateAction() {\n        this.active = \"admin/model/index\"\n        this.meta_title = \"生成模型\"\n        return this.display()\n    }\n\n    /**\n     * 删除模型模型\n     */\n    async delAction() {\n        let ids = this.get('id');\n        think.isEmpty(ids) && this.fail(\"参数不能为空\")\n        let res = await this.db.del(ids)\n        if (!res) {\n            this.fail(\"删除失败\");\n        } else {\n            update_cache(\"model\")//更新模型缓存\n            this.success({name: \"删除成功！\"});\n        }\n    }\n    /**\n     * 新增字段检查同一张表是否有相同的字段\n     */\n    async checknameAction(){\n        let name = this.get('name');\n        let id = this.get('id');\n        let res = await this.db.checkName(name,id);\n        if(res){\n            return this.json(1);\n        }else {\n            return this.json(0);\n        }\n    }\n\n}"
    ]
}