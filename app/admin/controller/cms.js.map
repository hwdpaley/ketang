{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/cms.js"
    ],
    "names": [
        "init",
        "http",
        "tactive",
        "listAction",
        "model",
        "get",
        "think",
        "isEmpty",
        "fail",
        "where",
        "name",
        "find",
        "fields",
        "grids",
        "trim",
        "list_grid",
        "split",
        "console",
        "log",
        "ngrids",
        "value",
        "val",
        "field",
        "values",
        "href",
        "indexOf",
        "title",
        "format",
        "v",
        "array",
        "push",
        "unique",
        "map",
        "key",
        "search_key",
        "iskey",
        "param",
        "k",
        "in_array",
        "list_row",
        "config",
        "data",
        "extend",
        "get_table_name",
        "id",
        "parent",
        "fix",
        "array_search",
        "join",
        "table",
        "as",
        "on",
        "order",
        "page",
        "countSelect",
        "need_pk",
        "Pages",
        "adapter",
        "pages",
        "parseDocumentList",
        "assign",
        "meta_title",
        "active",
        "display",
        "setstatusAction",
        "addAction",
        "model_id",
        "status",
        "isPost",
        "editAction",
        "checkAttr",
        "Model"
    ],
    "mappings": "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",
    "file": "../../../src/admin/controller/cms.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\nimport Base from './base.js';\n/**\n * 模型数据管理控制器\n * @author 阿特 <arterli@qq.com>\n * http://www.cmswing.com\n */\nexport default class extends Base {\n    init(http) {\n        super.init(http);\n        this.tactive = \"setup\";\n    }\n    /**\n     * list action\n     * @return {Promise} []\n     */\n    //id:编号\n    //title:标题:[EDIT]\n    //type:类型\n    //update_time:最后更新\n    //status:状态\n    //view:浏览\n    //id:操作:[EDIT]|编辑,[DELETE]|删除\n    async listAction(){\n        \n        //auto render template file index_index.html\n        let model = this.get('model')\n         !think.isEmpty(model)|| this.fail(\"模型名标识必须有！\");\n\n        //获取模型信息\n        model = await this.model('model').where({name:model}).find();\n        !think.isEmpty(model) || this.fail(\"模型不存在！\");\n        //解析列表规则\n        let fields = [];\n        let grids  = trim(model.list_grid).split('\\r\\n');\n        console.log(model)\n        let ngrids=[];\n        for (var value of grids){\n            if(trim(value) === ''){\n                continue;\n            }\n            // 字段:标题:链接\n            let val      = value.split(':');\n            // 支持多个字段显示\n            let field   = val[0].split(',');\n            let values    = {'field' : field, 'title': val[1]};\n            if(!think.isEmpty(val[2])){\n                values.href\t=\tval[2];\n            }\n            if(val[1].indexOf('|') > -1){\n                // 显示格式定义\n                [values.title,values.format]    =   val[1].split('|');\n            }\n            for( var v  of field){\n                let array\t=\tv.split('|');\n                fields.push(array[0]) ;\n            }\n            ngrids.push(values);\n        }\n\n        //console.log(ngrids)\n        // 过滤重复字段信息\n        fields=unique(fields);\n        //console.log(model)\n        //关键字搜索\n        let map = {}\n        let key = model.search_key?model.search_key:'title';\n        let iskey = this.param()\n        if(!think.isEmpty(iskey[key])){\n            map[key] = ['like',`%${this.get(key)}%`];\n            delete iskey[key];\n        }\n       \n        //console.log(iskey)\n        //条件搜索\n        for(let k in iskey){\n           if(in_array(k,fields)){\n               map[k]=iskey[k];\n           }\n        }\n       //console.log(map);\n        if(!think.isEmpty(model.list_row)){\n            this.config(\"db.nums_per_page\",model.list_row)\n        }\n        //let http =this.http;\n        //读取模型数据列表\n        let name;\n        let data;\n        if(model.extend){\n                name =await this.model('model').get_table_name(model.id);\n            let parent = await this.model('model').get_table_name(model.extend);\n            let fix = this.config('db.prefix');\n            let key = array_search(fields,'id');\n            //console.log(key);\n            if(false === key){\n                fields.push(`${fix}${parent}.id as id`);\n            }else {\n                fields[key] = `${fix}${parent}.id as id`;\n\n            }\n           // console.log(fields);\n            data=await this.model(parent).join({\n                table: name,\n                join: \"inner\", //join 方式，有 left, right, inner 3 种方式\n                as: \"c\", // 表别名\n                on: [\"id\", \"id\"] //ON 条件\n            }).field(fields).order(`${fix}${parent}.id DESC`).where(map).page(this.get(\"page\")).countSelect();\n        }else {\n            if(model.need_pk){\n                in_array('id', fields) || fields.push('id');\n            }\n            //console.log(fields)\n            name =await this.model('model').get_table_name(model.id);\n            //console.log(name)\n            data=await this.model(name)\n                /* 查询指定字段，不指定则查询所有字段 */\n                  .field(fields)\n                 // 查询条件\n                  .where(map)\n                 /* 默认通过id逆序排列 */\n                 .order(model.need_pk?'id DESC':'')\n                 /* 数据分页 */\n                 .page(this.get(\"page\"))\n                 /* 执行查询 */\n                .countSelect();\n        }\n        \n       // console.log(ngrids);\n        let Pages = think.adapter(\"pages\", \"page\"); //加载名为 dot 的 Template Adapter\n        let pages = new Pages(this.http); //实例化 Adapter\n        let page = pages.pages(data);\n        data.data = await this.parseDocumentList(data.data,model.id)\n        this.assign('pagerData', page); //分页展示使用\n        this.meta_title=model.title + '列表';\n        this.active = \"admin/model/index\";\n        this.assign('model', model);\n        this.assign('list_grids', ngrids);\n        this.assign('list_data',data.data);\n        return this.display();\n    }\n    /**\n     * 设置一条或者多条数据的状态\n     */\n    async setstatusAction() {\n        await super.setstatusAction(this,'document');\n    }\n    //TODO 模型添加数据\n   async addAction(){\n       //获取模型信息\n       let model_id = this.get(\"model\")\n       let model = await this.model(\"model\").where({status:1,id:model_id}).find();\n       model || this.fail('模型不存在！');\n       if(this.isPost()){\n           //TODO 后台验证后续天极\n\n       }\n   }\n    // TODO 模型编辑数据\n    editAction(){\n        // TODO\n    }\n    // TODO  模型数据验证\n    checkAttr(Model,model_id){\n        // TODO\n\n    }\n}\n"
    ]
}