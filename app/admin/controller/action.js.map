{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/action.js"
    ],
    "names": [
        "init",
        "http",
        "tactive",
        "indexAction",
        "model",
        "where",
        "order",
        "page",
        "get",
        "countSelect",
        "action",
        "_pages",
        "think",
        "adapter",
        "pages",
        "assign",
        "data",
        "meta_title",
        "display",
        "logAction",
        "map",
        "status",
        "list",
        "itme",
        "get_action",
        "action_id",
        "get_nickname",
        "user_id",
        "addAction",
        "active",
        "editAction",
        "id",
        "isEmpty",
        "fail",
        "find",
        "updateAction",
        "post",
        "update_time",
        "Date",
        "now",
        "add",
        "res",
        "success",
        "name",
        "url",
        "update",
        "removeAction",
        "ids",
        "param",
        "isArray",
        "isNumberString",
        "delete",
        "clearAction"
    ],
    "mappings": "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",
    "file": "../../../src/admin/controller/action.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\nimport Base from './base.js';\nexport default class extends Base {\n  init(http) {\n    super.init(http);\n    this.tactive = \"user\";\n  }\n  /**\n   * index action\n   * @return {Promise} []\n   */\n\n  async indexAction(){\n    //auto render template file index_index.html\n    let action = await this.model('action').where({'status':['>',-1]}).order(\"id DESC\").page(this.get('page')).countSelect();\n    let _pages = think.adapter(\"pages\",\"page\");\n    let pages = new _pages(this.http);\n    let page = pages.pages(action);\n    this.assign(\"pagerData\",page);\n    this.assign(\"list\",action.data);\n    this.meta_title = \"用户行为\";\n    return this.display();\n\n  }\n\n  /**\n   * 日志列表\n   * @returns {*}\n     */\n  async logAction(){\n    //获取列表数据\n    let map={}\n     map.status = ['>',-1];\n    let list = await this.model(\"action_log\").where({'status':['>',-1]}).order(\"id DESC\").page(this.get('page')).countSelect();\n    //console.log(list);\n    let _pages = think.adapter(\"pages\",\"page\");\n    let pages = new _pages(this.http);\n    let page = pages.pages(list);\n    this.assign(\"pagerData\",page);\n    for(let itme of list.data){\n       itme.action_id=await this.model(\"action\").get_action(itme.action_id,\"title\");\n      itme.user_id = await this.model(\"member\").get_nickname(itme.user_id);\n    }\n    this.assign(\"list\",list.data);\n    this.meta_title = \"行为日志\";\n   return this.display();\n  }\n\n  /**\n   * 新增行为\n   * @returns {*}\n     */\n  addAction(){\n    this.meta_title = \"新增行为\";\n    this.active=\"admin/action/index\";\n    this.assign(\"data\",null);\n    return this.display();\n  }\n\n  /**\n   * 编辑行为\n   * @returns {*}\n     */\n  async editAction(){\n    let id = this.get(\"id\");\n    think.isEmpty(id) && this.fail(\"参数不能为空！\");\n    let data = await this.model('action').find(id);\n    this.active=\"admin/action/index\";\n    this.meta_title = \"编辑行为\";\n    this.assign(\"data\",data);\n    return this.display('add');\n  }\n\n  /**\n   * 更新行为\n   */\n  async updateAction(){\n    let data = this.post();\n    if(think.isEmpty(data.id)){\n      data.status=1;\n      data.update_time = Date.now();\n      let res = await this.model(\"action\").add(data);\n      if(res){\n        this.success({name:\"新增成功！\",url:\"/admin/action/index\"});\n      }else {\n        this.fail(\"添加失败！\");\n      }\n    }else {\n\n      data.update_time = Date.now();\n      let res = await this.model(\"action\").update(data);\n      if(res){\n        this.success({name:\"更新成功！\",url:\"/admin/action/index\"});\n      }else {\n        this.fail(\"更新失败！\");\n      }\n    }\n  }\n\n  /**\n   * 删除日志\n   */\n  async removeAction(){\n    let ids = this.param(\"ids\");\n    think.isEmpty(ids)&& this.fail(\"参数错误\");\n    let map={};\n    if(think.isArray(ids)){\n      map.id = ['IN',ids];\n    }else if(think.isNumberString(ids)){\n      map.id = ids;\n    }\n    let res = await this.model('action_log').where(map).delete();\n    if(res){\n      this.success({name:\"删除成功！\",url:\"/admin/action/log\"});\n    }else {\n      this.fail(\"删除失败！\");\n    }\n  }\n  // 清楚日志\n  async clearAction(){\n    let res = await this.model('action_log').where('1=1').delete();\n    if(res){\n      this.success({name:'日志清空成功！',url:\"/admin/action/log\"});\n    }else {\n      this.fail(\"日志清空失败！\");\n    }\n  }\n}\n"
    ]
}