{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/file.js"
    ],
    "names": [
        "fs",
        "path",
        "__before",
        "model",
        "getset",
        "setup",
        "islogin",
        "is_login",
        "fail",
        "session",
        "user",
        "res",
        "think",
        "isEmpty",
        "uid",
        "indexAction",
        "display",
        "uploadAction",
        "file",
        "extend",
        "console",
        "log",
        "filepath",
        "basename",
        "data",
        "IS_QINIU",
        "qiniu",
        "service",
        "instance",
        "uploadpic",
        "uppic",
        "create_time",
        "Date",
        "getTime",
        "name",
        "originalFilename",
        "savename",
        "mime",
        "headers",
        "size",
        "location",
        "sha1",
        "hash",
        "md5",
        "uploadPath",
        "RESOURCE_PATH",
        "dateformat",
        "mkdir",
        "renameSync",
        "isFile",
        "savepath",
        "add",
        "json",
        "id",
        "uploadpicAction",
        "ret",
        "status",
        "type",
        "key",
        "picsAction",
        "selectpicAction",
        "limit",
        "select",
        "pics",
        "assign",
        "selecturlAction",
        "savenetpicAction",
        "config",
        "fieldName",
        "urlstr",
        "post",
        "up",
        "adapter",
        "upload",
        "saveRemote",
        "info",
        "url",
        "getpicAction",
        "get_cover",
        "pic",
        "end",
        "getqiniuuptokenAction",
        "uuid",
        "uptoken",
        "qiniuaddAction",
        "delqiniufileAction",
        "get",
        "find",
        "remove",
        "where",
        "delete",
        "success",
        "controller",
        "base"
    ],
    "mappings": "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",
    "file": "../../../src/admin/controller/file.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\n\n//import Base from './base.js';\nimport * as fs from 'fs';\nimport * as path from 'path';\nexport default class extends think.controller.base {\n    async __before() {\n        //网站配置\n        this.setup = await this.model(\"setup\").getset();\n        //登陆验证\n        let is_login = await this.islogin();\n        if (!is_login) {\n            return this.fail(\"非法操作!\");\n        }\n    }\n    /**\n     * 判断是否登录\n     * @returns {boolean}\n     */\n    async islogin() {\n        //判断是否登录\n        let user = await this.session('userInfo');\n        let res = think.isEmpty(user) ? false : user.uid;\n        return res;\n\n    }\n  /**\n   * index action\n   * @return {Promise} []\n   */\n  indexAction(){\n    //auto render template file index_index.html\n    return this.display();\n  }\n  //上传文件\n  async uploadAction(){\n    \n    let file = think.extend({}, this.file('file'));\n    console.log(file);\n    let filepath = file.path;\n    let basename = path.basename(filepath);\n      let data;\n      //强势插入七牛\n      if(this.setup.IS_QINIU == 1){\n          let qiniu = think.service(\"qiniu\");\n          let instance = new qiniu();\n          let uppic = await instance.uploadpic(filepath,basename);\n          console.log(\"uppic----------\"+JSON.stringify(uppic));\n          // { fieldName: 'file',\n          //     originalFilename: '2015-07-06_BaiduPlayerNetSetup_100.exe',\n          //     path: '/Users/Arterli/Projects/CmsWing/runtime/upload/EPKRrpZvCsSV73J-7kuDiiEY.exe',\n          //     headers:\n          //     { 'content-disposition': 'form-data; name=\"file\"; filename=\"2015-07-06_BaiduPlayerNetSetup_100.exe\"',\n          //         'content-type': 'application/x-msdownload' },\n          //     size: 1292280 }\n          if(!think.isEmpty(uppic)){\n               data ={\n                  create_time:new Date().getTime(),\n                  name:file.originalFilename,\n                  savename:basename,\n                  mime:file.headers[\"content-type\"],\n                  size:file.size,\n                  location:1,\n                  sha1:uppic.hash,\n                  md5:think.md5(basename),\n                  path:''\n              }\n          }\n\n          //return false;\n      }else {\n          let uploadPath = think.RESOURCE_PATH + '/upload/download/'+dateformat(\"Y-m-d\",new Date().getTime());\n          think.mkdir(uploadPath);\n          fs.renameSync(filepath, uploadPath + '/' + basename);\n          file.path = uploadPath + '/' + basename;\n          if(think.isFile(file.path)){\n              data ={\n                  savepath:'/upload/download/'+dateformat(\"Y-m-d\",new Date().getTime())+ '/',\n                  create_time:new Date().getTime(),\n                  name:file.originalFilename,\n                  savename:basename,\n                  mime:file.headers[\"content-type\"],\n                  size:file.size,\n                  md5:think.md5(basename),\n                  path:'/upload/download/'+dateformat(\"Y-m-d\",new Date().getTime())+ '/'+basename\n              };\n\n      }\n\n    }\n      console.log(data);\n      var res = await this.model(\"file\").data(data).add();\n    this.json({id:res,size:file.size,path:data.path});\n  }\n\n  //上传图片\n  async uploadpicAction(){\n    let file = think.extend({}, this.file('file'));\n    let filepath = file.path;\n    let basename = path.basename(filepath);\n    let ret = {'status':1,'info':'上传成功','data':\"\"}\n      let res;\n      //加入七牛接口\n    if(this.setup.IS_QINIU==1){\n        let qiniu = think.service(\"qiniu\");\n        let instance = new qiniu();\n         let uppic = await instance.uploadpic(filepath,basename);\n         console.log(\"uploadpic----------\"+JSON.stringify(uppic));\n        if(!think.isEmpty(uppic)){\n            let data ={\n                create_time:new Date().getTime(),\n                status:1,\n                type:2,\n                sha1:uppic.hash,\n                path:uppic.key\n\n            };\n           res = await this.model(\"picture\").data(data).add();\n        }\n    } else {\n        let uploadPath = think.RESOURCE_PATH + '/upload/picture/'+dateformat(\"Y-m-d\",new Date().getTime());\n        think.mkdir(uploadPath);\n        if(think.isFile(filepath)){\n            fs.renameSync(filepath, uploadPath + '/' + basename);\n        }else {\n            console.log(\"文件不存在！\")\n        }\n        file.path = uploadPath + '/' + basename;\n        if(think.isFile(file.path)){\n            let data ={\n                path:'/upload/picture/'+dateformat(\"Y-m-d\",new Date().getTime())+ '/' + basename,\n                create_time:new Date().getTime(),\n                status:1,\n\n            }\n             res = await this.model(\"picture\").data(data).add();\n        }else{\n            console.log('not exist')\n        }\n    }\n    console.log(\"uploadpicAction--------------\"+JSON.stringify(res));\n    this.json(res);\n  }\n  //上传多图\n  picsAction(){\n      let file = think.extend({},this.file('file'));\n      console.log(file);\n  }\n  //图片选择\n  async selectpicAction(){\n    let pics = await this.model(\"picture\").limit(2, 15).select();\n    this.assign(\"pics\", pics);\n    this.assign(\"field\", {\"name\":\"uploadimg\"});\n    this.display();\n  }\n\n  //链接选择\n  selecturlAction(){\n    this.assign(\"articles\", [1, 2, 3, 4, 5, 6]);\n    this.display();\n  }\n\n  async savenetpicAction(){\n    //抓取远程图片\n      /* 上传配置 */\n      this.config = this.config(\"ueditor\");\n      let config = {\n        \"pathFormat\" : this.config['catcherPathFormat'],\n        \"maxSize\" : this.config['catcherMaxSize'],\n        \"allowFiles\" : this.config['catcherAllowFiles'],\n        \"oriName\" : \"remote.png\"\n      };\n      let fieldName = this.config['catcherFieldName'];\n      let urlstr = this.post(\"picurl\");\n      let up = think.adapter(\"editor\", \"ueditor\"); //加载名为 ueditor 的 editor Adapter\n      let upload = new up(urlstr, config, \"remote\"); //实例化 Adapter\n      let info =  await upload.saveRemote();\n      console.log(info);\n     // let obj = {\"state\":\"SUCCESS\",\"url\":info.url,\"size\":431521,\"title\":info.title,\"original\":info.original,\"source\":imgUrl};\n      let data ={\n        path:info.url,\n        create_time:new Date().getTime(),\n        status:1\n      }\n      let res = await this.model(\"picture\").data(data).add();\n      if(res)\n      {\n        data.id = res;\n       return this.json(data);\n      }\n      else\n      {\n        return this.json({\"status\":0});\n      }\n\n  }\n\n  //根据图片id获取图片信息\n  async getpicAction(){\n      let id = this.post(\"id\");\n    //let pic = await this.model(\"picture\").where({\"id\":parseInt(this.post(\"id\"))}).find();\n      let pic = await get_cover(id);\n    this.end(pic);\n  }\n    //获取七牛token\n   async getqiniuuptokenAction (){\n        let qiniu = think.service(\"qiniu\");\n        let instance = new qiniu();\n       let key = think.uuid();\n       let uptoken = await instance.uploadpic(null,key,true);\n       this.json({\n           \"uptoken\": uptoken\n       })\n    }\n    //添加\n    async qiniuaddAction(){\n        let post = this.post();\n        let data ={\n            create_time:new Date().getTime(),\n            name:post.key,\n            savename:post.key,\n            mime:post.mime,\n            size:post.size,\n            location:1,\n            sha1:post.hash,\n            md5:think.md5(post.id)\n        }\n        //console.log(data);\n        let res = await this.model(\"file\").data(data).add();\n        return this.json(res);\n    }\n    //删除七牛资源\n    async delqiniufileAction(){\n        let id = this.get(\"id\");\n        let file = await this.model(\"file\").find(id);\n        let qiniu = think.service(\"qiniu\");\n        let instance = new qiniu();\n        let res = await instance.remove(file.savename);\n        if(res) {\n            this.model(\"file\").where({id:id}).delete();\n            return this.success({name: \"删除文件成功!\"})\n        }else {\n            return this.fail( \"删除文件失败!\")\n        }\n    }\n}\n"
    ]
}