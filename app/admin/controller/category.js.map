{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/category.js"
    ],
    "names": [
        "init",
        "http",
        "db",
        "model",
        "tactive",
        "indexAction",
        "where",
        "get",
        "mold",
        "gettree",
        "tree",
        "assign",
        "meta_title",
        "display",
        "gettreeAction",
        "json",
        "addAction",
        "isPost",
        "data",
        "post",
        "think",
        "isEmpty",
        "fail",
        "type",
        "status",
        "name",
        "find",
        "check",
        "updates",
        "res",
        "success",
        "url",
        "getField",
        "sortid",
        "unique",
        "typeid",
        "order",
        "select",
        "get_model",
        "extend",
        "console",
        "log",
        "active",
        "action",
        "gettemp",
        "temp_pc",
        "temp_m",
        "group",
        "role",
        "Number",
        "editAction",
        "category",
        "id",
        "info",
        "documentsorts",
        "types",
        "JSON",
        "parse",
        "typeobj",
        "val",
        "enable",
        "mod",
        "temp_show",
        "type_show",
        "priv_show",
        "groups_show",
        "catid",
        "priv",
        "priv_roleid",
        "priv_groupid",
        "v",
        "is_admin",
        "roleid",
        "arr",
        "m",
        "push",
        "delAction",
        "confirm",
        "get_sub_category",
        "pid",
        "l",
        "length",
        "ok",
        "category_id",
        "count",
        "delete",
        "cache",
        "delcate",
        "ids",
        "get_category",
        "model_id",
        "split",
        "get_table_name",
        "table",
        "sort",
        "fid",
        "update_cache",
        "moveAction",
        "source",
        "target",
        "s_model_id",
        "t_model_id",
        "ntarget",
        "a2a",
        "concat",
        "join",
        "groups",
        "a1",
        "a2",
        "o1",
        "o2",
        "o3",
        "na",
        "k",
        "session",
        "merge",
        "update",
        "from",
        "moveinfoAction",
        "source_id",
        "option",
        "nid",
        "oid",
        "group_id",
        "source_groups",
        "parse_type_attr",
        "target_groups",
        "source_g_s",
        "source_name",
        "title",
        "target_name",
        "isappAction",
        "isapp",
        "up"
    ],
    "mappings": "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",
    "file": "../../../src/admin/controller/category.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\n\nimport Base from './base.js';\n\nexport default class extends Base {\n    /**\n     * index action\n     * @return {Promise} []\n     */\n\n    init(http){\n        super.init(http);\n        this.db = this.model('category');\n        this.tactive = \"article\";\n    }\n    async indexAction(){\n        let where = {};\n        if(this.get(\"mold\")){\n            where.mold=this.get(\"mold\");\n        }\n       // console.log(where);\n        //auto render template file index_index.html\n         let tree = await this.db.gettree(0,\"id,name,title,sort,pid,allow_publish,status,model,mold,isapp\",where);\n         //console.log(tree)\n         this.assign(\"active\",this.get(\"mold\")||null);\n         this.assign(\"list\",tree);\n         this.meta_title = \"栏目管理\";\n        return this.display();\n\n    }\n    async gettreeAction(){\n        let tree = await this.db.gettree(0,\"id,name,title,sort,pid,allow_publish,status\");\n        return this.json(tree);\n    }\n\n    /**\n     * 添加栏目\n     */\n    async addAction(){\n        if(this.isPost()){\n            let data = this.post();\n            if(data.mold != 2){\n                //表单验证\n                if(think.isEmpty(data.model)){\n                    return this.fail(\"至少要绑定一个模型！\")\n                }\n                if(data.mold == 0){\n                    if(think.isEmpty(data.type)){\n                        return this.fail(\"允许文档类型，至少要选项一个！\")\n                    }\n                }\n\n            }\n\n            //console.log(data);\n\n            //return false;\n            data.status = 1;\n            //console.log(data);\n            if(!think.isEmpty(data.name)){\n                let check = await this.model(\"category\").where({name:data.name}).find();\n                if(!think.isEmpty(check)){\n                    return this.fail(\"同节点下,栏目标示不能重复\");\n                }\n            }\n            let res = await this.model(\"category\").updates(data);\n            if(res){\n                this.success({name:\"新增成功！\",url:\"/admin/category/index/mold/\"+data.mold});\n            }else {\n                this.fail(\"更新失败！\");\n            }\n        }else{\n            let mold = this.get('mold');\n            let sortid = await this.model(\"typevar\").getField(\"sortid\");\n            let type;\n            if(!think.isEmpty(sortid)){\n                sortid = unique(sortid);\n                //console.log(sortid);\n                //获取分类信息\n                type= await this.model(\"type\").where({typeid:['IN',sortid]}).order('displayorder ASC').select();\n            }\n\n            this.assign(\"typelist\",type);\n            //获取模型信息；\n            let model;\n            if(mold==0){\n                model = await this.model(\"model\").get_model(null,null,{extend:1});\n            }else if(mold==1) {\n                model = await this.model(\"model\").get_model(null,null,{extend:0});\n            }\n            console.log(model);\n            //console.log(obj_values(model));\n            this.assign(\"models\",model);\n\n            //获取运行的文档类型\n            this.active=\"admin/category/index\";\n            this.action = \"/admin/category/add\";\n            //获取模版列表（pc）\n            let temp_pc = await this.model(\"temp\").gettemp(1);\n            //console.log(temp_pc);\n            this.assign(\"temp_pc\",temp_pc);\n            //获取手机端模版\n            let temp_m = await this.model(\"temp\").gettemp(2);\n            //console.log(temp_m);\n            this.assign(\"temp_m\",temp_m);\n            //template_lists\n            //会员组\n\n            let group = await this.model(\"member_group\").order(\"sort ASC\").select();\n            this.assign('group',group);\n            let role = await this.model(\"auth_role\").order(\"sort ASC\").select();\n            this.assign('role',role);\n            switch (Number(mold)){\n                case 0:\n                    this.meta_title = \"添加栏目(系统模型)\"\n                    break;\n                case 1:\n                    this.meta_title = \"添加栏目(独立模型)\"\n                    break;\n                case 2:\n                    this.meta_title = \"添加栏目(单页面)\"\n                    break;\n                default:\n                    this.meta_title = \"添加栏目\"\n            }\n\n            return this.display();\n        }\n\n    }\n\n\n    /**编辑分类\n     *\n     */\n    async editAction(){\n       let category = this.model(\"category\");\n        if(this.isPost()){\n            let data = this.post();\n            data.status = 1;\n            //console.log(data);\n            //检查同节点下分类标示是否重复\n            if(!think.isEmpty(data.name)){\n             let check = await this.model(\"category\").where({id:[\"!=\",data.id],name:data.name}).find();\n                if(!think.isEmpty(check)){\n                    return this.fail(\"同节点下,栏目标示不能重复\");\n                }\n            }\n            let res = await this.model(\"category\").updates(data);\n            if(res){\n                this.success({name:\"更新成功！\",url:\"/admin/category/index\"});\n            }else {\n                this.fail(\"更新失败！\");\n            }\n        }else {\n          let id = this.get(\"cid\");\n           //console.log(id);\n            //获取分类信息\n            let info = await category.find(id);\n            this.assign(\"info\",info);\n            //console.log(info);\n            if(!think.isEmpty(info.documentsorts)){\n                let types = JSON.parse(info.documentsorts);\n                let typeobj = {};\n                for(let val of types.types){\n                    typeobj[val.enable]=val\n                }\n                this.assign(\"typeobj\",typeobj)\n            }\n\n            let sortid = await this.model(\"typevar\").getField(\"sortid\");\n            let type;\n            if(!think.isEmpty(sortid)){\n                sortid = unique(sortid);\n                //console.log(sortid);\n                //获取分类信息\n                type= await this.model(\"type\").where({typeid:['IN',sortid]}).order('displayorder ASC').select();\n            }\n\n            this.assign(\"typelist\",type);\n            //获取模型信息；\n            let model;\n            if(info.mold==0){\n                model = await this.model(\"model\").get_model(null,null,{extend:1});\n            }else if(info.mold==1) {\n                model = await this.model(\"model\").get_model(null,null,{extend:0});\n            }\n\n            //console.log(obj_values(model));\n            this.assign(\"models\",model);\n            if(info.mold == 1) {\n                let mod = await this.model(\"model\").get_model(info.model);\n                console.log(mod);\n                this.assign(\"mod\",mod)\n            }else {\n                this.assign(\"mod\",{temp_show: 1,\n                    type_show: 1,\n                    priv_show: 1,\n                    groups_show: 1})\n            }\n            this.active=\"admin/category/index\";\n                this.action = \"/admin/category/edit\";\n                this.meta_title = \"编辑栏目\";\n            //获取模版列表\n            //获取模版列表（pc）\n            let temp_pc = await this.model(\"temp\").gettemp(1);\n            //console.log(temp_pc);\n            this.assign(\"temp_pc\",temp_pc);\n            //获取手机端模版\n            let temp_m = await this.model(\"temp\").gettemp(2);\n            //console.log(temp_m);\n            this.assign(\"temp_m\",temp_m);\n            //template_lists\n            //会员组\n            let group = await this.model(\"member_group\").order(\"sort ASC\").select();\n            this.assign('group',group);\n            let role = await this.model(\"auth_role\").order(\"sort ASC\").select();\n            this.assign('role',role);\n            //提取权限\n            let priv = await this.model(\"category_priv\").where({catid:id}).select();\n            //console.log(priv);\n            let priv_roleid={}\n            let priv_groupid={}\n\n            for(let v of priv){\n                if(v.is_admin==1){\n                    priv_roleid[v.roleid]=[];\n                }else {\n\n                    priv_groupid[v.roleid]=[];\n                }\n            }\n            for(let v in priv_groupid ){\n                let arr = [];\n                for(let m of priv){\n                    if(v==m.roleid && m.is_admin==0){\n                        arr.push(m.action)\n\n\n                    }\n                }\n                priv_groupid[v]=arr;\n            }\n            for(let v in priv_roleid ){\n                let arr = [];\n                for(let m of priv){\n                    if(v==m.roleid && m.is_admin==1){\n                        arr.push(m.action)\n\n\n                    }\n                }\n                priv_roleid[v]=arr;\n            }\n           //console.log(priv_groupid);\n            //console.log(priv_roleid);\n            this.assign(\"priv_groupid\",priv_groupid);\n            this.assign(\"priv_roleid\",priv_roleid);\n           return this.display();\n        }\n    }\n    //删除栏目\n    async delAction(){\n        let id = this.get(\"id\");\n        let confirm = this.get(\"confirm\");\n        let type = this.get(\"type\");\n        if(confirm==1){\n            //查询该栏目是否包含子栏目\n          let pid= await this.model(\"category\").get_sub_category(id);\n            //console.log(pid);\n\n            let l = pid.length;\n            if(l>0){\n                return this.json({ok:2,info:`该栏目含有${l}子栏目`})\n            }\n            let count =  await this.model(\"document\").where({category_id: id}).count(\"id\");\n           if(count==0){\n               await this.model(\"category\").delete({where:{id:id}});\n               //删除分类权限\n               await this.model(\"category_priv\").delete({where:{catid:id}});\n               think.cache(\"sys_category_list\",null);\n               think.cache(\"all_category\",null);\n             return this.json({ok:0,info:\"删除成功!\"});\n           }else {\n               return this.json({ok:1,info:`该栏目含有${count}条内容`})\n           }\n        }\n        if(type == \"one\"){\n            await this.delcate(id);\n            return this.json({ok:0,info:\"删除成功!\"});\n        }else if(type == \"all\"){\n            let pid= await this.model(\"category\").get_sub_category(id);\n            //console.log(pid);\n\n            for(let v of pid){\n                await this.delcate(v);\n            }\n            await this.delcate(id);\n            return this.json({ok:0,info:\"删除成功!\"});\n        }\n        //await this.delcate(id);\n        //console.log(ids);\n\n\n    }\n    async delcate(id){\n        //查处要删除的该栏目内容的id\n        let ids = await this.model(\"document\").where({category_id:id}).getField(\"id\");\n       if(!think.isEmpty(ids)){\n           //查出该栏目的管理的模型\n           let model_id = await this.model(\"category\").get_category(id,\"model\");\n           for (let v of model_id.split(\",\")){\n               //获取该模型的表明\n               let table = await this.model(\"model\").get_table_name(v);\n               //删除模型内容\n               await this.model(table).where({id:[\"IN\",ids]}).delete();\n           }\n       }\n        //删除分类信息\n        let sort = await this.model(\"category\").get_category(id,\"documentsorts\");\n        if(!think.isEmpty(sort)){\n            await this.model(\"typeoptionvar\").where({fid:id}).delete();\n            if(!think.isEmpty(JSON.parse(sort).types)){\n                for(let v of JSON.parse(sort).types){\n                    let table = `type_optionvalue${v.enable}`\n                    await this.model(table).where({fid:id}).delete();\n                }\n            }\n        }\n        await this.model(\"category\").delete({where:{id:id}});\n        //删除分类权限\n        await this.model(\"category_priv\").delete({where:{catid:id}});\n        await this.model(\"document\").delete({where:{category_id:id}});\n        update_cache(\"category\")//更新栏目缓存\n        //查处要删除的该栏目内容的id\n    }\n    //移动/合并栏目\n    async moveAction(){\n        if(this.isPost()){\n        let data = this.post();\n           console.log(data);\n            //return false;\n            //检查要移动的栏目是否包含子栏目\n            let pid= await this.model(\"category\").get_sub_category(data.source);\n            //console.log(pid);\n            let l = pid.length;\n            if(l>0){\n                return this.fail(`源栏目含有${l}个子栏目，前先删除或者移走子栏目，再进行操作！`)\n            }\n            //检查源栏目是否 跟目标栏目重复\n            if(data.source == data.target){\n                return this.fail(\"源栏目不能与目标栏目重复！\")\n            }\n            if(data.target==0){\n                return this.fail(\"请选择目标栏目！\")\n            }\n            let source = await this.model(\"category\").find(data.source);\n            let target = await this.model(\"category\").find(data.target);\n          //获取栏目模型信息\n            console.log(target);\n            let s_model_id=[];\n            if(!think.isEmpty(source.model)){\n                s_model_id = source.model.split(\",\");\n            }\n            let t_model_id=[];\n            if(!think.isEmpty(target.model)){\n                t_model_id = target.model.split(\",\");\n            }\n            let ntarget=target;\n            //检查源栏目与目标栏目的模型，如果相等，直接复制，如果不相等合并。\n            if(!a2a(s_model_id,t_model_id)){\n                ntarget.model = unique(t_model_id.concat(s_model_id)).sort().join(\",\")\n            };\n            //console.log(2222222);\n            if (!think.isEmpty(source.groups) && think.isEmpty(target.groups)) {\n                ntarget.groups = source.groups\n            }\n            if (!think.isEmpty(source.documentsorts) && think.isEmpty(target.documentsorts)) {\n                ntarget.documentsorts = source.documentsorts\n            }\n            if (!think.isEmpty(source.documentsorts) && !think.isEmpty(target.documentsorts)){\n                let a1 = JSON.parse(source.documentsorts);\n                let a2 = JSON.parse(target.documentsorts);\n                let o1 ={}\n                for(let v of a1.types){\n                    o1[v.enable]=v\n                }\n                let o2 ={}\n                for(let v of a2.types){\n                    o2[v.enable]=v\n                }\n                //console.log(o1);\n                //console.log(o2);\n                let o3 = think.extend(o1,o2);\n                //console.log(o3);\n                let na = [];\n                for(let k in o3){\n                   na.push(o3[k])\n                }\n                a2.types =na;\n                //console.log(na);\n                ntarget.documentsorts = JSON.stringify(a2);\n            }\n\n            //检查源栏目是否有分类信息和分组，如果有跳转到处理页面\n\n                if(!think.isEmpty(source.groups) && source.groups != target.groups && !think.isEmpty(target.groups)){\n                    //如果源栏目和目标栏目都有分类信息和分组，并且不相等，跳转配置页面\n                    //记录栏目信息\n                   await this.session(\"ntarget\", ntarget);\n                    let url= `/admin/category/moveinfo/source/${data.source}/target/${data.target}`;\n                    if(data.merge == 1){\n                       url= `/admin/category/moveinfo/merge/1/source/${data.source}/target/${data.target}`;\n                    }\n                    return this.success({\"name\":\"源栏目与目标栏目存在不同的分组或者分类信息，转入处理页面。\",\"url\":url});\n                }else {\n\n                    //console.log(ntarget);\n                    this.model(\"category\").update(ntarget);//复制栏目信息\n                    this.model(\"document\").where({category_id: source.id}).update({category_id: ntarget.id});//移动文章\n                    //如果存在分类信息移动分类信息内容\n                    if(!think.isEmpty(source.documentsorts)){\n                        let documentsorts = JSON.parse(source.documentsorts);\n                        if(!think.isEmpty(documentsorts.types)){\n                            for(let v of documentsorts.types){\n                                this.model(\"type_optionvalue\"+v.enable).where({fid: source.id}).update({fid: ntarget.id});\n                                this.model(\"typeoptionvar\").where({fid: source.id,sortid:v.enable}).update({fid: ntarget.id});\n                            }\n                        }\n                    }\n                    if(data.merge == 1){//如果合并删除源栏目\n                       await this.model(\"category\").delete({where:{id:data.source}});\n                    }\n                    update_cache(\"category\")//更新栏目缓存\n                    return this.success({name: \"成功！\",url:\"/admin/category/index\"})\n                }\n\n        }else {\n            let from = this.get(\"from\");\n            this.assign(\"from\",from);\n            this.active=\"admin/category/index\";\n            if(this.get('merge')==1){\n                this.meta_title = \"合并栏目\";\n            }else {\n                this.meta_title = \"移动栏目\";\n            }\n\n            return this.display();\n        }\n\n    }\n    async moveinfoAction(){\n        if(this.isPost()){\n            let data = this.post();\n            console.log(data);\n            //return false;\n            let source = await this.model(\"category\").find(data.source_id);\n            let ntarget = await this.session(\"ntarget\");\n            console.log(source);\n            if(data.option==2){\n                let arr = []\n                for(let v of JSON.parse(data.data)){\n                    arr.push(`\\r\\n${v.nid}:${v.name}`)\n                }\n                ntarget.groups=ntarget.groups+arr.join(\"\");\n            }\n            //console.log(ntarget);\n           await this.model(\"category\").update(ntarget);//复制栏目信息\n\n            this.model(\"document\").where({category_id: source.id}).update({category_id: ntarget.id});//移动文章\n            //如果存在分类信息移动分类信息内容\n            if(!think.isEmpty(source.documentsorts)){\n                let documentsorts = JSON.parse(source.documentsorts);\n                if(!think.isEmpty(documentsorts.types)){\n                    for(let v of documentsorts.types){\n                        this.model(\"type_optionvalue\"+v.enable).where({fid: source.id}).update({fid: ntarget.id});\n                        this.model(\"typeoptionvar\").where({fid: source.id,sortid:v.enable}).update({fid: ntarget.id});\n                    }\n                }\n            }\n            //移动分组\n            let groups = JSON.parse(data.data);\n            for (let v of groups){\n                if(v.oid != v.nid){\n                    this.model(\"document\").where({group_id:v.oid}).update({group_id:v.nid});//移动文章\n                }\n            }\n\n            if(data.merge == 1){//如果合并删除源栏目\n                await this.model(\"category\").delete({where:{id:data.source_id}});\n            }\n            update_cache(\"category\")//更新栏目缓存\n            return this.success({name: \"成功！\",url:\"/admin/category/index\"})\n        }else {\n            let data = this.get();\n            console.log(data);\n            let source = await this.model(\"category\").find(data.source);\n            let target = await this.session(\"ntarget\");\n            this.assign({\n                source_groups:parse_type_attr(source.groups),\n                target_groups:parse_type_attr(target.groups),\n                source_g_s:JSON.stringify(parse_type_attr(source.groups)),\n                source_name:source.title,\n                target_name:target.title,\n                source_id:source.id\n            });\n            console.log(parse_type_attr(source.groups));\n            console.log(target);\n            this.active=\"admin/category/index\";\n\n            if(data.merge==1){\n                this.meta_title = \"合并栏目\";\n            }else {\n                this.meta_title = \"移动栏目\";\n            }\n\n            return this.display();\n        }\n\n    }\n    //是否在手机端显示\n    async isappAction(){\n        let up = await this.model(\"category\").where({id:this.get(\"ids\")}).update({isapp:this.get(\"isapp\")});\n        if(up){\n            update_cache(\"category\")//更新栏目缓存\n            return this.success({name:\"操作成功!\"});\n        }else {\n            return this.fail(\"操作失败!\");\n        }\n    }\n}\n"
    ]
}