{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/test.js"
    ],
    "names": [
        "init",
        "http",
        "indexAction",
        "Auth",
        "think",
        "adapter",
        "auth",
        "check",
        "res",
        "console",
        "log",
        "action",
        "end",
        "nunjucksAction",
        "assign",
        "Date",
        "valueOf",
        "display",
        "tesfAction",
        "model",
        "where",
        "id",
        "delete",
        "affectedRows",
        "funAction",
        "str",
        "match",
        "isEmpty",
        "user_id",
        "record_id",
        "user",
        "record",
        "time",
        "data",
        "replace",
        "val",
        "param",
        "split",
        "call_user_func",
        "push",
        "ss",
        "str_replace",
        "url",
        "momentAction",
        "getset",
        "set",
        "adaAction",
        "cas",
        "cass",
        "name",
        "getname",
        "typeAction",
        "checkTableExist",
        "tabel",
        "sssAction",
        "table",
        "select"
    ],
    "mappings": "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",
    "file": "../../../src/admin/controller/test.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\nimport Base from './base.js'\nexport default class extends Base {\n    init(http) {\n        super.init(http);\n        // http.action = http.method.toLowerCase();\n        //console.log(http.method.toLowerCase())\n\n    }\n   async indexAction(){\n        //let a={};///\n        //a.s11=\"dfsd\";\n        //let aa=[]\n        //aa.push(1)\n        //let bb=aa.join(\",\")\n        //let cc=!(typeof(a) == \"undefined\")\n        //console.log(cc)\n       //let check=await this.check(\"/Admin/test\",\"1\");\n       //console.log(check);\n       //console.log(JSON.stringify(this.param()));\n       //let REQUEST = JSON.stringify(this.param()).toLowerCase()\n      // console.log(Object.is(JSON.stringify(url1).toLowerCase(), JSON.stringify(this.param()).toLowerCase()));\n      //  this.end(\"dd\");\n       let Auth = think.adapter(\"auth\", \"rbac\");\n       let auth = new Auth(14);\n       let res = await auth.check(\"/admin/test1\");\n       //let roles =this.model();\n       // console.log(roles);\n       let http = this.http;\n       console.log(http.action);\n       this.end();\n    }\n\n    nunjucksAction(){\n\n        this.assign(\"date\",new Date().valueOf());\n        return this.display()\n    }\n\n\n       async tesfAction(){\n          let model = this.model('sfsfsdf');\n          let affectedRows = await model.where({id: ['>', 100]}).delete();\n          }\n\n    async funAction(){\n\n\n    let str = \"[user|get_nickname]在[time|time_format]登录了后台[model]\";\n        let match = str.match(/\\[(\\S+?)\\]/g);\n        //console.log(match);\n        if(!think.isEmpty(match)){\n            let user_id = 1;\n            let record_id = 3;\n            let model = \"mmm\";\n\n            let log={\n                user :user_id,\n                record:record_id,\n                model:model,\n                time: new Date().valueOf(),\n                data:{\n                    user :user_id,\n                    record:record_id,\n                    model:model,\n                    time: new Date().valueOf(),\n                }\n            }\n\n            let replace = []\n            for(let val of match){\n                val= val.replace(/(^\\[)|(\\]$)/g, \"\");\n                let param = val.split('|');\n                //console.log(param);\n                if(!think.isEmpty(param[1])){\n                    replace.push(await call_user_func(param[1],log[param[0]]))\n                }else {\n                    replace.push(log[param[0]])\n                }\n            }\n            let data= replace;\n            let ss= str_replace(match,replace,str);\n            //for (let i=0 ; i < match.length;i++ ){\n            //    let nstr = str.replace(match[i],replace[i]);\n            //    console.log(nstr);\n            //}\n            console.log(ss);\n        }else {\n            let ss = str;\n        }\n        console.log(this.http.url);\n        //var funcs = ['test1', 'test2'];\n        //for(var i=0;i<funcs.length;i++) {\n        //    call_user_func(funcs[i], [\"ddd\", \"cc\"]);\n        //}\n        //\n        //let test1=function(a, b) {\n        //    console.log(a + b + 'is a good gay');\n        //}\n        //let test2=function(a) {\n        //    console.log(a+\" is sb\");\n        //}\n    }\n     async momentAction(){\n        // let moment = require('moment');\n        // let datetime = moment().unix();\n        // moment(1318874398806).unix();\n        // console.log( moment(1318874398806).format(\"dddd, MMMM Do YYYY, h:mm:ss a\"));\n        let set = await this.model(\"setup\").getset()\n        //think.log(this.setup.WEIXIN_TYPE['2'],\"配置输出\");\n        this.end(set);\n    }\n    adaAction(){\n      let cas = think.adapter(\"school\", \"calss\"); //加载名为 dot 的 Template Adapter\n      let cass = new cas(); //实例化 Adapter\n      let name = cass.getname(1);\n      console.log(name)\n    }\n    async typeAction(){\n        let tabel = await this.model(\"type\").checkTableExist(1);\n        console.log(tabel);\n    }\n    async sssAction(){\n        await this.model().table(\"user\",true).select()\n    }\n}\n"
    ]
}