{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/article_safe_save_090546.js"
    ],
    "names": [
        "init",
        "http",
        "tactive",
        "indexAction",
        "cate_id",
        "get",
        "model_id",
        "position",
        "group_id",
        "sortid",
        "sortval",
        "models",
        "groups",
        "model",
        "_model",
        "console",
        "log",
        "think",
        "isEmpty",
        "admin_priv",
        "get_category",
        "sort",
        "JSON",
        "parse",
        "defaultshow",
        "where",
        "select",
        "typevar",
        "val",
        "optionid",
        "find",
        "option",
        "type",
        "rules",
        "parse_type_attr",
        "choices",
        "parse_config_attr",
        "v",
        "id",
        "searchtxt",
        "searcharr",
        "arr",
        "split",
        "len",
        "length",
        "i",
        "obj",
        "name",
        "unit",
        "pid",
        "push",
        "assign",
        "isNumberString",
        "field",
        "data",
        "list_grid",
        "fields",
        "ngrids",
        "grids",
        "value",
        "title",
        "href",
        "indexOf",
        "values",
        "format",
        "array",
        "unique",
        "getDocumentList",
        "list",
        "pics",
        "get_pic",
        "parseDocumentList",
        "get_parent_category",
        "nav",
        "modellist",
        "modelobj",
        "get_document_model",
        "meta_title",
        "display",
        "map",
        "status",
        "param",
        "update_time",
        "Date",
        "valueOf",
        "getField",
        "uid",
        "Document",
        "get_sub_category",
        "subcate",
        "category_id",
        "getSchema",
        "tablefields",
        "isArray",
        "array_diff",
        "modelName",
        "alias",
        "join",
        "table",
        "as",
        "on",
        "key",
        "array_search",
        "sort_id",
        "nsobj",
        "optionidarr",
        "valuearr",
        "qarr",
        "vv",
        "Number",
        "fid",
        "session",
        "user",
        "groupid",
        "members",
        "grs",
        "order",
        "page",
        "countSelect",
        "Pages",
        "adapter",
        "pages",
        "article",
        "allow_publish",
        "count",
        "getmenuAction",
        "get_all_category",
        "cate",
        "is_admin",
        "parr",
        "mold",
        "url",
        "target",
        "icon",
        "priv",
        "roleid",
        "cates",
        "in_array",
        "json",
        "arr_to_tree",
        "csrf",
        "addAction",
        "fail",
        "check_category",
        "info",
        "topid",
        "get_model_attribute",
        "get_type_bycate",
        "type_list",
        "active",
        "editAction",
        "document",
        "details",
        "xfmb",
        "config",
        "get_table_name",
        "tid",
        "tags",
        "updateAction",
        "post",
        "updates",
        "res",
        "ip",
        "success",
        "setstatusAction",
        "delsearch",
        "keyname",
        "delkey",
        "addsearch",
        "addkey",
        "recycleAction",
        "category",
        "get_nickname",
        "username",
        "clearAction",
        "clist",
        "delete"
    ],
    "mappings": "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",
    "file": "../../../src/admin/controller/article_safe_save_090546.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\n\nimport Base from './base.js';\nexport default class extends Base {\n    init(http) {\n        super.init(http);\n        this.tactive = \"article\";\n    }\n\n    /**\n     * index action\n     * @return {Promise} []\n     */\n    async indexAction() {\n        let cate_id = this.get('cate_id') || null;\n        let model_id = this.get('model_id') || null;\n        let position = this.get('position') || null;\n        let group_id = this.get('group_id') || 0;\n        let sortid = this.get('sortid') || 0;\n        let sortval = this.get('sortval') || null;\n        let models;\n        let groups;\n        let model;\n        let _model;\n        //console.log(2222);\n        console.log(cate_id);\n        if (!think.isEmpty(cate_id)) {\n            //权限验证\n            await this.admin_priv(\"init\", cate_id, \"您没有权限查看本栏目！\")\n                // 获取分类信息\n            let sort = await this.model(\"category\").get_category(cate_id, 'documentsorts');\n\n            if (sort) {\n                sort = JSON.parse(sort);\n                console.log(\"sort-------------------\" + JSON.stringify(sort));\n                if (sortid == 0) {\n                    sortid = sort.defaultshow;\n                }\n                let typevar = await this.model(\"typevar\").where({ sortid: sortid }).select();\n                for (let val of typevar) {\n\n                    val.option = await this.model(\"typeoption\").where({ optionid: val.optionid }).find();\n                    if (val.option.type == 'select' || val.option.type == 'radio') {\n                        if (!think.isEmpty(val.option.rules)) {\n                            val.option.rules = JSON.parse(val.option.rules);\n                            val.rules = parse_type_attr(val.option.rules.choices);\n                            val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n                        }\n\n                    } else if (val.option.type == 'checkbox') {\n                        if (!think.isEmpty(val.option.rules)) {\n                            val.option.rules = JSON.parse(val.option.rules);\n                            val.rules = parse_type_attr(val.option.rules.choices);\n                            console.log(val.rules);\n                            for (let v of val.rules) {\n                                v.id = \"l>\" + v.id\n                            }\n                            val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n                            //console.log(val.rules);\n                        }\n                    } else if (val.option.type == 'range') {\n                        if (!think.isEmpty(val.option.rules)) {\n                            let searchtxt = JSON.parse(val.option.rules).searchtxt;\n                            let searcharr = []\n                            if (!think.isEmpty(searchtxt)) {\n                                let arr = searchtxt.split(\",\");\n                                let len = arr.length;\n                                for (var i = 0; i < len; i++) {\n                                    let obj = {}\n                                    if (!think.isEmpty(arr[i - 1])) {\n                                        if (i == 1) {\n                                            obj.id = 'd>' + arr[i];\n                                            obj.name = '低于' + arr[i] + val.option.unit;\n                                            obj.pid = 0\n                                            searcharr.push(obj);\n                                        } else {\n                                            obj.id = arr[i - 1] + '>' + arr[i];\n                                            obj.name = arr[i - 1] + \"-\" + arr[i] + val.option.unit;\n                                            obj.pid = 0\n                                            searcharr.push(obj)\n                                        }\n\n                                    }\n\n                                }\n                                searcharr.push({ id: 'u>' + arr[len - 1], name: '高于' + arr[len - 1] + val.option.unit, pid: 0 })\n                            }\n                            //console.log(searcharr);\n                            val.option.rules = JSON.parse(val.option.rules);\n                            val.rules = searcharr;\n                            // val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n\n                        }\n                    }\n                }\n                //console.log(typevar);\n                this.assign(\"typevar\", typevar);\n                console.log(\"typevar-------------------\" + JSON.stringify(typevar));\n            }\n            //console.log(sort);\n            this.assign(\"sort\", sort);\n            console.log(\"sort---------,\" + JSON.stringify(sort));\n            let pid = this.get(\"pid\") || 0;\n            // 获取列表绑定的模型\n            if (pid == 0) {\n                models = await this.model(\"category\").get_category(cate_id, 'model');\n                // 获取分组定义\n                groups = await this.model(\"category\").get_category(cate_id, 'groups');\n                if (groups) {\n                    groups = parse_config_attr(groups);\n                }\n            } else { // 子文档列表\n                models = await this.model(\"category\").get_category(cate_id, 'model_sub');\n            }\n            //console.log(models);\n            //console.log(!think.isNumberString(models));\n            //console.log(think.isEmpty(model_id));\n            if (think.isEmpty(model_id) && !think.isNumberString(models)) {\n\n                // 绑定多个模型 取基础模型的列表定义\n                model = await this.model('model').where({ name: 'document' }).find();\n                //console.log(model);\n            } else {\n\n                model_id = model_id ? model_id : models;\n                //获取模型信息\n                model = await this.model('model').where({ id: ['IN', [model_id]] }).find();;\n\n                if (think.isEmpty(model['list_grid'])) {\n                    let data = await this.model('model').field('list_grid').where({ name: 'document' }).find();\n                    model.list_grid = data.list_grid;\n                    //console.log(33);\n                }\n            }\n            this.assign('model', models.split(\",\"))\n            _model = models.split(\",\")\n        } else { // 子文档列表\n            //获取模型信息\n            model = await this.model(\"model\").where({ name: \"document\" }).find();\n            model_id = null;\n            cate_id = 0;\n            this.assign('model', null);\n            _model = null;\n        }\n        //解析列表规则\n        let fields = [];\n        let ngrids = [];\n        //console.log(model);\n        let grids = model.list_grid.split(\"\\r\\n\");\n        console.log(\"grids----------,,\" + JSON.stringify(grids));\n        for (let value of grids) {\n            //字段:标题:链接\n            let val = value.split(\":\");\n            //支持多个字段显示\n            let field = val[0].split(\",\");\n            value = { field: field, title: val[1] }\n\n            if (!think.isEmpty(val[2])) {\n                value.href = val[2];\n            }\n            // console.log(222);\n            if (val[1]) {\n                if (val[1].indexOf('|') > -1) {\n                    // 显示格式定义\n                    [values.title, values.format] = val[1].split('|');\n                }\n            }\n            //console.log(field);\n            for (let val of field) {\n                let array = val.split('|');\n                fields.push(array[0]);\n            }\n            ngrids.push(value);\n        }\n        // 文档模型列表始终要获取的数据字段 用于其他用途\n        fields.push('category_id');\n        fields.push('model_id');\n        fields.push('pid');\n        //过滤重复字段\n        fields = unique(fields);\n        //console.log(fields);\n        // console.log(model_id);\n        let list = await this.getDocumentList(cate_id, model_id, position, fields, group_id, sortval, sortid);\n        for (let val of list) {\n            if (val.pics) {\n                //val.pics = await get_pics_one(val.pics,\"path\");\n                val.pics = await get_pic(val.pics.split(\",\")[0], 1, 100)\n            } else {\n                val.pics = '/static/noimg.jpg';\n            }\n        }\n        console.log(\"list---------,\"+JSON.stringify(list) );\n        list = await this.parseDocumentList(list, model_id);\n        //console.log(list);\n        //获取面包屑信息\n        let nav = await this.model('category').get_parent_category(cate_id);\n        this.assign('breadcrumb', nav);\n        //获取模型信息\n        let modellist = [];\n\n        //console.log(111111111)\n        if (think.isEmpty(_model)) {\n            modellist = null;\n        } else {\n            for (let val of _model) {\n                let modelobj = {}\n                modelobj.id = val;\n                modelobj.title = await this.model(\"model\").get_document_model(val, \"title\");\n                modellist.push(modelobj);\n            }\n        }\n        //console.log(this.setup.DOCUMENT_POSITION)\n\n        this.assign('modellist', modellist);\n        this.assign('cate_id', cate_id);\n        this.assign('model_id', model_id);\n        this.assign('group_id', group_id);\n        this.assign('sortid', sortid);\n        this.assign('position', position);\n        this.assign('groups', groups);\n        this.assign('list', list);\n        this.assign('list_grids', ngrids);\n        this.assign('model_list', model);\n        this.meta_title = '内容管理';\n        this.assign({\n            \"navxs\": true,\n        });\n\n        // console.log(\"model---------,\"+JSON.stringify(model) );\n        // console.log(\"ngrids---------,\"+JSON.stringify(ngrids) );\n        console.log(\"cate_id---------,\" + JSON.stringify(cate_id));\n        // console.log(\"model_id---------,\"+JSON.stringify(model_id) );\n        // console.log(\"sortid---------,\"+JSON.stringify(sortid) );\n        // console.log(\"position---------,\"+JSON.stringify(position) );\n        // console.log(\"groups---------,\"+JSON.stringify(groups) );\n        // console.log(\"model_list---------,\"+JSON.stringify(model) );\n\n        // console.log(\"modellist---------,\"+JSON.stringify(modellist) );\n        // console.log(\"list---------,\"+JSON.stringify(list) );\n        return this.display();\n    }\n    \n    /**\n     * 默认文档列表方法\n     * @param integer $cate_id 分类id\n     * @param integer $model_id 模型id\n     * @param integer $position 推荐标志\n     * @param mixed $field 字段列表\n     * @param integer $group_id 分组id\n     */\n    async getDocumentList(cate_id, model_id, position, field, group_id, sortval, sortid) {\n        //console.log(2222222);\n        /* 查询条件初始化 */\n        cate_id = cate_id || 0, field = field || true;\n        let map = {};\n        let status;\n        if (!think.isEmpty(this.get('title'))) {\n            map.title = ['like', '%' + this.param('title') + '%'];\n        }\n        if (!think.isEmpty(this.get('status'))) {\n            map.status = this.param('status');\n            status = map.status;\n        } else {\n            status = null;\n            map.status = ['IN', '0,1,2'];\n        }\n        if (!think.isEmpty(this.get('time-start'))) {\n            map.update_time = { '>=': new Date(this.param('time-start').valueOf()) };\n        }\n        if (!think.isEmpty(this.get('time-end'))) {\n            map.update_time = { '<=': 24 * 60 * 60 + new Date(this.param('time-end').valueOf()) };\n        }\n        if (!think.isEmpty(this.get('nickname'))) {\n            map.uid = await this.model('member').where({ 'nickname': this.param('nickname') }).getField('uid');\n        }\n\n        // 构建列表数据\n        let Document = this.model('document');\n\n        if (cate_id) {\n            //获取当前分类的所有子栏目\n            let subcate = await this.model('category').get_sub_category(cate_id);\n            // console.log(subcate);\n            subcate.push(cate_id);\n            map.category_id = ['IN', subcate];\n        }\n        // console.log(map);\n        map.pid = this.param('pid') || 0;\n        //console.log(map.pid);\n        if (map.pid != 0) { // 子文档列表忽略分类\n            delete map.category_id;\n        }\n\n        //console.log(array_diff(tablefields,field));\n        if (!think.isEmpty(model_id)) {\n            map.model_id = model_id;\n            await Document.select();\n            let tablefields = Object.keys(await Document.getSchema());\n            //console.log(array_diff(tablefields,field));\n            // console.log(field);\n            //return\n            if (think.isArray(field) && array_diff(tablefields, field)) {\n                let modelName = await this.model('model').where({ id: model_id }).getField('name');\n                //console.log('__DOCUMENT_'+modelName[0].toUpperCase()+'__ '+modelName[0]+' ON DOCUMENT.id='+modelName[0]+'.id');\n                // let sql = Document.parseSql(sql)\n                //console.log(`${this.config('db.prefix')}document_${modelName[0]} ${modelName[0]} ON DOCUMENT.id=${modelName[0]}.id`);\n                // return\n                //Document.join('__DOCUMENT_'+modelName[0].toUpperCase()+'__ '+modelName[0]+' ON DOCUMENT.id='+modelName[0]+'.id');\n                //Document.alias('DOCUMENT').join(`${this.config('db.prefix')}document_${modelName[0]} ${modelName[0]} ON DOCUMENT.id=${modelName[0]}.id`);\n                //console.log(3333333333);\n                Document.alias('DOCUMENT').join({\n                    table: `document_${modelName[0]}`,\n                    join: \"inner\",\n                    as: modelName[0],\n                    on: [\"id\", \"id\"]\n                })\n                let key = array_search(field, 'id');\n                //console.log(key)\n                if (false !== key) {\n                    delete field[key];\n                    field[key] = 'DOCUMENT.id';\n                }\n            }\n        }\n        //console.log(field);\n        //console.log(1111111);\n        if (!think.isEmpty(position)) {\n            map[1] = \"position & {$position} = {$position}\";\n        }\n        if (!think.isEmpty(group_id)) {\n            map['group_id'] = group_id;\n        }\n        if (!think.isEmpty(sortid)) {\n            map.sort_id = [\"IN\", [sortid, 0]];\n        }\n        let nsobj = {};\n        if (!think.isEmpty(sortval)) {\n            sortval = sortval.split(\"|\");\n            nsobj = {}\n            let optionidarr = [];\n            let valuearr = [];\n            for (let v of sortval) {\n                let qarr = v.split(\"_\");\n                nsobj[qarr[0]] = qarr[1];\n                if (qarr[1] != 0) {\n                    let vv = qarr[1].split(\">\");\n                    //console.log(vv);\n                    if (vv[0] == \"d\" && !think.isEmpty(vv[1])) {\n                        map[\"t.\" + qarr[0]] = [\"<\", vv[1]];\n                    } else if (vv[0] == \"u\" && !think.isEmpty(vv[1])) {\n                        map[\"t.\" + qarr[0]] = [\">\", vv[1]];\n                    } else if (vv[0] == \"l\" && !think.isEmpty(vv[1])) {\n                        map[\"t.\" + qarr[0]] = [\"like\", `%\"${vv[1]}\"%`];\n                    } else if (!think.isEmpty(vv[0]) && !think.isEmpty(vv[1])) {\n                        map[\"t.\" + qarr[0]] = [\"BETWEEN\", Number(vv[0]), Number(vv[1])];\n                    } else {\n                        map[\"t.\" + qarr[0]] = qarr[1];\n                    }\n\n                }\n            }\n            map.fid = cate_id;\n            // where.optionid = [\"IN\",optionidarr];\n            // where['value'] = [\"IN\",valuearr];\n            // let type= await this.model(\"typeoptionvar\").where(where).select();\n            //  console.log(type);\n            // console.log(map);\n        }\n        let user = await this.session('userInfo');\n        let members =await this.model(\"member\").where({ groupid: user.groupid }).select();\n        console.log(\"members---------\"+JSON.stringify(members));\n        let grs=[];\n        for (let val of members) {\n            grs.push(val.id);\n        }\n        console.log(\"grs---------\"+JSON.stringify(grs));\n        // map.groupid=[\"IN\",grs];\n        // this.is_login = await this.islogin();\n\n        // console.log(\"user--------------\"+JSON.stringify(this.is_login));\n        map.uid=[\"IN\",grs];\n        console.log(\"map--------------\"+JSON.stringify(map));\n        let list;\n        if (!think.isEmpty(sortval)) {\n            list = await Document.alias('DOCUMENT').join({\n                table: \"type_optionvalue\" + sortid,\n                join: \"left\", // 有 left,right,inner 3 个值\n                as: \"t\",\n                on: [\"id\", \"tid\"]\n\n            }).where(map).order('level DESC,DOCUMENT.id DESC').field(field.join(\",\")).page(this.get(\"page\"), 20).countSelect();\n        } else {\n            list = await Document.alias('DOCUMENT').where(map).order('level DESC,DOCUMENT.id DESC').field(field.join(\",\")).page(this.get(\"page\"), 20).countSelect();\n        }\n        //let list=await this.model('document').where(map).order('level DESC').field(field.join(\",\")).page(this.get(\"page\")).countSelect();\n        let Pages = think.adapter(\"pages\", \"page\"); //加载名为 dot 的 Template Adapter\n        let pages = new Pages(this.http); //实例化 Adapter\n        let page = pages.pages(list);\n\n\n        if (map['pid'] != 0) {\n            // 获取上级文档\n            let article = await Document.field('id,title,type').find(map['pid']);\n            this.assign('article', article);\n            // console.log(article);\n        }\n\n        //检查该分类是否允许发布内容\n        let allow_publish = await this.model(\"category\").get_category(cate_id, 'allow_publish');\n        this.assign(\"nsobj\", nsobj);\n        this.assign('_total', list.count); //该分类下的文档总数\n        this.assign('pagerData', page); //分页展示使用\n        this.assign('status', status);\n        this.assign('allow', allow_publish);\n        this.assign('pid', map.pid);\n        //console.log(list.data);\n        this.meta_title = '文档列表';\n        return list.data;\n    }\n\n    /**\n     * 显示左边菜单，进行权限控制\n     * @author\n     */\n\n    async getmenuAction() {\n        let cate = await this.model(\"category\").get_all_category();\n        // console.log(\"cate---------\"+JSON.stringify(cate));\n        if (!this.is_admin) {\n            let parr = [];\n            //后台分类\n            for (let val of cate) {\n                switch (val.mold) {\n                    case 1:\n                        val.url = `/mod/admin/index/cate_id/${val.id}`;\n                        break\n                    case 2:\n                        val.url = `/admin/sp/index/cate_id/${val.id}`;\n                        break;\n                    default:\n                        val.url = `/admin/article/index/cate_id/${val.id}`;\n                }\n\n                val.target = '_self';\n                delete val.icon;\n                let priv = await this.model(\"category_priv\").priv(val.id, this.roleid, 'init', 1);\n                val.priv = priv\n                if (priv == 1 && val.pid != 0) {\n                    parr.push(val.pid)\n                }\n            }\n            let cates = [];\n            if (think.isEmpty(parr)) {\n                cates = cate;\n            } else {\n\n                for (let val of cate) {\n                    if (in_array(val.id, parr)) {\n                        val.priv = 1\n                    }\n                }\n\n                for (let val of cate) {\n                    if (val.priv == 1) {\n                        cates.push(val);\n                    }\n                }\n            }\n            // console.log(\"tree----------is_admin,\"+JSON.stringify(arr_to_tree(cates, 0)));\n\n            //think.log(cate);\n            return this.json(arr_to_tree(cates, 0))\n        } else {\n            let csrf = await this.session('__CSRF__');\n            for (let val of cate) {\n                switch (val.mold) {\n                    case 1:\n                        val.url = `/mod/admin/index/cate_id/${val.id}`;\n                        break\n                    case 2:\n                        val.url = `/admin/sp/index/cate_id/${val.id}`;\n                        break;\n                    default:\n                        val.url = `/admin/article/index/cate_id/${val.id}`;\n                }\n\n                val.target = '_self';\n                delete val.icon;\n            }\n            // console.log(\"tree----------,\"+JSON.stringify(arr_to_tree(cate, 0)));\n            return this.json(arr_to_tree(cate, 0))\n        }\n    }\n\n    /**\n     * 新增文档\n     */\n    async addAction() {\n\n        let cate_id = this.get(\"cate_id\") || 0;\n        let model_id = this.get(\"model_id\") || 0;\n        let group_id = this.get(\"group_id\") || '';\n        let sortid = this.get('sortid') || 0;\n        think.isEmpty(cate_id) && this.fail(\"参数不能为空\");\n        think.isEmpty(model_id) && this.fail(\"该分类未绑定模型\");\n        //权限验证\n        await this.admin_priv(\"add\", cate_id);\n        // 获取分组定义\n        let groups = await this.model(\"category\").get_category(cate_id, 'groups');\n        if (groups) {\n            groups = parse_config_attr(groups);\n        }\n        // 获取分类信息\n        let sort = await this.model(\"category\").get_category(cate_id, 'documentsorts');\n        if (sort) {\n            sort = JSON.parse(sort);\n            if (sortid == 0) {\n                sortid = sort.defaultshow;\n            }\n            let typevar = await this.model(\"typevar\").where({ sortid: sortid }).select();\n            for (let val of typevar) {\n\n                val.option = await this.model(\"typeoption\").where({ optionid: val.optionid }).find();\n                if (val.option.type == 'select') {\n                    if (!think.isEmpty(val.option.rules)) {\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.rules = parse_type_attr(val.option.rules.choices);\n                        val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n                    }\n\n                } else if (val.option.type == \"radio\" || val.option.type == \"checkbox\") {\n                    if (!think.isEmpty(val.option.rules)) {\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n                    }\n                } else {\n                    if (!think.isEmpty(val.option.rules)) {\n                        val.option.rules = JSON.parse(val.option.rules);\n                    }\n                }\n            }\n            //console.log(typevar);\n            this.assign(\"typevar\", typevar);\n        }\n        //console.log(sort);\n        this.assign(\"sort\", sort);\n        //检查该分类是否允许发布\n        let allow_publish = await this.model(\"category\").check_category(cate_id);\n        //console.log(allow_publish);\n        !allow_publish && this.fail(\"该分类不允许发布内容\");\n\n        //获取当先的模型信息\n        let model = await this.model(\"model\").get_document_model(model_id);\n\n        //处理结果\n        let info = {};\n        info.pid = this.get(\"pid\") ? this.get(\"pid\") : 0;\n        info.model_id = model_id;\n        info.category_id = cate_id;\n        info.group_id = group_id;\n        let topid = 0;\n        if (info.pid != 0) {\n            let i = info.pid;\n            //\n            while (i != 0) {\n                let nav = await this.model(\"document\").where({ id: i }).find();\n                if (nav.pid == 0) {\n                    topid = nav.id;\n                }\n                i = nav.pid;\n\n            }\n            let article = await this.model(\"document\").field('id,title,type').find(info.pid);\n            this.assign(\"article\", article);\n        }\n        //console.log(topid);\n        // this.assign(\"topid\",topid);\n        info.topid = topid;\n        //获取表单字段排序\n        let fields = await this.model(\"attribute\").get_model_attribute(model.id, true);\n        //think.log(fields);\n        //获取当前分类文档的类型\n        let type_list = await this.model(\"category\").get_type_bycate(cate_id);\n        //console.log(type_list);\n        //获取面包屑信息\n        let nav = await this.model('category').get_parent_category(cate_id);\n        //console.log(model);\n        this.assign('groups', groups);\n        this.assign('breadcrumb', nav);\n        this.assign('info', info);\n        this.assign('fields', fields);\n        this.assign('type_list', type_list);\n        this.assign('model', model);\n        this.meta_title = '新增' + model.title;\n        this.active = \"admin/article/index\";\n        this.assign({\n            \"navxs\": true,\n        });\n        return this.display();\n    }\n\n    //编辑文档\n    async editAction() {\n        let id = this.get('id') || \"\";\n        let sortid = this.get('sortid') || 0;\n        if (think.isEmpty(id)) {\n            return this.fail(\"参数不能为空\");\n        }\n\n        //获取详细数据；\n        let document = this.model(\"document\")\n        let data = await document.details(id);\n        //权限验证\n        await this.admin_priv(\"edit\", data.category_id);\n        //let model =  this.model(\"model\").getmodel(2);\n        if (data.pid != 0) {\n            //获取上级文档\n            let article = document.field(\"id,title,type\").find(data.pid);\n            this.assign('article', article);\n        }\n        let model = await this.model(\"model\").get_document_model(data.model_id);\n        console.log(\"model---------\" + JSON.stringify(model));\n\n        if (model.name == 'xfmb') {\n            let xfmb = await document.where({ title: \"吸粉模板图库\", category_id: 151 }).find();\n            console.log(\"xfmb---------\" + JSON.stringify(xfmb));\n            let table = await think.model(\"model\", think.config(\"db\")).get_table_name(xfmb.model_id);\n            let details = await think.model(table, think.config(\"db\")).find(xfmb.id);\n            console.log(\"details---------\" + JSON.stringify(details));\n            this.assign('xfmb', details);\n        }\n        // 获取分组定义\n        let groups = await this.model(\"category\").get_category(data.category_id, 'groups');\n        if (groups) {\n            groups = parse_config_attr(groups);\n        }\n        this.assign('groups', groups);\n        // 获取分类信息\n        let sort = await this.model(\"category\").get_category(data.category_id, 'documentsorts');\n        if (sort) {\n            sort = JSON.parse(sort);\n            if (sortid != 0) {\n                data.sort_id = sortid;\n            } else if (data.sort_id == 0) {\n                data.sort_id = sort.defaultshow;\n            }\n            let typevar = await this.model(\"typevar\").where({ sortid: data.sort_id }).select();\n            for (let val of typevar) {\n\n                val.option = await this.model(\"typeoption\").where({ optionid: val.optionid }).find();\n                if (val.option.type == 'select') {\n                    if (!think.isEmpty(val.option.rules)) {\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n                        val.option.value = await this.model(\"typeoptionvar\").where({ sortid: data.sort_id, tid: data.id, fid: data.category_id, optionid: val.option.optionid }).getField(\"value\", true) || \"\";\n                    }\n\n                } else if (val.option.type == \"radio\" || val.option.type == \"checkbox\") {\n                    if (!think.isEmpty(val.option.rules)) {\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n                        val.option.value = await this.model(\"typeoptionvar\").where({ sortid: data.sort_id, tid: data.id, fid: data.category_id, optionid: val.option.optionid }).getField(\"value\", true) || \"\";\n                    }\n                } else {\n                    if (!think.isEmpty(val.option.rules)) {\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.option.value = await this.model(\"typeoptionvar\").where({ sortid: data.sort_id, tid: data.id, fid: data.category_id, optionid: val.option.optionid }).getField(\"value\", true) || \"\";\n                    }\n                }\n            }\n            // console.log(typevar);\n            this.assign(\"typevar\", typevar);\n        }\n        //console.log(sort);\n        this.assign(\"sort\", sort);\n        //获取表单字段排序\n        let fields = await this.model(\"attribute\").get_model_attribute(model.id, true);\n        console.log(\"fields-----------\" + JSON.stringify(fields));\n        this.assign('fields', fields);\n        //获取当前分类文档的类型\n        let type_list = await this.model(\"category\").get_type_bycate(data.category_id)\n            //获取suk tags\n        let tags = await this.model('tags').where({ model_id: data.model_id }).select();\n        this.assign('tags', tags);\n        //获取面包屑信息\n        let nav = await this.model('category').get_parent_category(data.category_id);\n        //console.log(model);\n        this.assign('breadcrumb', nav);\n        //console.log(model);\n        this.assign('type_list', type_list);\n        this.meta_title = '编辑' + model.title;\n        this.active = \"admin/article/index\";\n        this.assign({\n            \"navxs\": true,\n        });\n        //console.log(data);\n        this.assign('data', data);\n        this.assign('model_id', data.model_id);\n        this.assign('model', model);\n        this.display();\n    }\n\n    /**\n     * 更新或者添加数据\n     */\n    async updateAction() {\n            let data = this.post();\n            console.log(\"updateAction----------------\" + JSON.stringify(data));\n            let res = await this.model('document').updates(data);\n            // console.log(\"updateAction---------------- ok\" );\n            if (res) {\n                //行为记录\n                if (!res.data.id) {\n                    await this.model(\"action\").log(\"add_document\", \"document\", res.id, this.user.uid, this.ip(), this.http.url);\n                    this.success({ name: \"添加成功\", url: \"/admin/article/index/cate_id/\" + res.data.category_id });\n                } else {\n                    this.success({ name: \"更新成功\", url: \"/admin/article/index/cate_id/\" + res.data.category_id });\n                }\n\n            } else {\n                this.fail(\"操作失败！\");\n            }\n\n\n        }\n        /**\n         * 设置一条或者多条数据的状态\n         */\n    async setstatusAction() {\n        console.log(\"param art ---------\" + JSON.stringify(this.param()));\n        let data = await this.model(\"document\").where({ id: [\"IN\", this.param('ids')] }).select();\n        switch (Number(this.param('status'))) {\n            case -1:\n                for (let v of data) {\n                    //权限验证\n                    await this.admin_priv(\"delete\", v.category_id);\n                }\n                break;\n            case 1:\n                for (let v of data) {\n                    //权限验证\n                    await this.admin_priv(\"examine\", v.category_id);\n                }\n                break;\n            case 0:\n                for (let v of data) {\n                    //权限验证\n                    await this.admin_priv(\"disable\", v.category_id);\n                }\n                break;\n        }\n        console.log(\"post data----\" + JSON.stringify(this.post()));\n        await super.setstatusAction(this, 'document');\n        if (this.param('status') == -1 || this.param('status') == 0) {\n            for (let v of data) {\n                //删除\n                await this.model('search').delsearch(v.model_id, v.id);\n                if (!think.isEmpty(v.keyname)) {\n                    await this.model(\"keyword\").delkey(v.id, v.model_id);\n                }\n\n            }\n\n\n        } else if (this.param('status') == 1) {\n\n            for (let v of data) {\n                //添加到搜索\n                await this.model(\"search\").addsearch(v.model_id, v.id, v);\n                console.log(v.keyname);\n                if (!think.isEmpty(v.keyname)) {\n                    await this.model(\"keyword\").addkey(v.keyname, v.id, v.uid, v.model_id, 0);\n                }\n            }\n        }\n    }\n\n    /**\n     * 回收站列表\n     */\n    async recycleAction() {\n        let map = { status: -1 };\n        if (this.is_admin) {\n            //TODO\n        }\n\n        let list = await this.model('document').where(map).order('update_time desc').field(\"id,title,uid,type,category_id,update_time\").page(this.get('page')).countSelect();\n        let Pages = think.adapter(\"pages\", \"page\"); //加载名为 dot 的 Template Adapter\n        let pages = new Pages(this.http); //实例化 Adapter\n        let page = pages.pages(list);\n        for (let val of list.data) {\n            val.category = await this.model('category').get_category(val.category_id, \"title\");\n            val.username = await this.model('member').get_nickname(val.uid);\n        }\n\n        this.assign(\"_total\", list.count)\n        this.assign('pagerData', page); //分页展示使用\n        this.assign('list', list.data);\n        this.meta_title = \"回收站\";\n        return this.display()\n\n    }\n    async clearAction() {\n        // 获取回收站的所有信息\n        let clist = await this.model(\"document\").where({ status: -1 }).select();\n        if (think.isEmpty(clist)) {\n            return this.success({ name: \"回收站没有内容！\" });\n        }\n        //console.log(clist);\n        //查出模型内容并删除\n        for (let v of clist) {\n            //模型表\n            let table = await this.model(\"model\").get_table_name(v.model_id);\n            console.log(table);\n            await this.model(table).where({ id: v.id }).delete();\n        }\n        //删除主表内容\n        let res = await this.model(\"document\").delete({ where: { status: -1 } });\n\n        if (res) {\n            return this.success({ name: \"清空回收站成功\" });\n        }\n\n    }\n}\n"
    ]
}