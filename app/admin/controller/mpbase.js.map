{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/mpbase.js"
    ],
    "names": [
        "init",
        "http",
        "indexAction",
        "meta_title",
        "assign",
        "display",
        "setingAction",
        "map",
        "is_admin",
        "uid",
        "user",
        "model",
        "where",
        "page",
        "get",
        "countSelect",
        "data",
        "Pages",
        "think",
        "adapter",
        "pages",
        "val",
        "get_nickname",
        "addsetingAction",
        "isPost",
        "post",
        "add",
        "res",
        "success",
        "name",
        "url",
        "fail",
        "editsetingAction",
        "id",
        "public_id",
        "wechat",
        "type",
        "appid",
        "secret",
        "encodingaeskey",
        "mchid",
        "mchkey",
        "notify_url",
        "update",
        "isEmpty",
        "find",
        "delsetingAction",
        "delete",
        "huifuAction",
        "setstatusAction",
        "massAction",
        "api",
        "setup",
        "wx_AppID",
        "wx_AppSecret",
        "self",
        "aa",
        "deferred",
        "defer",
        "getGroups",
        "err",
        "result",
        "resolve",
        "console",
        "error",
        "promise",
        "selfmenuAction",
        "menu_model",
        "select",
        "menu",
        "str",
        "setupselfmenuAction",
        "buildselfmenu",
        "info",
        "createMenu",
        "Console",
        "errmsg",
        "json",
        "addselfmenuAction",
        "m_id",
        "sort",
        "pid",
        "web_token",
        "media_id",
        "delselfmenuAction",
        "log",
        "cmenus",
        "ure",
        "x",
        "length",
        "updateusersAction",
        "FromUserName",
        "Event",
        "user_model",
        "thik",
        "userinfo",
        "deferinfo",
        "getUser",
        "resusers",
        "getmaterialinfoAction",
        "material_model",
        "materid",
        "materialinfo",
        "getMaterial",
        "getusersAction",
        "users",
        "getFollowers",
        "useropenid",
        "count",
        "isadd",
        "tmp_openids",
        "i",
        "push",
        "batchGetUsers",
        "resinfo",
        "key",
        "element",
        "openid",
        "subscribe_time",
        "thenAdd",
        "addres",
        "masssendAction",
        "media_model",
        "masssend_model",
        "send_type",
        "group_id",
        "group_type",
        "me_id",
        "content",
        "replace",
        "sex",
        "province",
        "city",
        "field",
        "getField",
        "openids",
        "massSendNews",
        "massSendText",
        "massSendImage",
        "massSendVoice",
        "massSendVideo",
        "msg_id",
        "material_wx_content",
        "wx_content",
        "material_content",
        "mate_id",
        "isAdd",
        "redirect",
        "hassendAction",
        "emoji",
        "findurlAction",
        "status",
        "news",
        "JSON",
        "parse",
        "news_item",
        "delmassAction",
        "del_status",
        "isDel",
        "userlistAction",
        "order",
        "d",
        "createSelfMenu",
        "sendselfmenutowxAction",
        "ajaxaddmenuAction",
        "getmaterialbyidAction",
        "getmaterialAction",
        "spiderImage",
        "imgUrl",
        "filePath",
        "imgData",
        "setEncoding",
        "on",
        "chunk",
        "writeFileSync",
        "fodderlistAction",
        "fodderAction",
        "active",
        "deletefodderAction",
        "olddata",
        "wxremove",
        "removeMaterial",
        "reject",
        "wxres",
        "errcode",
        "asyncfodderlistAction",
        "foddereditAction",
        "wxuploadtmpAction",
        "thumb_id",
        "get_pic",
        "pic",
        "paths",
        "RESOURCE_PATH",
        "indexOf",
        "mkdir",
        "get_cover",
        "longpic",
        "ROOT_PATH",
        "wx",
        "uploadMaterial",
        "img_result",
        "unlinkSync",
        "source_id",
        "hs_image_src",
        "savefodderAction",
        "params",
        "edit_id",
        "wxr",
        "wxrres",
        "delrow",
        "anews",
        "uploadNewsMaterial",
        "wxg",
        "wx_news",
        "time",
        "Date",
        "getTime",
        "effect",
        "autoreplyAction",
        "rule",
        "current",
        "keywords_id",
        "ks",
        "reply_id",
        "rs",
        "createrAction",
        "ruleid",
        "currtime",
        "currwebtoken",
        "startTrans",
        "rulemodel",
        "ruledata",
        "split",
        "join",
        "r",
        "commit",
        "rid",
        "rollback",
        "ruleeditnameAction",
        "rulename",
        "rule_name",
        "createkruleAction",
        "ruledeleteAction",
        "currentrule",
        "kids",
        "rids",
        "kmodel",
        "rmodel",
        "kres",
        "rres",
        "rulres",
        "ruleeditAction",
        "edittype",
        "kid",
        "tmp",
        "v",
        "kname",
        "ktype",
        "deleterAction",
        "rr",
        "editreplyAction",
        "messageAction",
        "reply_type",
        "initinfo",
        "followAction",
        "saveinfoAction",
        "editor_content",
        "targetArr",
        "articles",
        "host",
        "tmpobj",
        "title",
        "description",
        "picurl",
        "create_time",
        "custommenuAction",
        "version",
        "button",
        "act_list",
        "sub_button",
        "value",
        "personality",
        "ddata",
        "custom_menu",
        "savecustommenuAction",
        "newv",
        "menuid",
        "asyncwxmenuAction",
        "wxsubmit",
        "dataObj",
        "final",
        "a",
        "tmpbtn",
        "b",
        "tmpsub",
        "yj2dAction",
        "createLimitQRCode",
        "qrcod",
        "showQRCodeURL",
        "ticket"
    ],
    "mappings": "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",
    "file": "../../../src/admin/controller/mpbase.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\n\nimport Base from './base.js';\nimport API from 'wechat-api';\nimport http from 'http';\nimport fs from 'fs';\nexport default class extends Base {\n    /**\n    * index action\n    * @return {Promise} []1212\n    */\n    init(http) {\n        super.init(http);\n    }\n    /**\n     * index action\n     * @return {Promise} []\n     */\n   \n    indexAction() {\n        //auto render template file index_index.html\n        this.meta_title = '公众号信息';\n        this.assign({\"navxs\": true,\"bg\": \"bg-black\"});\n        return this.display();\n    }\n    /**\n     * 公众账号管理\n     */\n    async setingAction() {\n        let map = { 'status': ['>', -1] }\n        if (!this.is_admin) {//管理员可以管理全部公共账号\n            map.uid = this.user.uid;\n        }\n        let data = await this.model('member_public').where(map).page(this.get('page')).countSelect();\n        let Pages = think.adapter(\"pages\", \"page\"); //加载名为 dot 的 Template Adapter\n        let pages = new Pages(this.http); //实例化 Adapter\n        let page = pages.pages(data);\n        this.assign('pagerData', page); //分页展示使用\n        this.assign('list', data.data);\n        for(let val of data.data){\n            val.uid = await this.model('member').get_nickname(val.uid);\n        }\n        this.assign({\"navxs\": true});\n        this.meta_title = \"公共账号管理\";\n        return this.display();\n    }\n\n    /**\n     *新增公众账号\n     */\n    async addsetingAction(){\n        if(this.isPost()){\n            let data = this.post();\n            let res = await this.model('member_public').add(data);\n            if(res){\n                return this.success({name: \"添加成功\", url: \"/admin/mpbase/seting\"});\n            }else{\n                return this.fail(\"添加失败\");\n            }\n        }else{\n\n            this.assign({\"navxs\": true});\n            this.meta_title = \"新增公众账号\";\n            return this.display();\n        }\n    }\n\n    /**\n     *编辑公众账号\n     */\n    async editsetingAction(){\n        if(this.isPost()){\n            let data = {};\n            let id = this.post(\"id\");\n            data.uid = this.post('uid');\n            data.public_id = this.post('public_id');\n            data.wechat = this.post('wechat');\n            data.type = this.post('type');\n            data.appid = this.post('appid');\n            data.secret = this.post('secret');\n            data.encodingaeskey = this.post('encodingaeskey');\n            data.mchid = this.post('mchid');\n            data.mchkey = this.post('mchkey');\n            data.notify_url = this.post('notify_url');\n            let res = await this.model(\"member_public\").where({'id':id}).update(data);\n            if(res){\n                return this.success({name: \"编辑成功\", url: \"/admin/mpbase/seting\"});\n            }else{\n                return this.fail(\"编辑失败\");\n            }\n        }else{\n            let id = this.get(\"id\");\n            if (think.isEmpty(id)) {\n                this.fail('参数不能为空！');\n            }\n            let data = await this.model('member_public').where({'id':id}).find();\n            this.assign('info',data);\n            this.assign({\"navxs\": true});\n            this.meta_title = \"编辑公众账号\";\n            return this.display();\n        }\n    }\n    /**\n     *删除公众账号\n     */\n    async delsetingAction(){\n        let id = this.get(\"ids\");\n        let res = await this.model('member_public').where({'id':id}).delete();\n        if(res){\n            return this.success({name: \"删除成功\", url: \"/admin/mpbase/seting\"});\n        }else{\n            return this.fail(\"删除失败\");\n        }\n    }\n    \n     async huifuAction(){\n        if(this.isPost()){\n            let post = this.post();\n             if(think.isEmpty(post)){\n                post =  JSON.stringify(post)\n                 //console.log(post);\n                 this.success({name:post,url:\"/admin/mpbase\"});\n             }else{\n                 this.fail(\"dffdsfs\");\n             }\n        }else{\n       \n         this.meta_title=\"自动回复\";\n         this.assign({\"navxs\": true,\"bg\": \"bg-dark\"});\n         return this.display();\n         }\n        }\n    /**\n     * 设置一条或者多条数据的状态\n     */\n    async setstatusAction() {\n        await super.setstatusAction(this,'member_public');\n    }\n    \n    \n     /**\n     * 群发功能\n     */\n     async massAction(){\n        this.meta_title=\"群发功能\";\n         let api = new API(this.setup.wx_AppID, this.setup.wx_AppSecret);\n        //let api = new API('wxec8fffd0880eefbe', 'a084f19ebb6cc5dddd2988106e739a07');\n        let self = this;\n        //调用用户分组API\n        let aa = function(api){\n            let deferred = think.defer();\n            api.getGroups((err,result)=>{\n                if(!think.isEmpty(result)){\n                    deferred.resolve(result['groups']);\n                }else{\n                    console.error(err);\n                }\n            });\n            return deferred.promise;\n        }\n        let res =await aa(api);\n        this.assign('groups', res);//用户分组\n        this.assign({\"navxs\": true});\n        return self.display();\n    }\n\n    /**\n     * 微信自定义菜单管理页面\n     */\n    async selfmenuAction(){\n\n        this.meta_title = \"自定义菜单\";\n        let menu_model = this.model('wx_menu');\n        let data = await menu_model.select();\n        let self = this;\n        let  menu = {\n                \"menu\": {\n                    \"button\": []\n                }\n            };\n        let str =  JSON.stringify(menu);\n        this.assign('menu',str);\n        return self.display();\n    }\n\n    /**\n     * 微信端生成自定义菜单\n     */\n    async setupselfmenuAction(){\n        let menu_model = this.model('wx_menu');\n        let data = await menu_model.select();\n        let menu = buildselfmenu(data);\n\n        let info = function(api){\n            let deferred = think.defer();\n            api.createMenu(menu,(err,result)=>{\n                if(!think.isEmpty(result)){\n                    deferred.resolve(result);\n                }else{\n                    Console.error('err'+err)\n                }\n            });\n            return deferred.promise;\n        }\n        let res =await info(api);\n        if(res.errmsg == 'ok'){\n             return this.json('ok');\n        }else{\n            return this.json('no');\n        }\n    }\n\n    /**\n     * 添加微信自定义菜单\n     */\n    async addselfmenuAction(){\n\n        let m_id = this.post(\"id\");\n        let name = this.post(\"name\");\n        let sort = this.post('sort');\n        let pid = this.post('pid');\n        let type = this.post('type');\n        let url = this.post('url');\n        let web_token = '';\n        let media_id = this.post('media_id');\n        let menu_model =this.model(\"wx_menu\");\n\n        let data = {\n                        \"m_id\":m_id,\n                        \"name\":name,\n                        \"sort\":sort,\n                        \"pid\":pid,\n                        \"type\":type,\n                        \"web_token\":web_token,\n                        \"media_id\":media_id,\n                        \"url\":url\n                    };\n        let res = await menu_model.add(data);\n        if(res){\n            return this.json(\"1\");\n        }else{\n            return this.json(\"2\");\n        }\n    }\n\n    /**\n     * 删除微信自定义菜单\n     */\n    async delselfmenuAction(){\n\n        let m_id = this.post('m_id');\n        let pid = this.post('pid');\n        console.log(m_id);\n        console.log(pid);\n        let menu_model =this.model(\"wx_menu\");\n        let res = await menu_model.where({m_id: [\"=\", m_id]}).delete();\n        if(res){\n            if(m_id) {\n                let cmenus = await menu_model.where({pid: [\"=\", m_id]}).select();\n                let ure = \"\";\n                for (var x = 0; x < cmenus.length; x++) {\n                    ure = await menu_model.where({id: [\"=\", cmenus[x].id]}).update({\"sort\": (x + 1)});\n                }\n\n                if (res) {\n                    return this.json(\"1\");\n                } else {\n                    console.log(\"mawt\");\n                    return this.json(\"2\");\n                }\n            }\n            //}else{\n            //    let fmenus = await menu_model.where({pid:[\"=\",0]}).select();\n            //    let ures = \"\";\n            //    for(var x=0;x<fmenus.length;x++){\n            //        ures =  await menu_model.where({id:[\"=\",fmenus[x].id]}).update({\"sort\":(x+1)});\n            //    }\n            //    if(res && ures){\n            //        return this.json(\"1\");\n            //    }else{\n            //        return this.json(\"2\");\n            //    }\n            //}\n        }else{\n            return this.json(\"2\");\n        }\n    }\n\n    /**\n     * 监听微信关注或取消，进行本地用户数据更新\n     */\n    async updateusersAction(){\n        let FromUserName = 'openid';//发送方帐号（一个OpenID）\n        let Event = 'subscribe';//subscribe(订阅)、unsubscribe(取消订阅)\n        let user_model = this.model('wx_user');\n        let api = new API(this.setup.wx_AppID, this.setup.wx_AppSecret);\n        if(Event == 'subscribe' && !thik.isEmpty(FromUserName)){\n            //通过openid获取用户基本信息\n             let userinfo = function(api) {\n                    let deferinfo = think.defer();\n                    api.getUser(FromUserName,(err,result)=>{\n                        if(!think.isEmpty(result)){\n                        deferinfo.resolve(result);\n                        }else{\n                            Console.error('err'+err);\n                        } \n                    });\n                    return deferinfo.promise;\n             }\n             let resusers = await userinfo(api);\n             //添加到本地库中\n             await user_model.add(resusers);            \n        }else{\n            //修改取消订阅用户的状态\n            await user_model.where({'openid':FromUserName}).update({'subscribe':0});\n        }\n    }\n\n    /**\n     * 获取素材详情\n     */\n    async getmaterialinfoAction(){\n\n        let material_model = this.model('wx_material');\n        let materid = this.post('id');\n        let materialinfo = await material_model.where({id: materid}).find();\n        //let api = new API('wxec8fffd0880eefbe', 'a084f19ebb6cc5dddd2988106e739a07');\n        let api = new API(this.setup.wx_AppID, this.setup.wx_AppSecret);\n        let self = this;\n\n        let info = function(api) {\n            let deferred = think.defer();\n            api.getMaterial(materialinfo.media_id,(err,result)=>{\n                if(!think.isEmpty(result)){\n                    deferred.resolve(result);\n                }else{\n                    Console.error('err'+err)\n                }\n            });\n            return deferred.promise;\n        }\n\n        //let res =  await\n        //    info(api);\n        //\n\n        let res = await info(api);\n        console.log(res);\n\n\n\n\n    }\n\n    /**\n     * 获取微信公众账号用户信息并保存到本地库\n     */\n    async getusersAction(){\n        this.meta_title=\"获取粉丝信息\";\n        let user_model = this.model('wx_user');\n        let api = new API(this.setup.wx_AppID, this.setup.wx_AppSecret);\n        let self = this;\n        //获取关注者列表\n        let users = function(api) {\n            let deferred = think.defer();\n            api.getFollowers((err,result)=>{\n                if(!think.isEmpty(result)){\n                   deferred.resolve(result);\n                }else{\n                    Console.error('err'+err)\n                } \n            });\n            return deferred.promise;\n        }\n        let res = await users(api);\n        console.log(\"users----------\"+JSON.stringify(res));\n        let useropenid = res['data']['openid'];\n        let count = res['count'];\n        //self.end(useropenid);\n        //think.log(res);\n        //批量获取用户基本信息\n        let isadd = false;\n        let tmp_openids = [];\n        for(let i=0;i<count;i++){\n            tmp_openids.push(useropenid[i]);\n            if((i+1)%100 == 0 || i == (count-1)){\n                //think.log('dd','aaa');\n                 let userinfo = function(api) {\n                    let deferinfo = think.defer();\n                    api.batchGetUsers(tmp_openids,(err,result)=>{\n                        if(!think.isEmpty(result)){\n                        deferinfo.resolve(result);\n                        }else{\n                            Console.error('err'+err);\n                        } \n                    });\n                    return deferinfo.promise;\n                }\n                let resusers = await userinfo(api);\n                let resinfo = resusers['user_info_list'];\n                //console.log(resusers);\n                //return false;\n               //self.end(resinfo);\n                console.log(\"开始：\")\n               for (let key in resinfo) {\n                       let element = resinfo[key];\n                       //self.end(element.openid);\n                       console.log('-------------'+element.openid);\n                       //let addres = await user_model.add(element);\n                       //let nickname = element.nickname.replace(/(\\\\x[a-fA-F0-9]{2})*/g, ' ');\n                       //let nickname = element.nickname.replace(/[\\x80-\\xfe]*/g, ' ');\n                       //let nickname = removeFourChar(element.nickname);\n                       let subscribe_time = element.subscribe_time*1000;\n                       //element.nickname = nickname;\n                       element.subscribe_time =subscribe_time;\n                       \n                       let addres = await user_model.thenAdd(element,{openid:element.openid});\n                       console.log(addres);\n                       if(addres.type=='exist'){\n                           await user_model.where({openid:element.openid}).update(element);\n                           isadd = true;\n                       }\n               }\n               tmp_openids = [];\n            }\n        }\n        if(isadd){\n            this.success({name:\"操作成功！\",url:\"/admin/mpbase/userlist\"});\n        }else{\n            this.fail(\"error\");\n        }\n    }\n    \n\n    /**\n     * 根据条件筛选进行群发--通过openid,只能是认证服务号使用\n     * 通过分组groupid进行群发，认证后的订阅号和服务号都可以使用\n     */\n    async masssendAction(){\n        let api = new API(this.setup.wx_AppID, this.setup.wx_AppSecret);\n        //let api = new API('wxe8c1b5ac7db990b6', 'ebcd685e93715b3470444cf6b7e763e6');\n        //let api = new API('wxec8fffd0880eefbe', 'a084f19ebb6cc5dddd2988106e739a07');\n        let model = this.model('wx_user');\n        let media_model = this.model('wx_material');\n        let masssend_model = this.model('wx_masssend');\n        let self = this;\n        let send_type = this.post('send_type');//1:图文2：文字3：图片4：语音5：视频6：卡卷\n        let group_id = this.post('group_id');\n        let group_type = this.post('group_type');//0:全部用户1：分组\n       // let media_id = 'WnHaYbbZUpy6xrrbADac_zObgAaFqh474Row6ar4PLJXEfVeA2OnR65uUSREYn_i';\n        let me_id = this.post('me_id');\n        let content = this.post('editor_content');\n        content = content.replace(/<.*?mo-/g, '[').replace(/\">/g, \"]\");\n        //self.end(province+city);\n        //查询条件\n        let map={};\n        let sex = this.post('sex');\n        if(sex == 1 || sex == 2){\n            map.sex = sex;\n        }\n        let province = this.post('provincetext');\n        if(province != 0){\n            map.province = province;\n        }\n        let city = this.post('citytext');\n        if(city != 0){\n            map.city = city;\n        }\n        //通过条件查询本地库数据\n        let userinfo = await model.where(map).field('openid').select();\n        let media_id = await media_model.where({'id':me_id}).getField('media_id');\n        media_id = media_id[0];\n        let openids = [];\n        for (var key in userinfo) {\n            //if (userinfo.hasOwnProperty(key)) {\n            openids.push(userinfo[key].openid);\n           // }\n        }\n        //self.end(aa);\n        let res = '';\n        \n        //判断是通过groupid还是openid进行群发\n        if(group_type == 1){\n            //分组群发\n            switch (send_type) {\n                case 'newsArea'://图文\n                    res = await massSendNews(api,media_id,group_id);\n                    break;\n                case 'textArea'://文本\n                    res = await massSendText(api,content,group_id);\n                    break;\n                case 'imageArea'://图片\n                    res = await massSendImage(api,media_id,group_id);\n                    break;\n                case 'audioArea'://语音\n                    res = await massSendVoice(api,media_id,group_id);\n                    break;\n                case 'videoArea'://视频\n                    res = await massSendVideo(api,media_id,group_id);\n                    break;\n            }\n            \n        }else{\n            //根据条件通过openid进行群发\n            switch (send_type) {\n                case 'newsArea'://图文\n                    res = await massSendNews(api,media_id,openids);\n                    break;\n                case 'textArea'://文本\n                    res = await massSendText(api,content,openids);\n                    break;\n                case 'imageArea'://图片\n                    res = await massSendImage(api,media_id,openids);\n                    break;\n                case 'audioArea'://语音\n                    res = await massSendVoice(api,media_id,openids);\n                    break;\n                case 'videoArea'://视频\n                    res = await massSendVideo(api,media_id,openids);\n                    break;\n            }\n        }\n        \n        let msg_id = res['msg_id'];//发送成功返回消息ID\n        //self.end(msg_id);\n        \n        //判断是否群发消息是否成功\n        if(res['errcode'] == 0){\n            //本地保存media_id和msg_id\n            //查询图文内容\n            let data = {};\n            if(send_type == 'textArea'){\n                data.msg_id = msg_id;\n                data.material_wx_content = content;\n                data.type = send_type;\n            }else {\n                if(me_id){\n                    let wx_content = await media_model.where({'id':me_id}).find();\n                    //self.end('aaa'+wx_content['material_content']);\n                    let material_content = wx_content['material_content'];\n                    let material_wx_content = wx_content['material_wx_content'];\n\n                    data.mate_id = me_id;\n                    data.msg_id = msg_id;\n                    data.material_content = material_content;\n                    data.material_wx_content = material_wx_content;\n                    data.type = send_type;\n                }\n            }\n            //self.end(data);\n            let isAdd = masssend_model.thenAdd(data,{msg_id:msg_id});\n            if(isAdd){\n                this.assign({\"navxs\": true,\"bg\": \"bg-dark\"});\n                return this.redirect(\"/admin/mpbase/mass\");\n            }\n        }else{\n            this.fail(\"error\");\n        }\n\n        //this.assign({\"navxs\": true,\"bg\": \"bg-dark\"});\n       //return this.display();\n    }\n\n    /**\n     * 查询已发送的群发消息\n     */\n    async hassendAction(){\n        let self = this;//{{item.material_wx_content}}\n        let data = await this.model('wx_masssend').page(this.get('page')).countSelect();\n        let Pages = think.adapter(\"pages\", \"page\"); //加载名为 dot 的 Template Adapter\n        let pages = new Pages(this.http); //实例化 Adapter\n        let page = pages.pages(data);\n        let emoji = [\"微笑\",\"撇嘴\",\"色\",\"发呆\",\"得意\",\"流泪\",\"害羞\",\"闭嘴\",\"睡\",\"大哭\",\"尴尬\",\"发怒\",\"调皮\",\"呲牙\",\"惊讶\",\"难过\",\"酷\",\"冷汗\",\"抓狂\",\"吐\",\"偷笑\",\"可爱\",\"白眼\",\"傲慢\",\"饥饿\",\"困\",\"惊恐\",\"流汗\",\"憨笑\",\"大兵\",\"奋斗\",\"咒骂\",\"疑问\",\"嘘\",\"晕\",\"折磨\",\"衰\",\"骷髅\",\"敲打\",\"再见\",\"擦汗\",\"抠鼻\",\"鼓掌\",\"糗大了\",\"坏笑\",\"左哼哼\",\"右哼哼\",\"哈欠\",\"鄙视\",\"委屈\",\"快哭了\",\"阴险\",\"亲亲\",\"吓\",\"可怜\",\"菜刀\",\"西瓜\",\"啤酒\",\"篮球\",\"乒乓\",\"咖啡\",\"饭\",\"猪头\",\"玫瑰\",\"凋谢\",\"示爱\",\"爱心\",\"心碎\",\"蛋糕\",\"闪电\",\"炸弹\",\"刀\",\"足球\",\"瓢虫\",\"便便\",\"月亮\",\"太阳\",\"礼物\",\"拥抱\",\"强\",\"弱\",\"握手\",\"胜利\",\"抱拳\",\"勾引\",\"拳头\",\"差劲\",\"爱你\",\"NO\",\"OK\",\"爱情\",\"飞吻\",\"跳跳\",\"发抖\",\"怄火\",\"转圈\",\"磕头\",\"回头\",\"跳绳\",\"挥手\",\"激动\",\"街舞\",\"献吻\",\"左太极\",\"右太极\"];\n\n        this.assign('emoji', emoji);\n        this.assign('pagerData', page); //分页展示使用\n        this.assign('list', data.data);\n\n        this.assign({\"navxs\": true,\"bg\": \"bg-dark\"});\n        return self.display();\n    }\n\n    /**\n     * 查询消息URL\n     */\n    async findurlAction(){\n        let self = this;\n        let msg_id = this.get('msg_id');\n        let status = this.get('status');\n        //self.end(status);\n        if(status){\n            return this.redirect('http://www.baidu.com');\n        }else{\n            let masssend_model = this.model('wx_masssend');\n            let news = await masssend_model.where({msg_id:msg_id}).getField('material_wx_content');\n            news = JSON.parse(news);\n            let news_item = news.news_item;\n            //self.end(news_item[0]['url']);\n            let url = news_item[0]['url'];\n            return this.redirect(url);\n        }\n    }\n\n    /**\n     * 删除已发送的消息\n     */\n    async delmassAction(){\n        let masssend_model = this.model('wx_masssend');\n        let self = this;\n        let msg_id = this.get('msg_id');\n        //let isDel = await masssend_model.where({msg_id:msg_id}).delete();\n        let isDel = await masssend_model.where({msg_id:msg_id}).update({del_status:1});\n        if(isDel){\n            this.success({name:\"删除成功！\",url:\"/admin/mpbase/hassend\"});\n        }else{\n            this.fail(\"error\");\n        }\n\n\n    }\n\n\n\n    /**\n     * 查看用户列表\n     */\n    async userlistAction(){\n        let data = await this.model('wx_user').page(this.get('page'),20).countSelect();\n        let Pages = think.adapter(\"pages\", \"page\"); //加载名为 dot 的 Template Adapter\n        let pages = new Pages(this.http); //实例化 Adapter\n        let page = pages.pages(data);\n        this.assign('pagerData', page); //分页展示使用\n        this.assign('list', data.data);\n        this.meta_title=\"微信用户管理\"\n        this.assign({\"navxs\": true,\"bg\": \"bg-dark\"});\n        return this.display();\n    }\n\n    /**\n     * 自定义菜单页面\n     */\n    async selfmenuAction() {\n        this.meta_title=\"自定义菜单\";\n        let self = this;\n\n        let menu_model =this.model(\"wx_menu\");\n        let data = await menu_model.order('pid ASC, sort ASC').select();\n        console.log(JSON.stringify(data));\n\n        let d = createSelfMenu(data);\n        //console.log(d.menu.button[0]['type']);\n        let str = JSON.stringify(d);\n        this.assign('menu',str);\n        return self.display();\n    }\n\n    /**\n     * 发送菜单到微信端\n     */\n    async sendselfmenutowxAction(){\n        let menu_model = this.model('wx_menu');\n        let data = await menu_model.order('pid ASC, sort ASC').select();\n        let menu = buildselfmenu(data);\n        let api = new API(this.setup.wx_AppID, this.setup.wx_AppSecret);\n        //let api = new API('wx3e72261823fb62dd', '593bf2b86a00c913d8e38e9cf1d4e1ec');\n\n        console.log(menu);\n        let info = function(api) {\n            let deferred = think.defer();\n            api.createMenu(menu,(err,result)=>{\n                if(!think.isEmpty(result)){\n                    deferred.resolve(result);\n                }else{\n                    Console.error('err'+err)\n                }\n            });\n            return deferred.promise;\n        }\n        let res = await info(api);\n        console.log(res);\n        if(res.errmsg == 'ok'){\n            return this.json('1');\n        }else{\n            return this.json('2');\n        }\n    }\n\n/*\n        \"m_id\": time,\n        \"pid\": \"0\",\n        \"type\": \"\",\n        \"name\": \"菜单名称\",\n        \"sort\": (length+1),\n        \"sub_button\": []\n*/\n\n    async ajaxaddmenuAction(){\n\n        let m_id = this.post(\"id\");\n        let name = this.post(\"name\");\n        let sort = this.post('sort');\n        let pid = this.post('pid');\n        let type = this.post('type');\n        let url = this.post('url');\n        let web_token = '';\n        let media_id = this.post('media_id');\n        let menu_model =this.model(\"wx_menu\");\n\n        let data = {\n            \"m_id\":m_id,\n            \"name\":name,\n            \"sort\":sort,\n            \"pid\":pid,\n            \"type\":type,\n            \"web_token\":web_token,\n            \"media_id\":media_id,\n            \"url\":url\n        };\n        let res = await menu_model.add(data);\n        if(res){\n            return this.json(\"1\");\n        }else{\n            return this.json(\"2\");\n        }\n    }\n\n    /**\n     * 通过素材ID获取素材链接\n     */\n    async getmaterialbyidAction(){\n        let model = this.model(\"wx_material\");\n        let id = this.post('id');\n        let data = await model.where({id: id}).find();\n        let url = JSON.parse(data.material_wx_content).news_item.url;\n        return this.json(JSON.parse(data.material_wx_content).news_item[0].url);\n    }\n\n    /**\n     * 通过ID获取素材信息\n     */\n    async getmaterialAction(){\n        let model = this.model(\"wx_material\");\n        let id = this.get(\"id\");\n        let data = await model.find(id);\n        return this.json(data);\n    }\n    //远程拿图片\n    spiderImage(imgUrl, filePath) {\n        let deferred = think.defer();\n        http.get(imgUrl, function (res) {\n            var imgData = \"\";\n            res.setEncoding(\"binary\");\n            res.on(\"data\", function (chunk) {\n                imgData += chunk;\n            });\n\n            res.on(\"end\", function () {\n                fs.writeFileSync(filePath, imgData, \"binary\");\n                deferred.resolve(filePath);\n            });\n        });\n        return deferred.promise;\n    }\n    /**\n     * 微信素材列表\n     */\n    async fodderlistAction() {\n        let self = this;\n        self.meta_title = \"微信素材列表\";\n        self.assign({\"navxs\": true, \"bg\": \"bg-dark\"});\n        let model = self.model(\"wx_material\");\n        let data = await model.page(this.get('page')).order('add_time DESC').countSelect();\n        let Pages = think.adapter(\"pages\", \"page\");\n        let pages = new Pages(this.http);\n        let page = pages.pages(data);\n        self.assign('pagerData', page);\n        self.assign('fodder_list', data.data);\n        return this.display();\n    }\n    /**\n     * 新建素材\n     */\n    fodderAction() {\n        this.assign({\"navxs\": true, \"bg\": \"bg-dark\"});\n        this.active=\"admin/mpbase/fodderlist\";\n        this.meta_title=\"新建微信素材\";\n        return this.display();\n    }\n    /**\n     * 删除素材\n     */\n    async deletefodderAction() {\n        let api = new API(this.setup.wx_AppID, this.setup.wx_AppSecret);\n        let self = this;\n        let id = self.get('id');\n        //let ids = self.get('ids')\n        //return self.end(ids);\n        let model = self.model('wx_material');\n        let olddata = await model.where({id: ['IN', id]}).getField('media_id', false);\n        // return self.end(olddata);\n        let wxremove = function (api, data) {\n            let deferred = think.defer();\n            api.removeMaterial(data, (err, result)=> {\n                if (err) {\n                    deferred.reject(err);\n                } else {\n                    deferred.resolve(result);\n                }\n            });\n            return deferred.promise;\n        }\n        if (!think.isEmpty(olddata)) {\n            let wxres = await wxremove(api, olddata[0]);\n            // let wxres = { errcode: 0 };\n            // try{\n            //     for(let midi in olddata){\n            //         await wxremove(self.api, olddata[midi]);\n            //     }\n            // }catch(e){\n            //     return self.fail('删除失败');\n            // }\n            //console.log(wxres);\n            if (wxres.errcode == 0) {\n                let res = await model.where({id: ['IN', id]}).delete();\n                // let res = true;\n                if (res) {\n                    return self.success({name: '删除成功'});\n                }\n            }\n        }\n        return self.fail('删除失败');\n    }\n\n    /**\n     * 模态窗信息列表\n     * @returns {*}\n     */\n    async asyncfodderlistAction() {\n        let self = this;\n        let model = self.model(\"wx_material\");\n        let data = await model.page(this.get('page'), 20).order(\"add_time DESC\").countSelect();\n        return this.json(data);\n    }\n\n    /**\n     * 编辑\n     */\n    async foddereditAction() {\n        let id = this.get('id');\n        this.assign({\"navxs\": true, \"bg\": \"bg-dark\"});\n        this.active=\"admin/mpbase/fodderlist\";\n        this.meta_title=\"编辑微信素材\";\n        let model = this.model(\"wx_material\");\n        let data = await model.where({'id': id}).find();\n        this.assign('data', JSON.stringify(data));\n\n        //this.end(data);\n        return this.display('fodder');\n    }\n    /**\n     * 给微信上传临时素材 /图片 更新本地库\n     */\n    async wxuploadtmpAction() {\n        //上传图片\n        // this.end(\"暂不开发\");\n        let thumb_id = this.get('thumb_id');\n        let model = this.model('picture');\n        // let data = await model.where({id:thumb_id}).find();\n        //获取图片\n        let pic = await get_pic(thumb_id, 1, 900, 500);\n        //判断是本地还是外地,如果是外地就抓回来\n        let paths;\n        let filePath = think.RESOURCE_PATH + '/upload/long/';\n        if (pic.indexOf(\"http://\") == 0) {\n            think.mkdir(filePath)\n            let name = await get_cover(thumb_id, \"path\");\n            let longpic = await this.spiderImage(pic, filePath + name);\n            paths = longpic;\n        } else {\n            paths = think.ROOT_PATH + '/www/' + pic;\n        }\n        //console.log(pic);\n        //return false;\n        let wx = function (api, data) {\n            let deferred = think.defer();\n            api.uploadMaterial(data, 'thumb', (err, result)=> {\n                if (!think.isEmpty(result)) {\n                    deferred.resolve(result);\n                } else {\n                    console.error(err);\n                }\n            });\n            return deferred.promise;\n        }\n\n        let api = new API(this.setup.wx_AppID, this.setup.wx_AppSecret);\n        let img_result = await wx(api, paths);\n        if (img_result) {\n            //删除远程文件\n            fs.unlinkSync(paths);\n            await model.where({id: thumb_id}).update({url: img_result.url, source_id: img_result.media_id});\n            img_result.hs_image_src = pic;\n            return this.json(img_result);\n        } else {\n            return this.json(\"\");\n        }\n    }\n\n    /**\n     * 上传保存永久素材\n     */\n    async savefodderAction() {\n        let self = this;\n        let params = self.post(\"params\");\n        let edit_id = self.get(\"edit_id\");\n        let model = self.model('wx_material');\n        let api = new API(this.setup.wx_AppID, this.setup.wx_AppSecret);\n        if (edit_id) {\n            let olddata = await model.where({id: edit_id}).find();\n            let wxr = function (api, data) {\n                let deferred = think.defer();\n                api.removeMaterial(data, (err, result)=> {\n                    if (err) {\n                        deferred.reject(err);\n                    } else {\n                        deferred.resolve(result);\n                    }\n                });\n                return deferred.promise;\n            }\n            let wxrres = await wxr(api, olddata.media_id);\n            let delrow = await model.where({id: edit_id}).delete();\n        }\n        try {\n            var anews = JSON.parse(params);\n\n            let wx = function (api, data) {\n                let deferred = think.defer();\n                api.uploadNewsMaterial(data, (err, result)=> {\n                    if (err) {\n                        deferred.reject(err);\n                    } else {\n                        deferred.resolve(result);\n                    }\n                });\n                return deferred.promise;\n            }\n\n            let wxres = await wx(api, anews);\n            if (wxres) {\n                let wxg = function (api, data) {\n                    let deferred = think.defer();\n                    api.getMaterial(data, (err, result)=> {\n                        if (err) {\n                            deferred.reject(err);\n                        } else {\n                            deferred.resolve(result);\n                        }\n                    });\n                    return deferred.promise;\n                }\n                let wx_news = await wxg(api, wxres.media_id);\n                // let wx_news_str = JSON.stringify(wx_news);\n                let time = new Date().getTime();\n                let data = {\n                    \"media_id\": wxres.media_id,\n                    \"material_content\": params,\n                    \"material_wx_content\": wx_news + '',\n                    \"web_token\": 0,\n                    \"add_time\": time\n                }\n                let effect = await model.add(data);\n                if (effect) {\n                    self.success({\"name\": \"上传成功！\", url: \"\"});\n                }\n            }\n            self.fail(\"上传失败！\");\n        } catch (e) {\n            self.fail(\"上传失败！\");\n        }\n    }\n\n    /**\n     * 微信公众账号自动回复\n     * @returns {*}\n     */\n    async autoreplyAction() {\n        let rule = await this.model('wx_keywords_rule').where({}).select();\n        for (let i = 0; i < rule.length; i++) {\n            let current = rule[i];\n            let ks = await this.model('wx_keywords').where({id: ['IN', current.keywords_id]}).select();\n            let rs = await this.model('wx_replylist').where({id: ['IN', current.reply_id]}).select();\n            rule[i].ks = ks;\n            rule[i].rs = rs;\n        }\n        this.assign('rulelist', rule);\n        this.assign({\"navxs\": true, \"bg\": \"bg-dark\"});\n        this.meta_title=\"关键词回复\"\n        return this.display();\n    }\n    /**\n     * 新建回复\n     */\n    async createrAction() {\n        let self = this;\n        let type = self.post('type');\n        let ruleid = self.post('ruleid');\n        if (!ruleid) {\n            return self.fail('规则不存在');\n        }\n        let model = self.model('wx_replylist');\n        let currtime = new Date().getTime();\n        let currwebtoken = 0;\n        let result = 0;\n        await model.startTrans();\n        switch (type) {\n            case 'text':\n                let content = self.post('content')\n                result = await model.add({\n                    'type': 'text',\n                    'content': content,\n                    'create_time': currtime,\n                    'web_token': currwebtoken\n                });\n                break;\n            case 'image':\n                break;\n            case 'audio':\n                break;\n            case 'video':\n                break;\n            case 'news':\n                break;\n        }\n\n        if (result) {\n            let rulemodel = self.model('wx_keywords_rule');\n            let ruledata = await rulemodel.where({id: ruleid}).find();\n            console.log(ruledata);\n            let rs = ruledata.reply_id.split(',');\n            rs.push(result);\n            let r = await rulemodel.where({id: ruleid}).update({'reply_id': rs.join(','), 'create_time': currtime});\n            if (r) {\n                await model.commit();\n                return self.success({name: '添加回复成功', rid: result});\n            } else {\n                await model.rollback();\n                return self.fail('回复添加失败');\n            }\n        } else {\n            await model.rollback();\n            return self.fail('回复添加失败');\n        }\n    }\n    /**\n     * 编辑规则名称\n     */\n    async ruleeditnameAction() {\n        let self = this;\n        let ruleid = self.post('ruleid');\n        let rulename = self.post('rulename');\n        let rulemodel = self.model('wx_keywords_rule');\n        let res = await rulemodel.where({id: ruleid}).update({rule_name: rulename});\n        if (res) {\n            return self.success({name: '编辑成功'});\n        }\n        return self.fail('编辑失败');\n    }\n    /**\n     * 新建规则\n     */\n    async createkruleAction() {\n        //let id = 1;\n        let rule_name = this.get('rule_name');\n        let model = this.model('wx_keywords_rule');\n        let id = await model.add({'rule_name': rule_name, 'create_time': new Date().getTime()});\n        if (id) {\n            return this.success({name: \"规则添加成功\", ruleid: id});\n        } else {\n            return this.fail('添加规则失败');\n        }\n    }\n    /**\n     * 删除规则\n     */\n    async ruledeleteAction() {\n        let self = this;\n        let ruleid = self.post('ruleid');\n        let rulemodel = self.model('wx_keywords_rule');\n        await rulemodel.startTrans();\n        let currentrule = await rulemodel.where({id: ruleid}).find();\n        let kids = currentrule.keywords_id;\n        let rids = currentrule.reply_id;\n        let kmodel = self.model('wx_keywords');\n        let rmodel = self.model('wx_replylist');\n        let kres = await kmodel.where({id: ['IN', kids]}).delete();\n        let rres = await rmodel.where({id: ['IN', rids]}).delete();\n        let rulres = await rulemodel.where({id: ruleid}).delete();\n        if (rulres) {\n            await rulemodel.commit();\n            return self.success({name: '规则删除成功'});\n        } else {\n            await rulemodel.rollback();\n            return self.fail('规则删除失败');\n        }\n    }\n    /**\n     * 规则编辑 （关键字的添加和删除）\n     */\n    async ruleeditAction() {\n        let self = this;\n        let ruleid = self.post('ruleid');\n        let rulemodel = self.model('wx_keywords_rule');\n        let ruledata = await rulemodel.where({id: ruleid}).find();\n        let currtime = new Date().getTime();\n        let currwebtoken = 0;\n        let edittype = self.post('edittype'); //判断是编辑关键字 1，还是回复内容 2\n        if (edittype == 1 && ruleid) {\n            //关键字操作\n            let kmodel = self.model('wx_keywords');\n            let kid = self.post('kid'); //如果带有kid表示该操作为删除，否则为添加\n            if (kid) {\n                let r = await kmodel.where({id: kid}).delete();\n                if (r) {\n                    let tmp = []\n                    let ks = ruledata.keywords_id.split(',');\n                    for (let v in ks) {\n                        if (ks[v] != kid) {\n                            tmp.push(ks[v]);\n                        }\n                    }\n                    await rulemodel.where({id: ruleid}).update({'keywords_id': tmp.join(','), 'create_time': currtime});\n                }\n                return self.json(r);\n            } else {\n                //新建关键字\n                let kname = self.post('name');\n                let ktype = self.post('type');\n                let r = 0;\n                try {\n                    r = await kmodel.add({\n                        'keyword_name': kname,\n                        'match_type': ktype,\n                        'rule_id': ruleid,\n                        'create_time': currtime,\n                        'web_token': currwebtoken\n                    });\n                } catch (e) {\n                    return self.json(-1);\n                }\n                if (r) {\n                    let ks = ruledata.keywords_id.split(',');\n                    ks.push(r);\n                    await rulemodel.where({id: ruleid}).update({'keywords_id': ks.join(','), 'create_time': currtime});\n                }\n                return self.json(r);\n            }\n        } else if (edittype == 2 && ruleid) {\n            //回复操作\n        } else {\n        }\n    }\n    /**\n     * 删除回复\n     */\n    async deleterAction() {\n        let self = this;\n        let ruleid = self.post('ruleid');\n        let rid = self.post('rid');\n        let currtime = new Date().getTime();\n        if (ruleid && rid) {\n            let model = self.model('wx_replylist');\n            await model.startTrans();\n            let rr = await model.where({id: rid}).delete();\n            if (rr) {\n                let rulemodel = self.model('wx_keywords_rule');\n                let ruledata = await rulemodel.where({id: ruleid}).find();\n                let tmp = [];\n                let rs = ruledata.reply_id.split(',');\n                for (let i in rs) {\n                    if (rs[i] != rid) {\n                        tmp.push(rs[i]);\n                    }\n                }\n                let r = await rulemodel.where({id: ruleid}).update({\n                    'reply_id': tmp.join(','),\n                    'create_time': currtime\n                });\n                if (r) {\n                    await model.commit();\n                    return self.success({name: '回复删除成功'});\n                } else {\n                    await model.rollback();\n                    return self.fail('回复删除失败');\n                }\n            } else {\n                await model.rollback();\n                return self.fail('删除失败');\n            }\n        } else {\n            return self.fail('提交参数错误');\n        }\n    }\n    /**\n     *  编辑回复\n     */\n    async editreplyAction() {\n        let self = this;\n        let type = self.post('type');\n        let rid = self.post('ruleid');\n        let model = self.model('wx_replylist');\n        let currtime = new Date().getTime();\n        let currwebtoken = 0;\n        let result = 0;\n        switch (type) {\n            case 'text':\n                let content = self.post('content')\n                result = await model.where({id: rid}).update({\n                    'content': content,\n                    'create_time': currtime,\n                    'web_token': currwebtoken\n                });\n                break;\n            case 'image':\n                break;\n            case 'audio':\n                break;\n            case 'video':\n                break;\n            case 'news':\n                break;\n        }\n\n        if (result) {\n            return self.success({name: '编辑成功'});\n        } else {\n            return self.fail('编辑失败');\n        }\n\n    }\n    /**\n     * 消息自动回复\n     */\n    async messageAction() {\n        let model = this.model('wx_replylist');\n        //初始化数据\n        let data = [\n            {type: \"text\", reply_type: 2},\n            {type: \"news\", reply_type: 2},\n            {type: \"image\", reply_type: 2},\n            {type: \"music\", reply_type: 2},\n            {type: \"video\", reply_type: 2},\n            {type: \"voice\", reply_type: 2}\n        ]\n        for(let v of data){\n            await model.where(v).thenAdd(v);\n        }\n        let info = await model.where({reply_type: 2}).order(\"create_time DESC\").select();\n        this.assign('list', info);\n        //初始化\n        let initinfo = info[0];\n        this.assign(\"initinfo\",initinfo);\n        this.assign({\"navxs\": true, \"bg\": \"bg-dark\"});\n        this.meta_title = \"消息自动回复\";\n        this.active = \"admin/mpbase/autoreply\";\n        return this.display();\n    }\n    /**\n     * 关注自动回复\n     */\n    async followAction() {\n        let model = this.model('wx_replylist');\n        //首次访问检查数据库有没有数据,如果没有就添加\n        // 'news','music','video','voice','image','text'\n        let data = [{type: \"text\", reply_type: 1}, {type: \"news\", reply_type: 1}, {\n            type: \"image\",\n            reply_type: 1\n        }, {type: \"music\", reply_type: 1}, {type: \"video\", reply_type: 1}, {type: \"voice\", reply_type: 1}]\n        for (let v of data) {\n            await model.where(v).thenAdd(v)\n        }\n        let info = await model.where({reply_type: 1}).order(\"create_time DESC\").select();\n        this.assign('list', info);\n        //初始化\n        let initinfo = info[0];\n        this.assign({\"initinfo\": initinfo});\n        this.assign({\"navxs\": true, \"bg\": \"bg-dark\"});\n        this.meta_title = \"关注自动回复\"\n        this.active = \"admin/mpbase/autoreply\"\n        return this.display();\n    }\n    /**\n     * 保存回复数据\n     */\n    async saveinfoAction() {\n        let model = this.model('wx_replylist');\n        let media_model = this.model('wx_material');\n        let reply_type = this.post('reply_type');\n        let send_type = this.post('send_type');\n        let editor_content = this.post('editor_content');\n        let me_id = this.post('me_id') == \"\" ? null : this.post('me_id');\n        //this.end(reply_type+send_type+editor_content);\n        let data = {};\n        //消息回复\n        /*if(reply_type == 2){\n         data.content = editor_content;\n         }else if(reply_type == 1){\n         //关注回复\n\n         }*/\n        //this.end(send_type);\n        if (send_type == 'textArea') {\n            data.type = 'text';\n            data.content = editor_content;\n        } else if (send_type == 'newsArea') {\n            console.log(!think.isEmpty(me_id));\n            if (!think.isEmpty(me_id)) {\n                let wx_content = await media_model.where({'id': me_id}).find();\n                //this.end('aaa'+wx_content['material_content']);\n                let material_content = wx_content['material_content'];\n                material_content = JSON.parse(material_content);\n                let targetArr = [];\n                let articles = material_content.articles;\n                let host = `http://${this.http.host}`\n                for (let key in articles) {\n                    let tmpobj = {};\n                    tmpobj.title = articles[key]['title'];\n                    tmpobj.description = articles[key]['digest'];\n                    if (articles[key]['hs_image_src'].indexOf(\"http://\") == 0) {\n                        tmpobj.picurl = articles[key]['hs_image_src'];\n                    } else {\n                        tmpobj.picurl = host + articles[key]['hs_image_src'];\n                    }\n\n                    tmpobj.url = articles[key]['content_source_url'];\n                    targetArr.push(tmpobj);\n                }\n                data.content = JSON.stringify(targetArr);\n            } else {\n                data.content = null;\n            }\n            data.type = 'news';\n            data.media_id = me_id;\n        }\n        data.reply_type = reply_type;\n        data.create_time = new Date().getTime();\n        data.id = this.post(\"id\");\n        //this.end(data);\n        console.log(data);\n        // return false;\n        //查询该类型下是否有保存的回复信息\n        let isAdd = '';\n        isAdd = await model.update(data);\n        if (isAdd) {\n            if (reply_type == 2) {\n                return this.success({name: \"修改成功!\", url: \"/admin/mpbase/message\"})\n            } else if (reply_type == 1) {\n                return this.success({name: \"修改成功!\", url: \"/admin/mpbase/follow\"})\n\n            }\n        }\n\n\n    }\n\n    /**\n     * 打开自定义菜单\n     */\n    async custommenuAction() {\n        let data = {\n            version: 20120000,\n            button: [\n                {\n                    name: '1个福彩蛋',\n                    type: 1,\n                    act_list: [],\n                    sub_button: [\n                        {\n                            name: '投资赚钱吧',\n                            type: 1,\n                            act_list: [{type: 2, value: 'http://www.baidu.com'}],\n                            sub_button: []\n                        }\n                    ]\n                }\n            ]\n        }\n\n        let self = this;\n        let model = self.model('wx_custom_menu');\n        let ddata = await model.where({personality: null}).find();\n        self.assign('data', ddata.custom_menu);\n        self.assign('menuid', ddata.id);\n        self.meta_title = \"微信自定义菜单\";\n        self.assign({\"navxs\": true, \"bg\": \"bg-dark\"});\n        return this.display();\n    }\n    /**\n     * 保存自定义菜单\n     */\n    async savecustommenuAction() {\n        let self = this;\n        let newv = self.post('newv');\n        let menuid = self.post('menuid');//菜单ID\n        let currwebtoken = 0;\n        console.log(newv);\n        //return false;\n        try {\n            // return self.end(newv);\n            if (!newv) {\n                return self.fail('参数错误');\n            }\n            //newv = JSON.parse(newv);\n            let currtime = new Date().getTime();\n            let model = self.model('wx_custom_menu');\n            let res;\n            if (think.isEmpty(menuid)) {\n                res = await model.add({\n                    create_time: currtime,\n                    custom_menu: newv,\n                    web_token: currwebtoken\n                });\n            } else {\n                res = await model.update({\n                    id: menuid,\n                    create_time: currtime,\n                    custom_menu: newv,\n                    web_token: currwebtoken\n                });\n            }\n\n            if (res) {\n                return self.success({name: '菜单保存成功'});\n            } else {\n                return self.fail('菜单保存失败');\n            }\n        } catch (e) {\n            return self.fail('参数错误');\n        }\n    }\n\n    /**\n     * 生成微信菜单\n     */\n    async asyncwxmenuAction() {\n        let self = this;\n        let model = self.model('wx_custom_menu');\n        let data = await model.where({}).find();\n\n        let wxsubmit = function (api, data) {\n            let deferred = think.defer();\n            api.createMenu(data, (err, result)=> {\n                if (err) {\n                    deferred.reject(false);\n                } else {\n                    deferred.resolve(result);\n                }\n            });\n            return deferred.promise;\n        }\n\n        console.log(data);\n\n        let dataObj = JSON.parse(data.custom_menu);\n        let final = {button: []};\n        // for(let i = 0; i < dataObj.button.length; i++){\n        //     let btn = dataObj.button[i];\n        //     let tmpbtn = { /*name:'', type:'', key:'', sub_button:''*/ };\n        //\n        //     tmpbtn.name = btn.name;\n        //     if(btn.sub_button.length > 0){\n        //         tmpbtn.sub_button = [];\n        //         for(let j = 0; j < btn.sub_button.length; j++){\n        //             let sub = btn.sub_button[i];\n        //             let tmpsub = { /*name:'', type:'', key:'', sub_button:''*/ };\n        //             tmpsub.name = sub.name;\n        //             tmpsub.type = 'view';\n        //             tmpsub.url = sub.act_list[i].value;\n        //\n        //             tmpbtn.sub_button.push(tmpsub);\n        //         }\n        //     }else if(!btn.hasOwnProperty('key')){\n        //         btn.key = (new Date().getTime())+\"KEY\";\n        //     }else{\n        //     }\n        //\n        //     final.button.push( tmpbtn );\n        // }\n        for (let a of dataObj.button) {\n            let tmpbtn = {};\n            tmpbtn.name = a.name;\n            //console.log(a);\n            if (think.isEmpty(a.sub_button)) {\n                //console.log(a.type);\n                switch (a.type) {\n                    case '1':\n                        tmpbtn.type=\"click\";\n                        tmpbtn.key=a.act_list[0].value;\n                        break;\n                    case '2':\n                        tmpbtn.type = \"view\";\n                        tmpbtn.url = a.act_list[0].value;\n                        break;\n                }\n            } else {\n                tmpbtn.sub_button = [];\n                for (let b of a.sub_button) {\n                    let tmpsub = {};\n                    tmpsub.name = b.name;\n                    //console.log(b.type);\n                    switch (b.type) {\n                        case '1':\n                            tmpsub.type=\"click\";\n                            tmpsub.key=b.act_list[0].value;\n                            break;\n                        case '2':\n                            tmpsub.type = \"view\";\n                            tmpsub.url = b.act_list[0].value;\n                            break;\n                    }\n                    tmpbtn.sub_button.push(tmpsub);\n                }\n            }\n            final.button.push(tmpbtn);\n            console.log(tmpbtn);\n        }\n        think.log(final)\n        //return false;\n        let api = new API(this.setup.wx_AppID, this.setup.wx_AppSecret);\n        let res = await wxsubmit(api, final);\n        // let res = true;\n        console.log(res);\n        if (res) {\n            return self.success({name: '微信菜单生成成功'});\n        } else {\n            return self.fail('微信菜单生成失败');\n        }\n    }\n    /**\n\n    */\n\n    async yj2dAction(){\n        let api = new API(this.setup.wx_AppID, this.setup.wx_AppSecret);\n        // let yj2d = function(api, sceneId) {\n        //     let deferred = think.defer();\n        //     api.createLimitQRCode({  sceneId: sceneId }, (err, result) => {\n        //         if (!think.isEmpty(result)) {\n        //             think.log(result, \"createLimitQRCode\");\n        //             deferred.resolve(result);\n        //         } else {\n        //             Console.error('err' + err)\n        //         }\n        //     });\n        //     return deferred.promise;\n        // }\n        let res =await createLimitQRCode(api,100);\n        console.log(JSON.stringify(res));\n        let qrcod = api.showQRCodeURL(res.ticket);\n        \n        this.assign('qrurl',qrcod);\n        // let id = this.get(\"ids\");\n        // let res = await this.model('member_public').where({'id':id}).delete();\n        return this.display();\n        // if(res){\n        //     return this.display();\n        //     // return this.success({name: \"二维码生成成功\"});\n        // }else{\n        //     return this.fail(\"二维码生成失败\");\n        // }\n    }\n}"
    ]
}