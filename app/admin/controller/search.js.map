{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/search.js"
    ],
    "names": [
        "init",
        "http",
        "tactive",
        "indexAction",
        "model",
        "order",
        "select",
        "list",
        "assign",
        "meta_title",
        "query",
        "variables",
        "ft_min_word_len",
        "think",
        "_",
        "find",
        "Value",
        "display",
        "addAction",
        "isPost",
        "data",
        "post",
        "get_model",
        "mod",
        "extend",
        "add",
        "success",
        "name",
        "fail",
        "where",
        "status",
        "id",
        "modlist",
        "editAction",
        "update",
        "up",
        "get",
        "info",
        "delAction",
        "delete",
        "del",
        "sortAction",
        "createindexAction",
        "paths",
        "RESOURCE_PATH",
        "lock",
        "isAjax",
        "isEmpty",
        "mkdir",
        "isFile",
        "writeFileSync",
        "Date",
        "tables",
        "v",
        "table",
        "session",
        "page",
        "json",
        "progress",
        "console",
        "log",
        "start",
        "pagesize",
        "map",
        "model_id",
        "field",
        "split",
        "push",
        "pk",
        "addtime",
        "countSelect",
        "olist",
        "count",
        "narr",
        "obj",
        "m_id",
        "d_id",
        "add_time",
        "arr",
        "d",
        "segment",
        "useDefault",
        "segment_q",
        "doSegment",
        "join",
        "simple",
        "stripPunctuation",
        "replace",
        "addMany",
        "totalPages",
        "currentPage",
        "numsPerPage",
        "rate",
        "Math",
        "floor",
        "unlinkSync",
        "active",
        "unlockAction"
    ],
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;;;;;;;qBAEIA,I,iBAAKC,I,EAAM;AACP,wBAAMD,IAAN,YAAWC,IAAX;AACA,aAAKC,OAAL,GAAe,OAAf;AACH,K;AACH;;;;;;qBAIMC,W;;;;;;;;mCAEe,KAAKC,KAAL,CAAW,cAAX,EAA2BC,KAA3B,CAAiC,UAAjC,EAA6CC,MAA7C,E;;;AAAbC,gC;;AACJ,iCAAKC,MAAL,CAAY,MAAZ,EAAmBD,IAAnB;AACA,iCAAKE,UAAL,GAAkB,MAAlB;AACA;;mCACsB,KAAKL,KAAL,CAAW,OAAX,EAAoBM,KAApB,kB;;;AAAlBC,qC;AACAC,2C,GAAiBC,MAAMC,CAAN,CAAQC,IAAR,CAAaJ,SAAb,EAAwB,CAAC,eAAD,EAAkB,iBAAlB,CAAxB,EAA8DK,K;;AACnF,iCAAKR,MAAL,CAAY,iBAAZ,EAA8BI,eAA9B;6DACK,KAAKK,OAAL,E;;;;;;;;;;;;;;;;;AAGP;;;;;;qBAIIC,S;;;;;;;iCACC,KAAKC,MAAL,E;;;;;AACKC,gC,GAAO,KAAKC,IAAL,E;;mCACQ,KAAKjB,KAAL,CAAW,OAAX,EAAoBkB,SAApB,CAA8BF,KAAKG,GAAnC,EAAuC,QAAvC,C;;;AAAfC,kC;;AACJJ,iCAAKI,MAAL,GAAcA,MAAd;;mCACgB,KAAKpB,KAAL,CAAW,cAAX,EAA2BqB,GAA3B,CAA+BL,IAA/B,C;;;AAAZK,+B;;iCACDA,G;;;;;8DACQ,KAAKC,OAAL,CAAa,EAACC,MAAK,OAAN,EAAb,C;;;8DAEA,KAAKC,IAAL,CAAU,OAAV,C;;;;;;;;mCAIS,KAAKxB,KAAL,CAAW,OAAX,EAAoByB,KAApB,CAA0B,EAACC,QAAO,CAAR,EAAUC,IAAG,CAAC,GAAD,EAAK,CAAL,CAAb,EAA1B,EAAiDzB,MAAjD,E;;;AAAhB0B,mC;;AACJ;AACA,iCAAKxB,MAAL,CAAY,SAAZ,EAAsBwB,OAAtB;AACA,iCAAKvB,UAAL,GAAgB,QAAhB;8DACO,KAAKQ,OAAL,E;;;;;;;;;;;;;;;;;AAKb;;;;;;qBAIIgB,U;;;;;;;iCACC,KAAKd,MAAL,E;;;;;AACKC,gC,GAAO,KAAKC,IAAL,E;;mCACQ,KAAKjB,KAAL,CAAW,OAAX,EAAoBkB,SAApB,CAA8BF,KAAKG,GAAnC,EAAuC,QAAvC,C;;;AAAfC,kC;;AACJJ,iCAAKI,MAAL,GAAcA,MAAd;;mCACe,KAAKpB,KAAL,CAAW,cAAX,EAA2B8B,MAA3B,CAAkCd,IAAlC,C;;;AAAXe,8B;;iCACDA,E;;;;;8DACQ,KAAKT,OAAL,CAAa,EAACC,MAAK,OAAN,EAAb,C;;;8DAEA,KAAKC,IAAL,CAAU,OAAV,C;;;;;;;;mCAGM,KAAKxB,KAAL,CAAW,cAAX,EAA2BW,IAA3B,CAAgC,KAAKqB,GAAL,CAAS,IAAT,CAAhC,C;;;AAAbC,gC;;AACJ,iCAAK7B,MAAL,CAAY,MAAZ,EAAmB6B,IAAnB;;mCACoB,KAAKjC,KAAL,CAAW,OAAX,EAAoByB,KAApB,CAA0B,EAACC,QAAO,CAAR,EAAUC,IAAG,CAAC,GAAD,EAAK,CAAL,CAAb,EAA1B,EAAiDzB,MAAjD,E;;;AAAhB0B,mC;;AACJ,iCAAKxB,MAAL,CAAY,SAAZ,EAAsBwB,OAAtB;AACA,iCAAKvB,UAAL,GAAkB,QAAlB;8DACO,KAAKQ,OAAL,E;;;;;;;;;;;;;;;;;qBAGTqB,S;;;;;;;AACEP,8B,GAAK,KAAKK,GAAL,CAAS,IAAT,C;;mCACO,KAAKhC,KAAL,CAAW,cAAX,EAA2ByB,KAA3B,CAAiC,EAACE,IAAGA,EAAJ,EAAjC,EAA0CQ,MAA1C,E;;;AAAZC,+B;;iCACDA,G;;;;;8DACQ,KAAKd,OAAL,CAAa,EAACC,MAAK,OAAN,EAAb,C;;;8DAEA,KAAKC,IAAL,CAAU,OAAV,C;;;;;;;;;;;;;;;;;qBAGTa,U;;;;;;;mCACI,gBAAMA,UAAN,YAAiB,IAAjB,EAAsB,cAAtB,C;;;;;;;;;;;;;;;;AAER;;;;;;qBAIKC,iB;;;;;;;;AACEC,iC,GAAQ9B,MAAM+B,aAAN,GAAsB,U;AAC9BC,gC,GAAOF,QAAQ,kB;AAClB;;;mCACsB,KAAKvC,KAAL,CAAW,OAAX,EAAoBM,KAApB,kB;;;AAAlBC,qC;AACAC,2C,GAAiBC,MAAMC,CAAN,CAAQC,IAAR,CAAaJ,SAAb,EAAwB,CAAC,eAAD,EAAkB,iBAAlB,CAAxB,EAA8DK,K;;kCACjF,KAAK8B,MAAL,CAAY,MAAZ,KAAqB,CAACjC,MAAMkC,OAAN,CAAc,KAAK1B,IAAL,EAAd,C;;;;;AAEtBR,kCAAMmC,KAAN,CAAYL,KAAZ;AACA;;iCACI9B,MAAMoC,MAAN,CAAaJ,IAAb,C;;;;;8DACO,KAAKjB,IAAL,CAAU,EAAV,EAAc,uBAAd,C;;;AAEP;AACA,yCAAGsB,aAAH,CAAiBL,IAAjB,EAAuB,IAAIM,IAAJ,EAAvB;;;;mCAEgB,KAAK/C,KAAL,CAAW,cAAX,EAA2BE,MAA3B,E;;;AAAf8C,kC;wCACSA,M;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAALC,6B;;kCACDA,EAAE7B,MAAF,IAAU,C;;;;;;mCACM,KAAKpB,KAAL,CAAW,OAAX,EAAoBkB,SAApB,CAA8B+B,EAAE9B,GAAhC,EAAoC,MAApC,C;;;AAAf8B,8BAAEC,K;;;;;AAEFD,8BAAEC,KAAF,GAAQ,UAAR;;;;;;;;mCAIF,KAAKC,OAAL,CAAa,oBAAb,EAAmCH,MAAnC,C;;;;mCAEA,KAAKhD,KAAL,CAAW,QAAX,EAAqByB,KAArB,CAA2B,KAA3B,EAAkCU,MAAlC,E;;;AACHiB,gC,GAAO,EAAC,MAAM,CAAP,EAAS,QAAO,CAAhB,EAAkB,YAAW,KAAKnC,IAAL,CAAU,UAAV,CAA7B,E;8DACJ,KAAKoC,IAAL,CAAU;AACb,uCAAO,EAACC,UAAS,CAAV,EAAYrB,MAAK,QAAjB,EADM;AAEb,wCAAQmB,IAFK;AAGb,0CAAU;AAHG,6BAAV,C;;;kCAKF,KAAKV,MAAL,CAAY,KAAZ,KAAoB,CAACjC,MAAMkC,OAAN,CAAc,KAAKX,GAAL,EAAd,C;;;;;;mCACN,KAAKmB,OAAL,CAAa,oBAAb,C;;;AAAfH,mC;;AACJO,oCAAQC,GAAR,CAAYR,OAAZ;AACIrB,8B,GAAK,KAAKK,GAAL,CAAS,IAAT,C;AACLyB,iC,GAAQ,KAAKzB,GAAL,CAAS,OAAT,C;AACRoB,iC,GAAO,KAAKpB,GAAL,CAAS,MAAT,C;AACP0B,oC,GAAW,KAAK1B,GAAL,CAAS,UAAT,C;AACf;;AACI2B,+B,GAAK,E;;AACT,gCAAGX,QAAOrB,EAAP,EAAWP,MAAX,IAAmB,CAAtB,EAAwB;AACpBuC,oCAAIC,QAAJ,GAAaZ,QAAOrB,EAAP,EAAWR,GAAxB;AACAwC,oCAAIjC,MAAJ,GAAW,CAAX;AACH;AACGmC,iC,GAAOb,QAAOrB,EAAP,EAAWX,IAAZ,CAAkB8C,KAAlB,CAAwB,GAAxB,C;;AACVD,kCAAME,IAAN,CAAWf,QAAOrB,EAAP,EAAWqC,EAAtB;AACAH,kCAAME,IAAN,CAAWf,QAAOrB,EAAP,EAAWsC,OAAtB;;mCACkB,KAAKjE,KAAL,CAAWgD,QAAOrB,EAAP,EAAWuB,KAAtB,EAA6BE,IAA7B,CAAkCA,KAAlC,EAAuCM,QAAvC,EAAiDjC,KAAjD,CAAuDkC,GAAvD,EAA4DE,KAA5D,CAAkEA,KAAlE,EAAyEK,WAAzE,E;;;AAAdC,iC;;iCAEDA,MAAMC,K;;;;;AACDC,gC,GAAO,E;yCACGF,MAAMnD,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAXiC,8B;AACDqB,+B,GAAK,E;;AACTA,gCAAIC,IAAJ,GAASvB,QAAOrB,EAAP,EAAWR,GAApB;AACAmD,gCAAIE,IAAJ,GAASvB,GAAED,QAAOrB,EAAP,EAAWqC,EAAb,CAAT;AACAM,gCAAIG,QAAJ,GAAaxB,GAAED,QAAOrB,EAAP,EAAWsC,OAAb,CAAb;AACIS,+B,GAAI,E;yCACK1B,QAAOrB,EAAP,EAAWX,IAAX,CAAgB8C,KAAhB,CAAsB,GAAtB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAALa,6B;;AACJD,gCAAIX,IAAJ,CAASd,GAAE0B,CAAF,CAAT;;;;;;;AAEJ,gCAAGnE,mBAAiB,CAApB,EAAsB;AACdoE,uCADc,GACJ,uBADI;AAElB;;AACAA,wCAAQC,UAAR;AACA;AACIC,yCALc,GAKHF,QAAQG,SAAR,CAAkBL,IAAIM,IAAJ,CAAS,GAAT,CAAlB,EAAiC;AAC5CC,4CAAQ,IADoC;AAE5CC,sDAAkB;AAF0B,iCAAjC,CALG;;AASlBZ,oCAAItD,IAAJ,GAAW0D,IAAIM,IAAJ,CAAS,GAAT,IAAc,GAAd,GAAkBF,UAAUE,IAAV,CAAe,GAAf,CAA7B;AACH,6BAVD,MAUM;AACFV,oCAAItD,IAAJ,GAAW0D,IAAIM,IAAJ,CAAS,GAAT,EAAcG,OAAd,CAAsB,UAAtB,EAAkC,EAAlC,CAAX;AACH;AACDd,iCAAKN,IAAL,CAAUO,GAAV;;;;;;;AAEJf,oCAAQC,GAAR,CAAY,SAAOa,IAAnB;;mCACM,KAAKrE,KAAL,CAAW,QAAX,EAAqBoF,OAArB,CAA6Bf,IAA7B,C;;;kCACHF,MAAMkB,UAAN,GAAkBlB,MAAMmB,W;;;;;AACnBlC,kC,GAAO,EAAC,MAAMzB,EAAP,EAAW,QAAQwC,MAAMmB,WAAN,GAAkB,CAArC,EAAuC,YAAWnB,MAAMoB,WAAxD,E;AACPC,gC,GAAOC,KAAKC,KAAL,CAAW,OAAO,CAACvB,MAAMmB,WAAN,GAAkB,CAAnB,IAAwBnB,MAAMkB,UAArC,CAAX,C;8DACJ,KAAKhC,IAAL,CAAU;AACb,uCAAO,EAACC,UAASkC,IAAV,EAAevD,mHAAqFe,QAAOrB,EAAP,EAAWJ,IAAhG,oCAAoH4C,MAAMC,KAA1H,kDAA2JD,MAAMmB,WAAjK,oBAAf,EADM;AAEb,wCAAQlC,MAFK;AAGb,0CAAU;AAHG,6BAAV,C;;;iCAMHJ,QAAO,EAAErB,EAAT,C;;;;;AACIyB,kC,GAAO,EAAC,MAAMzB,EAAP,EAAW,QAAQ,CAAnB,EAAqB,YAAW+B,QAAhC,E;8DACJ,KAAKL,IAAL,CAAU;AACb,qHAAiFL,QAAOrB,KAAG,CAAV,EAAaJ,IAA9F,gDADa;AAEb,wCAAQ6B,MAFK;AAGb,0CAAU;AAHG,6BAAV,C;;;AAMP,gCAAI3C,MAAMoC,MAAN,CAAaJ,IAAb,CAAJ,EAAwB;AACpB,6CAAGkD,UAAH,CAAclD,IAAd;AACH;;mCACK,KAAKU,OAAL,CAAa,oBAAb,EAAmC,IAAnC,C;;;8DACC,KAAKE,IAAL,CAAU;AACb,uCAAO,EAACC,UAAS,GAAV,EAAcrB,MAAK,wFAAnB,EADM;AAEb,0CAAU;AAFG,6BAAV,C;;;;;;;iCAMVe,QAAOrB,EAAP,C;;;;;AACDyB,kC,GAAO,EAAC,MAAM,EAAEzB,EAAT,EAAa,QAAQ,CAArB,EAAuB,YAAW,CAAlC,E;8DACJ,KAAK0B,IAAL,CAAU;AACb,qHAAiFL,QAAOrB,KAAG,CAAV,EAAaJ,IAA9F,gDADa;AAEb,wCAAQ6B,MAFK;AAGb,0CAAU;AAHG,6BAAV,C;;;AAMX,gCAAI3C,MAAMoC,MAAN,CAAaJ,IAAb,CAAJ,EAAwB;AACrB,6CAAGkD,UAAH,CAAclD,IAAd;AACH;8DACM,KAAKY,IAAL,CAAU;AACb,uCAAO,EAACC,UAAS,GAAV,EAAcrB,MAAK,wFAAnB,EADM;AAEb,0CAAU;AAFG,6BAAV,C;;;;mCAOgB,KAAKjC,KAAL,CAAW,OAAX,EAAoBM,KAApB,kB;;;AAAlBC,sC;AACAC,4C,GAAiBC,MAAMC,CAAN,CAAQC,IAAR,CAAaJ,UAAb,EAAwB,CAAC,eAAD,EAAkB,iBAAlB,CAAxB,EAA8DK,K;;AACnF,iCAAKR,MAAL,CAAY,iBAAZ,EAA8BI,gBAA9B;AACD,iCAAKH,UAAL,GAAkB,MAAlB;AACA,iCAAKuF,MAAL,GAAY,oBAAZ;8DACO,KAAK/E,OAAL,E;;;;;;;;;;;;;;;;AAIhB;;;;;qBAGGgF,Y,2BAAc;AACP,YAAItD,QAAQ9B,MAAM+B,aAAN,GAAsB,UAAlC;AACJ,YAAIC,OAAOF,QAAQ,kBAAnB;AACA;AACG,YAAI9B,MAAMoC,MAAN,CAAaJ,IAAb,CAAJ,EAAwB;AACpB,yBAAGkD,UAAH,CAAclD,IAAd;AACA,mBAAO,KAAKnB,OAAL,CAAa,EAACC,MAAK,OAAN,EAAb,CAAP;AACH,SAHD,MAGO;AACH;AACA,mBAAO,KAAKD,OAAL,CAAa,EAACC,MAAK,OAAN,EAAb,CAAP;AACH;AACN,K",
    "file": "../../../src/admin/controller/search.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\n\nimport Base from './base.js';\nimport fs  from 'fs';\nimport Segment from 'segment';\nexport default class extends Base {\n    init(http) {\n        super.init(http);\n        this.tactive = \"setup\";\n    }\n  /**\n   * index action\n   * @return {Promise} []\n   */\n  async indexAction(){\n    //auto render template file index_index.html\n      let list = await this.model(\"search_model\").order('sort ASC').select();\n      this.assign(\"list\",list);\n      this.meta_title = \"全站搜索\";\n      //检查全文搜索配置\n      let variables = await this.model(\"mysql\").query(`show variables`);\n      let ft_min_word_len =think._.find(variables, ['Variable_name', 'ft_min_word_len']).Value;\n      this.assign(\"ft_min_word_len\",ft_min_word_len)\n    return this.display();\n  }\n\n    /**\n     * 添加搜索分类\n     * @returns {Promise.<void>}\n     */\n  async addAction(){\n      if(this.isPost()){\n          let data = this.post();\n          let extend = await this.model(\"model\").get_model(data.mod,\"extend\");\n          data.extend = extend;\n          let add = await this.model(\"search_model\").add(data);\n          if(add){\n              return this.success({name:\"添加成功!\"})\n          }else {\n              return this.fail(\"添加失败!\");\n          }\n\n      }else {\n          let modlist = await this.model(\"model\").where({status:1,id:[\">\",1]}).select();\n          //console.log(modlist);\n          this.assign(\"modlist\",modlist);\n          this.meta_title=\"添加搜索分类\";\n          return this.display();\n      }\n\n  }\n\n    /**\n     * 编辑\n     * @returns {Promise.<void>}\n     */\n  async editAction(){\n      if(this.isPost()){\n          let data = this.post();\n          let extend = await this.model(\"model\").get_model(data.mod,\"extend\");\n          data.extend = extend;\n          let up = await this.model(\"search_model\").update(data);\n          if(up){\n              return this.success({name:\"编辑成功!\"})\n          }else {\n              return this.fail(\"编辑失败!\");\n          }\n      }else {\n          let info = await this.model(\"search_model\").find(this.get(\"id\"));\n          this.assign(\"info\",info);\n          let modlist = await this.model(\"model\").where({status:1,id:[\">\",1]}).select();\n          this.assign(\"modlist\",modlist);\n          this.meta_title = \"编辑搜索分类\";\n          return this.display();\n      }\n  }\n  async delAction(){\n      let id = this.get(\"id\");\n      let del = await this.model(\"search_model\").where({id:id}).delete();\n      if(del){\n          return this.success({name:\"删除成功!\"})\n      }else {\n          return this.fail(\"删除失败!\");\n      }\n  }\n  async sortAction(){\n      await super.sortAction(this,\"search_model\")\n  }\n    /**\n     * 重建索引\n     * @returns {Promise.<void>}\n     */\n   async createindexAction(){\n       let paths = think.RESOURCE_PATH + \"/backup/\";\n       let lock = paths + \"createindex.lock\";\n        //检查全文搜索配置\n        let variables = await this.model(\"mysql\").query(`show variables`);\n        let ft_min_word_len =think._.find(variables, ['Variable_name', 'ft_min_word_len']).Value;\n       if(this.isAjax(\"post\")&&!think.isEmpty(this.post())){\n\n          think.mkdir(paths);\n          //检查是否有正在执行的任务\n          if (think.isFile(lock)) {\n              return this.fail(20, '检测到有一个重建任务正在执行，请稍后再试！');\n          } else {\n              //创建锁文件\n              fs.writeFileSync(lock, new Date())\n          }\n           let tables = await this.model(\"search_model\").select();\n           for(let v of tables){\n               if(v.extend==0){\n                   v.table= await this.model(\"model\").get_model(v.mod,\"name\");\n               }else {\n                   v.table=\"document\";\n               }\n           }\n           //console.log(tables);\n           await this.session('createindex_tables', tables);\n           //清空缓存表\n           await this.model(\"search\").where(\"1=1\").delete();\n          let page = {'id': 0,'page':1,'pagesize':this.post(\"pagesize\")};\n          return this.json({\n              'msg': {progress:0,info:\"开始索引更新\"},\n              'page': page,\n              'status': 1\n          })\n      }else if(this.isAjax(\"get\")&&!think.isEmpty(this.get())){\n           let tables = await this.session('createindex_tables');\n           console.log(tables);\n           let id = this.get(\"id\");\n           let start = this.get(\"start\");\n           let page = this.get(\"page\");\n           let pagesize = this.get(\"pagesize\")\n           //console.log(this.get());\n           let map ={}\n           if(tables[id].extend==1){\n               map.model_id=tables[id].mod;\n               map.status=1\n           }\n           let field=(tables[id].data).split(\",\");\n           field.push(tables[id].pk);\n           field.push(tables[id].addtime);\n           let olist = await this.model(tables[id].table).page(page,pagesize).where(map).field(field).countSelect();\n\n           if(olist.count){\n               let narr = [];\n               for (let v of olist.data){\n                   let obj ={};\n                   obj.m_id=tables[id].mod;\n                   obj.d_id=v[tables[id].pk];\n                   obj.add_time=v[tables[id].addtime];\n                   let arr=[];\n                   for(let d of tables[id].data.split(\",\")){\n                       arr.push(v[d])\n                   }\n                   if(ft_min_word_len==1){\n                       let segment = new Segment();\n                       // 使用默认的识别模块及字典，载入字典文件需要1秒，仅初始化时执行一次即可\n                       segment.useDefault();\n                       // 开始分词\n                       let segment_q= segment.doSegment(arr.join(\" \"), {\n                           simple: true,\n                           stripPunctuation: true\n                       });\n                       obj.data = arr.join(\" \")+\" \"+segment_q.join(\" \");\n                   }else {\n                       obj.data = arr.join(\" \").replace(/<[^>]+>/g, \"\")\n                   }\n                   narr.push(obj)\n               }\n               console.log(\"wwww\"+narr);\n               await this.model(\"search\").addMany(narr)\n               if(olist.totalPages> olist.currentPage){\n                   let page = {'id': id, 'page': olist.currentPage+1,'pagesize':olist.numsPerPage};\n                   let rate = Math.floor(100 * ((olist.currentPage+1) / olist.totalPages));\n                   return this.json({\n                       'msg': {progress:rate,info:`正在更新： <span style='color:#ff0000;font-size:14px;text-decoration:underline;' >${tables[id].name}</span> - 总数：${olist.count} - 当前第 <font color='red'>${olist.currentPage}</font> 页 `},\n                       'page': page,\n                       'status': 1\n                   })\n               }else {\n                   if (tables[++id]) {\n                       let page = {'id': id, 'page': 1,\"pagesize\":pagesize};\n                       return this.json({\n                           'msg': `<span style='color:#ff0000;font-size:14px;text-decoration:underline;' >${tables[id-1].name}</span>索引更新完成`,\n                           'page': page,\n                           'status': 1\n                       })\n                   } else {\n                       if (think.isFile(lock)) {\n                           fs.unlinkSync(lock)\n                       }\n                       await this.session('createindex_tables', null);\n                       return this.json({\n                           'msg': {progress:100,info:\"<span style='color:#ff0000;font-size:14px;text-decoration:underline;' >全站</span>索引更新完成\"},\n                           'status': 1\n                       })\n                   }\n               }\n           }else if(tables[id]){\n               let page = {'id': ++id, 'page': 1,\"pagesize\":1};\n               return this.json({\n                   'msg': `<span style='color:#ff0000;font-size:14px;text-decoration:underline;' >${tables[id-1].name}</span>索引更新完成`,\n                   'page': page,\n                   'status': 1\n               })\n           }\n           if (think.isFile(lock)) {\n              fs.unlinkSync(lock)\n          }\n          return this.json({\n              'msg': {progress:100,info:\"<span style='color:#ff0000;font-size:14px;text-decoration:underline;' >全站</span>索引更新完成\"},\n              'status': 1\n          })\n\n      }else {\n           //检查全文搜索配置\n           let variables = await this.model(\"mysql\").query(`show variables`);\n           let ft_min_word_len =think._.find(variables, ['Variable_name', 'ft_min_word_len']).Value;\n           this.assign(\"ft_min_word_len\",ft_min_word_len);\n          this.meta_title = \"重建索引\";\n          this.active=\"admin/search/index\"\n          return this.display();\n      }\n\n    }\n /**\n  * 解锁\n  */\n    unlockAction(){\n           let paths = think.RESOURCE_PATH + \"/backup/\";\n       let lock = paths + \"createindex.lock\";\n       //检查是否有正在执行的任务\n          if (think.isFile(lock)) {\n              fs.unlinkSync(lock)\n              return this.success({name:\"解锁成功!\"});\n          } else {\n              //创建锁文件\n              return this.success({name:\"无需解锁!\"});\n          }\n    }\n}"
    ]
}