{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/menu.js"
    ],
    "names": [
        "init",
        "http",
        "db",
        "model",
        "tactive",
        "indexAction",
        "meta_title",
        "display",
        "getlistAction",
        "pid",
        "get",
        "draw",
        "where",
        "id",
        "find",
        "data",
        "i",
        "breadcrumb",
        "field",
        "nav",
        "push",
        "select",
        "all_menu",
        "obj",
        "forEach",
        "v",
        "title",
        "map",
        "order",
        "list",
        "k",
        "up_title",
        "group",
        "setup",
        "MENU_GROUP",
        "relist",
        "reverse",
        "json",
        "chstaAction",
        "hide",
        "is_dev",
        "update",
        "res",
        "think",
        "cache",
        "editAction",
        "isAjax",
        "post",
        "assign",
        "addAction",
        "status",
        "add",
        "deleteAction",
        "delete",
        "getmenuAction",
        "returnnodes",
        "menu",
        "aabbAction",
        "getallmenu",
        "value",
        "end"
    ],
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;AAGI;;;;qBAIAA,I,iBAAKC,I,EAAK;AACN,wBAAMD,IAAN,YAAWC,IAAX;AACA,aAAKC,EAAL,GAAU,KAAKC,KAAL,CAAW,MAAX,CAAV;AACA,aAAKC,OAAL,GAAe,OAAf;AACH,K;;qBAEDC,W,0BAAa;AACT;AACA,aAAKC,UAAL,GAAgB,MAAhB;AACA,eAAO,KAAKC,OAAL,EAAP;AACH,K;;AAED;;;;;qBAGMC,a;;;;;;;;;AACEC,+B,GAAM,KAAKC,GAAL,CAAS,KAAT,KAAiB,C;AACvBC,gC,GAAO,KAAKD,GAAL,CAAS,MAAT,C;;iCACRD,G;;;;;;mCACc,KAAKP,EAAL,CAAQU,KAAR,CAAc,EAACC,IAAGJ,GAAJ,EAAd,EAAwBK,IAAxB,E;;;AAAbC,gC;;;AAEAC,6B,GAAIP,G;AACR;;AACIQ,sC,GAAa,E;;;kCACVD,KAAG,C;;;;;;mCAEU,KAAKd,EAAL,CAAQU,KAAR,CAAc,EAACC,IAAGG,CAAJ,EAAd,EAAsBE,KAAtB,CAA4B,cAA5B,EAA4CJ,IAA5C,E;;;AAAZK,+B;;AACJF,uCAAWG,IAAX,CAAgBD,GAAhB;AACAH,gCAAIG,IAAIV,GAAR;;;;;;;mCAGiB,KAAKP,EAAL,CAAQgB,KAAR,CAAc,UAAd,EAA0BG,MAA1B,E;;;AAAjBC,oC;;AACJ;AACIC,+B,GAAM,E;;AACRD,qCAASE,OAAT,CAAiB,aAAG;AAChBD,oCAAIE,EAAEZ,EAAN,IAAUY,EAAEC,KAAZ;AACH,6BAFD;;AAIEC,+B,GAAM,E;;AACVA,gCAAIlB,GAAJ,GAAUA,GAAV;;mCACiB,KAAKP,EAAL,CAAQU,KAAR,CAAce,GAAd,EAAmBC,KAAnB,CAAyB,kBAAzB,EAA6CP,MAA7C,E;;;AAAbQ,gC;;AACJ;AACA,gCAAGA,IAAH,EAAQ;AACJA,qCAAKL,OAAL,CAAa,UAACC,CAAD,EAAGK,CAAH,EAAO;AAChB,wCAAGL,EAAEhB,GAAL,EAAS;AACLgB,0CAAEM,QAAF,GAAWR,IAAIE,EAAEhB,GAAN,CAAX;AACH,qCAFD,MAEK;AACDgB,0CAAEM,QAAF,GAAW,MAAX;AACH;AACD;AACAN,sCAAEO,KAAF,GAAQ,OAAKC,KAAL,CAAWC,UAAX,CAAsBT,EAAEO,KAAxB,CAAR;AACH,iCARD;AASH;AACGG,kC,GAAS;AACT,wCAAQxB,IADC;AAET,wCAAQkB,IAFC;AAGT,8CAAaZ,WAAWmB,OAAX;AAEjB;AALa,6B;6DAMN,KAAKC,IAAL,CAAUF,MAAV,C;;;;;;;;;;;;;;;;AAGX;;;;;;qBAIMG,W;;;;;;;AACA;AACIX,+B,GAAM,E;AACZ;;AACA,gCAAG,KAAKjB,GAAL,CAAS,KAAT,KAAiB,CAApB,EAAsB;AAClBiB,oCAAIY,IAAJ,GAAW,KAAK7B,GAAL,CAAS,QAAT,CAAX;AACH,6BAFD,MAEK;AACDiB,oCAAIa,MAAJ,GAAa,KAAK9B,GAAL,CAAS,QAAT,CAAb;AACH;AACDiB,gCAAId,EAAJ,GAAS,KAAKH,GAAL,CAAS,IAAT,CAAT;;mCACgB,KAAKR,EAAL,CAAQuC,MAAR,CAAed,GAAf,C;;;AAAZe,+B;;iCACDA,G;;;;;AACCC,kCAAMC,KAAN,CAAY,UAAZ,EAAwB,IAAxB,E,CAA8B;8DACvB,KAAKP,IAAL,CAAUK,GAAV,C;;;;;;;;;;;;;;;;AAGf;;;;;;qBAIMG,U;;;;;;;;iCACE,KAAKC,MAAL,CAAY,MAAZ,C;;;;;AACIjC,8B,GAAK,KAAKkC,IAAL,CAAU,IAAV,C;;mCACQ,KAAK7C,EAAL,CAAQU,KAAR,CAAc,EAACC,IAAIA,EAAL,EAAd,EAAwB4B,MAAxB,CAA+B,KAAKM,IAAL,EAA/B,C;;;AAAbhC,gC;;AACJ4B,kCAAMC,KAAN,CAAY,UAAZ,EAAwB,IAAxB,E,CAA8B;8DACvB,KAAKP,IAAL,CAAUtB,IAAV,C;;;AAEHF,+B,GAAK,KAAKH,GAAL,CAAS,IAAT,C;;mCACO,KAAKR,EAAL,CAAQU,KAAR,CAAc,EAACC,IAAIA,GAAL,EAAd,EAAwBC,IAAxB,E;;;AAAZ4B,+B;;AACL;AACC,iCAAKM,MAAL,CAAY;AACRjC,sCAAM2B;AADE,6BAAZ;8DAGO,KAAKnC,OAAL,E;;;;;;;;;;;;;;;;;AAIf;;;;;;qBAIM0C,S;;;;;;;iCACC,KAAKH,MAAL,CAAY,MAAZ,C;;;;;AACE/B,gC,GAAO,KAAKgC,IAAL,E;;AACRhC,iCAAKmC,MAAL,GAAc,CAAd;;mCACgB,KAAKhD,EAAL,CAAQiD,GAAR,CAAYpC,IAAZ,C;;;AAAZoC,+B;;AACJR,kCAAMC,KAAN,CAAY,UAAZ,EAAwB,IAAxB,E,CAA8B;8DACvB,KAAKP,IAAL,CAAUc,GAAV,C;;;8DAEJ,KAAK5C,OAAL,E;;;;;;;;;;;;;;;;;AAIX;;;;;;qBAIQ6C,Y;;;;;;;AAEEvC,8B,GAAK,KAAKkC,IAAL,CAAU,IAAV,C;AACT;;;mCACgB,KAAK7C,EAAL,CAAQU,KAAR,CAAc,EAACC,IAAIA,EAAL,EAAd,EAAwBwC,MAAxB,E;;;AAAZX,+B;;AACNC,kCAAMC,KAAN,CAAY,UAAZ,EAAwB,IAAxB,E,CAA8B;8DACrB,KAAKP,IAAL,CAAUK,GAAV,C;;;;;;;;;;;;;;;;;AAGb;;;;;;qBAIMY,a;;;;;;;;mCACe,KAAKC,WAAL,E;;;AAAbC,gC;8DAEG,KAAKnB,IAAL,CAAUmB,IAAV,C;;;;;;;;;;;;;;;;;qBAELC,U;;;;;;;;mCACgB,KAAKtD,KAAL,CAAW,MAAX,EAAmBuD,UAAnB,E;;;AAAdC,iC;;AACJ,iCAAKC,GAAL,CAASD,KAAT",
    "file": "../../../src/admin/controller/menu.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\n\nimport Base from './base.js';\n\nexport default class extends Base {\n    /**\n     * index action\n     * @return {Promise} []\n     */\n    init(http){\n        super.init(http);\n        this.db = this.model('menu');\n        this.tactive = \"setup\"\n    }\n\n    indexAction(){\n        //auto render template file index_index.html\n        this.meta_title='菜单管理';\n        return this.display();\n    }\n\n    /**\n     * getlist\n     */\n    async getlistAction(){\n        let pid = this.get(\"pid\")||0;\n        let draw = this.get(\"draw\");\n        if(pid){\n        let data = await this.db.where({id:pid}).find();\n        }\n        let i = pid;\n        //\n        let breadcrumb = []\n        while (i!=0)\n        {\n            let nav = await this.db.where({id:i}).field(\"id,title,pid\").find();\n            breadcrumb.push(nav);\n            i = nav.pid;\n\n        }\n        let all_menu = await this.db.field('id,title').select();\n        //all_men\n        let obj = {};\n          all_menu.forEach(v=>{\n              obj[v.id]=v.title;\n          })\n\n        let map = {};\n        map.pid = pid;\n        let list = await this.db.where(map).order(\"sort asc ,id asc\").select();\n        //list\n        if(list){\n            list.forEach((v,k)=>{\n                if(v.pid){\n                    v.up_title=obj[v.pid];\n                }else{\n                    v.up_title=\"一级菜单\";\n                }\n                //console.log(this.setup.MEUN_GROUP)\n                v.group=this.setup.MENU_GROUP[v.group];\n            })\n        }\n        let relist = {\n            \"draw\": draw,\n            \"data\": list,\n            \"breadcrumb\":breadcrumb.reverse()\n        }\n        //console.log(data);\n        return this.json(relist);\n\n    }\n    /**\n     * 改变状态\n     * @returns {Promise|*}\n     */\n    async chstaAction(){\n          //let gets = this.get();\n          let map = {};\n        //console.log(gets);\n        if(this.get(\"key\")==1){\n            map.hide = this.get(\"status\");\n        }else{\n            map.is_dev = this.get(\"status\");\n        }\n        map.id = this.get(\"id\");\n        let res = await this.db.update(map);\n        if(res){\n            think.cache(\"adminenu\", null);//清除菜单缓存\n            return this.json(res);\n        }\n    }\n    /**\n     * 编辑菜单\n     * @returns {*}\n     */\n    async editAction() {\n        if (this.isAjax(\"post\")) {\n            let id = this.post(\"id\");\n            let data = await this.db.where({id: id}).update(this.post());\n            think.cache(\"adminenu\", null);//清除菜单缓存\n            return this.json(data);\n        } else {\n            let id = this.get(\"id\");\n            let res = await this.db.where({id: id}).find();\n           // console.log(res);\n            this.assign({\n                data: res\n            })\n            return this.display();\n        }\n    }\n\n    /**\n     * 添加菜单\n     * @returns {*}\n     */\n    async addAction(){\n        if(this.isAjax(\"post\")){\n         let data = this.post();\n            data.status = 1;\n            let add = await this.db.add(data);\n            think.cache(\"adminenu\", null);//清除菜单缓存\n            return this.json(add);\n        }else{\n        return this.display();\n        }\n    }\n\n    /**\n     * 删除菜单\n     * @returns {Promise|*}\n     */\n      async deleteAction(){\n\n          let id = this.post(\"id\");\n          //console.log(id);\n          let res = await this.db.where({id: id}).delete();\n        think.cache(\"adminenu\", null);//清除菜单缓存\n          return this.json(res);\n        }\n\n    /**\n     * 获取上级菜单\n     * @returns {Promise|*}\n     */\n    async getmenuAction(){\n        let menu = await this.returnnodes();\n       // console.log(menu);\n        return this.json(menu);\n    }\n    async aabbAction(){\n        let value = await this.model(\"menu\").getallmenu();\n        this.end(value);\n    }\n}"
    ]
}