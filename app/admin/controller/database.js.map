{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/database.js"
    ],
    "names": [
        "init",
        "http",
        "tactive",
        "indexAction",
        "model",
        "query",
        "list",
        "meta_title",
        "assign",
        "display",
        "optimizeAction",
        "isPost",
        "tables",
        "post",
        "json",
        "fail",
        "repairAction",
        "exportAction",
        "param",
        "split",
        "id",
        "Number",
        "start",
        "think",
        "isEmpty",
        "isArray",
        "paths",
        "RESOURCE_PATH",
        "mkdir",
        "config",
        "lock",
        "path",
        "isFile",
        "writeFileSync",
        "Date",
        "isWritable",
        "session",
        "file",
        "valueOf",
        "Database",
        "adapter",
        "db",
        "create",
        "tab",
        "isGet",
        "isNumber",
        "table",
        "backup_file",
        "backup_config",
        "backup",
        "unlinkSync",
        "rate",
        "Math",
        "floor",
        "importsAction",
        "geFileList",
        "filesList",
        "readFile",
        "files",
        "readdirSync",
        "forEach",
        "walk",
        "states",
        "statSync",
        "isDirectory",
        "dir",
        "size",
        "v",
        "part",
        "length",
        "ctime",
        "push",
        "active",
        "rmdirAction",
        "get",
        "rmdir",
        "aabbAction",
        "end",
        "targzAction",
        "tar",
        "self",
        "compress",
        "then",
        "success",
        "catch",
        "err",
        "console",
        "log",
        "stack",
        "download",
        "httpedAction",
        "res",
        "statusCode",
        "headers",
        "setEncoding",
        "on",
        "chunk",
        "e",
        "message",
        "unlockAction",
        "name"
    ],
    "mappings": "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",
    "file": "../../../src/admin/controller/database.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\nimport Base from './base.js';\nimport fs  from 'fs';\nimport path from 'path';\nimport targz from 'tar.gz';\nimport http from 'http';\nexport default class extends Base {\n    /**\n     * index action\n     * @return {Promise} []\n     */\n    init(http) {\n        super.init(http);\n        this.tactive = \"setup\";\n        \n    }\n    /**\n     * 数据库列表\n     * @returns {*}\n     */\n    async indexAction() {\n        //auto render template file index_index.html\n        //let DB = think.adapter('db', this.config.type || 'mysql');\n        //this._db = new DB(this.config);\n        let list = await this.model().query('SHOW TABLE STATUS');\n        // console.log(list)\n        this.meta_title='备份数据库';\n        this.assign(\"list\", list);\n        \n        return this.display();\n    }\n\n    /**\n     * 优化表\n     */\n    async optimizeAction() {\n        let list;\n        \n        if (this.isPost()) {\n            let tables = this.post('tables');\n            if (tables) {\n                list = await this.model().query(\"OPTIMIZE TABLE \" + tables);\n                return this.json(list);\n            } else {\n                return this.fail(88, \"请指定要修复的表！\")\n            }\n        } else {\n            return this.fail(88, \"错误请求\")\n        }\n//TODO 细节优化待续\n    }\n\n    /**\n     * 修复表\n     * @returns {*}\n     */\n    async repairAction() {\n        let list;\n        if (this.isPost()) {\n            let tables = this.post(\"tables\");\n            if (tables) {\n                list = await this.model().query('REPAIR TABLE ' + tables)\n                return this.json(list);\n            } else {\n                return this.fail(88, \"请指定要修复的表！\")\n            }\n\n        } else {\n            return this.fail(88, \"请求错误\")\n        }\n        //TODO 细节优化待续\n    }\n\n    /**\n     * 备份数据库\n     * @param  String  tables 表名\n     * @param  Integer id     表ID\n     * @param  Integer start  起始行数\n     * @author\n     */\n    async exportAction() {\n        let tables = this.param('tables').split(',');\n        let id = Number(this.param('id'))\n        let start = Number(this.param('start'))\n        if (this.isPost() && !think.isEmpty(tables) && think.isArray(tables)) {\n            //console.log(tables)\n            let paths = think.RESOURCE_PATH + \"/backup/\";\n            think.mkdir(paths);\n            //备份配置\n            let config = {\n                'path': paths,\n                'part': 20 * 1024 * 1024,\n                'compress': 1,\n                'level': 9\n            }\n\n            //检查是否有正在执行的任务\n            let lock = config.path + \"backup.lock\";\n            if (think.isFile(lock)) {\n                return this.fail(20, '检测到有一个备份任务正在执行，请稍后再试！');\n            } else {\n                //创建锁文件\n                fs.writeFileSync(lock, new Date())\n            }\n            //检查备份目录是否可写\n            think.isWritable(config.path) || this.fail('备份目录不存在或不可写，请检查后重试！');\n            await this.session('backup_config', config);\n\n            //生成备份文件信息\n            let file = {\n                'name': new Date().valueOf(),\n                'part': 1,\n            };\n            await this.session('backup_file', file);\n\n            //缓存要备份的表\n            await this.session('backup_tables', tables);\n\n            //创建备份文件\n            let Database = think.adapter(\"database\", \"mysql\");\n            let db = new Database(file, config, \"export\");\n            if (false !== db.create()) {\n                let tab = {'id': 0, 'start': 0};\n                return this.json({\n                    'info': '初始化成功！',\n                    'tables': tables,\n                    'tab': tab,\n                    'status': 1\n                })\n            } else {\n                return this.json({\n                    'info': \"初始化失败，备份文件创建失败！\",\n                    'status': 0\n                })\n            }\n        } else if (this.isGet() && think.isNumber(id) && think.isNumber(start)) {\n            let table = await this.session('backup_tables');\n            //备份指定表\n            let backup_file = await this.session('backup_file');\n            //console.log(backup_file);\n            let backup_config = await this.session('backup_config');\n            let Database = think.adapter(\"database\", \"mysql\");\n            let db = new Database(backup_file, backup_config, 'export');\n            start = await db.backup(table[id], start);\n            if (false === start) {\n                return this.fail(\"备份出错！\")\n            } else if (0 === start) {//下一表\n                if (table[++id]) {\n                    let tab = {'id': id, 'start': 0};\n                    return this.json({\n                        'info': '备份完成！',\n                        'tab': tab,\n                        'status': 1\n                    })\n                } else {\n                    let lock = await this.session('backup_config');\n\n                    if (think.isFile(lock.path + 'backup.lock')) {\n                        fs.unlinkSync(lock.path + 'backup.lock')\n                    }\n                    await this.session('backup_tables', null);\n                    await this.session('backup_file', null);\n                    await this.session('backup_config', null);\n                    return this.json({\n                        'info': '备份完成！',\n                        'status': 1\n                    })\n                }\n            } else {\n                let tab = {'id': id, 'start': start[0]};\n                let rate = Math.floor(100 * (start[0] / start[1]));\n                return this.json({\n                    'info': \"正在备份...\" + rate + \"%\",\n                    'tab': tab,\n                    'status': 1\n                })\n            }\n        } else {\n            return this.fail(\"参数错误！\")\n        }\n\n    }\n\n    importsAction() {\n\n        /**\n         * 遍历文件夹，获取所有文件夹里面的文件信息\n         * @param path\n         * @returns {Array}\n         */\n\n        function geFileList(path) {\n            var filesList = [];\n            readFile(path, filesList);\n            return filesList;\n        }\n\n        /**\n         * 遍历读取文件\n         * @param path\n         * @param filesList\n         */\n        function readFile(path, filesList) {\n            let files = fs.readdirSync(path);//需要用到同步读取\n            //console.log(files);\n            files.forEach(walk);\n            function walk(file) {\n                let states = fs.statSync(path + '/' + file);\n                if (states.isDirectory()) {\n                    var dir = {};\n                    dir.dir = file;\n\n                    let files = fs.readdirSync(path + '/' + file);\n                    let size = 0;\n                    files.forEach(v=> {\n                        let states = fs.statSync(path + '/' + file + '/' + v);\n                        size = size + states.size;\n                    })\n                    dir.size = size;\n                    dir.part = files.length;\n                    dir.ctime = states.ctime;\n                    filesList.push(dir);\n\n                }\n            }\n        }\n\n        let paths = think.RESOURCE_PATH + \"/backup/\";\n        let filesList = geFileList(paths)\n        this.assign({\n            \"fileslist\": filesList\n        })\n        this.active = \"admin/database/index\"\n        this.meta_title='还原数据库';\n        this.display();\n    }\n\n    /**\n     *删除备份\n     * @returns {Promise.<void>}\n     */\n    async rmdirAction() {\n        let dir = this.get(\"path\");\n        let paths = think.RESOURCE_PATH + \"/backup/\" + dir;\n        //删除目录\n        await think.rmdir(paths);\n        //删除对应压缩包\n        if (think.isFile(paths + \".tar.gz\")) {\n            fs.unlinkSync(paths + \".tar.gz\");\n        }\n        return this.json({\n            'info': \"删除成功\",\n            'dir': dir,\n            'status': 1\n        })\n    }\n\n    async aabbAction() {\n        let Database = think.adapter(\"database\", \"mysql\");\n        let db = new Database(\"1\", \"2\", \"3\");\n        await db.backup(\"vkj_member\", 0);\n        //let dbs = new Database(\"111\",\"222\",\"333\");\n        //dbs.backup(\"aaa\",\"bbb\");\n        this.end();\n    }\n\n    targzAction() {\n        // Streams\n        if (this.isGet()) {\n            let paths = think.RESOURCE_PATH;\n            let path = \"/backup/\";\n            let dir = paths + path + this.get(\"dir\");\n            let tar = paths + path + this.get(\"dir\") + \".tar.gz\"\n            if (!think.isFile(tar)) {\n                //var read = targz().createReadStream(dir);\n                //var parse = fs.createWriteStream(tar);\n                //read.pipe(parse);\n                let self = this;\n                targz().compress(dir, tar)\n                    .then(function () {\n                        self.success({'name': \"tar\", 'url': self.get(\"dir\")})\n                    })\n                    .catch(function (err) {\n                        console.log('Something is wrong ', err.stack);\n                    });\n\n            } else {\n                this.success({'name': \"download\", 'url': this.get(\"dir\")})\n            }\n        } else if (this.isPost()) {\n            let paths = think.RESOURCE_PATH;\n            let path = \"/backup/\";\n            let tar = paths + path + this.post(\"name\") + \".tar.gz\"\n            this.download(tar);\n        }\n    }\n\n    httpedAction() {\n       \n        http.get(\"http://www.kancloud.cn/tag/JavaScript\", function (res) {\n            console.log('STATUS: ' + res.statusCode);\n            console.log('HEADERS: ' + JSON.stringify(res.headers));\n            res.setEncoding('utf8');\n            res.on('data', function (chunk) {\n                console.log('BODY: ' + chunk);\n            });\n            res.on('end', function () {\n                console.log('No more data in response.')\n            })\n        }).on('error', function (e) {\n            console.log(\"Got error: \" + e.message);\n        });\n    }\n    /**\n  * 解锁\n  */\n    unlockAction(){\n           let paths = think.RESOURCE_PATH + \"/backup/\";\n       let lock = paths + \"backup.lock\";\n       //检查是否有正在执行的任务\n          if (think.isFile(lock)) {\n              fs.unlinkSync(lock)\n              return this.success({name:\"解锁成功!\"});\n          } else {\n              //创建锁文件\n              return this.success({name:\"无需解锁!\"});\n          }\n    }\n}\n"
    ]
}