{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/approval.js"
    ],
    "names": [
        "init",
        "http",
        "db",
        "model",
        "tactive",
        "indexAction",
        "map",
        "think",
        "isEmpty",
        "get",
        "where",
        "page",
        "order",
        "countSelect",
        "list",
        "Pages",
        "adapter",
        "pages",
        "assign",
        "get_model",
        "is_approval",
        "modlist",
        "val",
        "id",
        "count",
        "console",
        "log",
        "meta_title",
        "display",
        "detailsAction",
        "find",
        "details",
        "info",
        "JSON",
        "parse",
        "data",
        "adoptaAction",
        "ids",
        "param",
        "fail",
        "select",
        "datalist",
        "v",
        "get_table_name",
        "table",
        "res",
        "extend",
        "updates",
        "time",
        "uid",
        "ip",
        "url",
        "delete",
        "success",
        "name",
        "refuseAction"
    ],
    "mappings": "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",
    "file": "../../../src/admin/controller/approval.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\n\nimport Base from './base.js';\n\nexport default class extends Base {\n  init(http){\n    super.init(http);\n    this.db = this.model(\"approval\");\n    this.tactive = \"approval\";\n  }\n  /**\n   * index action\n   * @return {Promise} []\n   */\n  async indexAction(){\n    //auto render template file index_index.html\n      let map = {};\n      if(!think.isEmpty(this.get(\"model\"))){\n          map.model = this.get(\"model\");\n      }\n      let list = await this.db.where(map).page(this.get('page'),20).order('time DESC').countSelect();\n      let Pages = think.adapter(\"pages\", \"page\"); //加载名为 dot 的 Template Adapter\n      let pages = new Pages(this.http); //实例化 Adapter\n      let page = pages.pages(list);\n      this.assign('pagerData', page); //分页展示使用\n      this.assign('list', list);\n      let modlist = await this.model(\"model\").get_model(null,null,{is_approval:1});\n      for(let val of modlist){\n          val.count = await this.db.where({model:val.id}).count();\n      }\n      console.log(modlist);\n      this.assign(\"model\",modlist);\n      this.assign(\"count\",await this.db.count())\n      this.meta_title = \"内容审核\";\n    return this.display();\n  }\n\n    /**\n     * 查看详情\n     */\n    async detailsAction(){\n        let id = this.get(\"id\");\n        let details = await this.db.find(id);\n        let info = JSON.parse(details.data);\n        console.log(info);\n        this.assign(\"info\",info)\n        this.meta_title = \"查看详情\";\n        return this.display();\n    }\n\n    /**\n     * 通过审核\n     */\n    async adoptaAction(){\n    let ids = this.param(\"ids\");\n    if(think.isEmpty(ids)){\n        return this.fail(\"参数错误！\");\n    }\n    let datalist = await this.db.where({id:[\"IN\",ids]}).select();\n        console.log(datalist);\n        for(let v of datalist){\n            let table = await this.model(\"model\").get_table_name(v.model,true);\n            let res = null;\n            switch (table.extend){\n                case 0:\n                    console.log(table);\n                     res = await this.model(\"mod/\"+table.table).updates(JSON.parse(v.data),v.time);\n                    if (res) {\n                            //添加操作日志，可根据需求后台设置日志类型。\n                            await this.model(\"action\").log(\"addquestion\", \"question\", res.id, res.data.uid, this.ip(), this.http.url);\n                             //审核成功后删掉审核表中内容\n                            await this.db.where({id:v.id}).delete();\n                            return this.success({name: \"审核成功\"});\n                    } else {\n                        return this.fail(\"操作失败！\");\n                    }\n                    break;\n                case 1:\n                    //todo\n                     res = await this.model(\"document\").updates(JSON.parse(v.data),v.time);\n                    if (res) {\n                        //添加操作日志，可根据需求后台设置日志类型。\n                       // await this.model(\"action\").log(\"addquestion\", \"question\", res.id, res.data.uid, this.ip(), this.http.url);\n                        //审核成功后删掉审核表中内容\n                        await this.db.where({id:v.id}).delete();\n                        return this.success({name: \"审核成功\"});\n                    } else {\n                        return this.fail(\"操作失败！\");\n                    }\n                    break;\n            }\n        }\n    }\n\n    /**\n     * 拒绝审核\n     */\n    async refuseAction(){\n\n        let ids = this.param(\"ids\");\n        if(think.isEmpty(ids)){\n            return this.fail(\"参数错误！\");\n        }\n        let res = await this.db.where({id:[\"IN\",ids]}).delete();\n        if(res){\n            return this.success({name:\"操作成功！\"})\n        }else {\n            return this.fail(\"操作失败！\")\n        }\n    }\n}"
    ]
}