{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/type.js"
    ],
    "names": [
        "init",
        "http",
        "tactive",
        "__before",
        "model",
        "where",
        "classid",
        "select",
        "typeoption",
        "assign",
        "indexAction",
        "type",
        "order",
        "list",
        "documentsorts",
        "cate",
        "val",
        "types",
        "JSON",
        "parse",
        "sortarr",
        "v",
        "push",
        "enable",
        "sortid",
        "think",
        "isEmpty",
        "in_array",
        "typeid",
        "obj",
        "id",
        "title",
        "meta_title",
        "display",
        "typeviewAction",
        "get",
        "find",
        "info",
        "option",
        "optionid",
        "getField",
        "alias",
        "join",
        "table",
        "as",
        "on",
        "field",
        "typevar",
        "active",
        "console",
        "log",
        "name",
        "updatetypevarAction",
        "data",
        "post",
        "delete",
        "del",
        "datas",
        "datarr",
        "isdel",
        "addMany",
        "add",
        "addField",
        "success",
        "topicAction",
        "error",
        "Error",
        "statusAction",
        "typeoptionAction",
        "optionlist",
        "updatetypeoptionAction",
        "update",
        "edittypeAction",
        "isPost",
        "fail",
        "clas",
        "updateAction",
        "table_name",
        "parseConfig",
        "config",
        "prefix",
        "sql",
        "query",
        "istable",
        "execute"
    ],
    "mappings": "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",
    "file": "../../../src/admin/controller/type.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\n\nimport Base from './base.js';\n\nexport default class extends Base {\n  init(http){\n    super.init(http);\n    this.tactive = \"article\"\n  }\n\n  /**\n   * __before action\n   * @private\n     */\n  async __before() {\n   await super.__before();\n   let typeoption = await this.model(\"typeoption\").where({classid:0}).select();\n    this.assign(\"typeoption\",typeoption);\n  }\n  /**\n   * index action\n   * @return {Promise} []\n   */\n async indexAction(){\n    //auto render template file index_index.html\n    let type = this.model(\"type\");\n    let list = await type.order('displayorder ASC,typeid DESC').select();\n    //console.log(list);\n      let cate = await this.model(\"category\").where({documentsorts:['!=',\"\"]}).select();\n      for(let val of cate){\n          let types = JSON.parse(val.documentsorts);\n          let sortarr = []\n          for(let v of types.types){\n              sortarr.push(v.enable)\n          }\n          val.sortid=sortarr;\n      }\n      //console.log(cate);\n      if(!think.isEmpty(cate)){\n      for(let val of list){\n          val.cate=[]\n       for(let v of cate){\n             if(in_array(val.typeid,v.sortid)){\n                 let obj = {}\n                 obj.id = v.id;\n                 obj.title=v.title;\n                 val.cate.push(obj)\n             }\n          }\n      }\n      }\n      //console.log(list);\n      this.assign(\"list\",list);\n    this.meta_title=\"分类管理\"\n    return this.display();\n  }\n    //分类信息设置\n async typeviewAction(){\n     let id = this.get(\"typeid\");\n     let info = await this.model('type').find({where:{typeid:id}});\n     let typeoption = await this.model('typeoption').where({classid:0}).select();\n     let option = await this.model('typeoption').where({classid:['!=',0]}).select();\n     for (let val of option){\n         let sortid = await this.model('typevar').where({optionid:val.optionid}).getField('sortid');\n         val.sortid = sortid;\n     }\n     let typevar = await this.model('typevar').alias(\"a\").join(\n         {\n             table: \"typeoption\",\n             join: \"left\", //join 方式，有 left, right, inner 3 种方式\n             as: \"c\", // 表别名\n             on: [\"optionid\", \"optionid\"] //ON 条件\n         }\n     ).where({'a.sortid':id})\n         .field(\"a.sortid,a.optionid,a.available,a.required,a.unchangeable,a.search,a.displayorder,a.subjectshow,c.title,c.type\")\n         .order(\"a.displayorder ASC\")\n         .select();\n     this.active=\"admin/type/index\"\n     console.log(typevar);\n     this.assign({\n         info:info,\n         typeoption:typeoption,\n         option:option,\n         typevar:typevar\n     })\n     this.meta_title=`${info.name}-分类设置`\n  return this.display();\n }\n    //添加字段\n    async updatetypevarAction(){\n        let data = this.post('data');\n        data = JSON.parse(data);\n        //console.log(data);\n        //return false;\n       let del= await this.model('typevar').delete({\n            where: {sortid: data.id}\n        });\n        let datas = [];\n        for(let v of data.datarr){\n            if(v.isdel !=1){\n                datas.push(v);\n            }\n        }\n        // console.log(datas);\n        // return false;\n        let add= await this.model('typevar').addMany(datas);\n        if(!think.isEmpty(add)){\n            //添加字段\n            this.model(\"type\").addField(data);\n           \n    return this.success({name:\"操作成功\"})\n}\n    }\n  /**\n   * topic action\n   *\n   */\n  topicAction(){\n      this.http.error = new Error('功能开发中,敬请期待...');\n      return think.statusAction(701, this.http);\n    return this.display();\n  }\n\n  /**\n   * type Action\n   */\n  async typeoptionAction(){\n    let optionid = this.get(\"classid\");\n      let option = await this.model('typeoption').find({where:{optionid:optionid}});\n      let optionlist = await this.model('typeoption').where({classid:optionid}).select();\n      console.log(option);\n      this.assign({\n          option:option,\n          optionlist:optionlist\n      })\n      this.meta_title=option.title;\n      this.active=\"admin/type/index\";\n      return this.display();\n  }\n    async updatetypeoptionAction(){\n     let data = this.post(\"data\");\n        data =JSON.parse(data);\n     console.log(data)\n        for(let val of data){\n            //添加\n            if(val.isdel==0 && val.title != 0 && val.optionid ==0){//添加\n                this.model('typeoption').add(val);\n            }else if(val.isdel==0 && val.title != 0 && val.optionid !=0){//更新\n                this.model('typeoption').update(val,{optionid:val.optionid});\n            }else if(val.isdel == 1){\n                this.model('typeoption').delete({\n                    where: {optionid: val.optionid}\n                })\n            }\n        }\n        return this.success({name:\"操作成功\"})\n }\n    //编辑字段\n    async edittypeAction(){\n        if(this.isPost()){\n            let data = this.post();\n            console.log(data);\n            let update = this.model('typeoption').where({optionid:data.optionid}).update(data);\n            if(update){\n                return this.success({name:\"操作成功\"});\n            }else {\n                return this.fail(\"操作失败\");\n            }\n        }else {\n            let id = this.get(\"optionid\");\n            let info = await this.model(\"typeoption\").find({where:{optionid:id}});\n            let clas = await this.model('typeoption').find({where:{optionid:info.classid}});\n            console.log(info);\n            this.assign({\n                info:info,\n                clas:clas\n            })\n            this.active=\"admin/type/index\";\n            this.meta_title=\"编辑\"+info.title;\n            return this.display();\n        }\n\n    }\n  /**\n   * 更新/修改数据\n   */\n async updateAction(){\n   let data = this.post(\"data\");\n      data = JSON.parse(data);\n      //console.log(data);\n      for(let val of data){\n          //添加\n          if(val.isdel==0 && val.name != 0 && val.typeid ==0){//添加\n             this.model('type').add(val);\n          }else if(val.isdel==0 && val.name != 0 && val.typeid !=0){//更新\n              this.model('type').update(val,{typeid:val.typeid});\n          }else if(val.isdel == 1){\n              let table_name = think.parseConfig(true, think.config(\"db\")).prefix + 'type_optionvalue'+val.typeid;\n              let sql =`SHOW TABLES LIKE '${table_name}'`;\n              let istable =  await this.model('mysql',this.config('db')).query(sql);\n              if(!think.isEmpty(istable)){\n                  sql = `DROP TABLE ${table_name}`;\n                 await this.model('mysql', this.config('db')).execute(sql);\n              }\n              await this.model('type').delete({\n                  where: {typeid: val.typeid}\n              })\n          }\n      }\n\n      //todo\n      return this.success({name:\"操作成功\"})\n  }\n}\n"
    ]
}