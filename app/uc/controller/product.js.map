{
    "version": 3,
    "sources": [
        "../../../src/uc/controller/product.js"
    ],
    "names": [
        "__before",
        "model",
        "getset",
        "setup",
        "api",
        "wx_AppID",
        "wx_AppSecret",
        "jssdk",
        "indexAction",
        "display",
        "oauthAction",
        "session",
        "openid",
        "console",
        "log",
        "is_weixin",
        "userAgent",
        "think",
        "isEmpty",
        "cookie",
        "http",
        "url",
        "oauthUrl",
        "wxPubOauth",
        "createOauthUrlForCode",
        "host",
        "redirect",
        "getopenidAction",
        "code",
        "get",
        "getopenid",
        "deferred",
        "defer",
        "getOpenid",
        "err",
        "resolve",
        "promise",
        "getUser",
        "userinfo",
        "subscribe_time",
        "Date",
        "getTime",
        "where",
        "find",
        "wx_user",
        "add",
        "update",
        "filePath",
        "RESOURCE_PATH",
        "uid",
        "mkdir",
        "spiderImage",
        "headimgurl",
        "id",
        "getField",
        "last_login_time",
        "wx_userInfo",
        "nickname",
        "followAction",
        "qrcod",
        "showQRCodeURL",
        "assign",
        "meta_title",
        "checkMobile",
        "controller",
        "action",
        "signinAction",
        "open_id",
        "wx_info",
        "organizingAction",
        "data",
        "post",
        "res",
        "username",
        "fail",
        "ltrim",
        "mobile",
        "email",
        "password",
        "password2",
        "status",
        "reg_time",
        "valueOf",
        "reg_ip",
        "_ip2int",
        "ip",
        "encryptPassword",
        "reg",
        "autoLogin",
        "success",
        "name",
        "logonbindingAction",
        "signin",
        "imgUrl",
        "imgData",
        "setEncoding",
        "on",
        "chunk",
        "writeFileSync",
        "tuokecopyAction",
        "map",
        "docid",
        "mmap",
        "create_time",
        "document",
        "detail",
        "info",
        "addnums",
        "updates",
        "doc",
        "islogin",
        "docId",
        "position",
        "cname",
        "mytuokeid",
        "category_id",
        "enrollAction",
        "phone",
        "tuokeAction",
        "uurl",
        "aa",
        "getSignPackage",
        "signPackage",
        "error",
        "str",
        "content",
        "img",
        "image_view",
        "category",
        "cate",
        "extend",
        "title",
        "keywords",
        "keyname",
        "description",
        "split",
        "increment",
        "temp",
        "get_model",
        "model_id",
        "pid",
        "pinfo",
        "i",
        "nav",
        "topid",
        "order",
        "lastinfo",
        "select",
        "plist",
        "field",
        "ptree_",
        "ptree",
        "get_children",
        "type",
        "template",
        "p_id",
        "get_table_name",
        "table",
        "p_info",
        "get_cover2",
        "fmurl",
        "QINIU_DOMAIN_NAME",
        "twourl",
        "undefined",
        "template_m_detail",
        "oid"
    ],
    "mappings": "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",
    "file": "../../../src/uc/controller/product.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n\n'use strict';\n\nimport Base from './base.js';\nimport pingpp from 'pingpp';\nimport http from 'http';\nimport fs from 'fs';\nimport API from 'wechat-api';\nimport JSSDK from './jssdk.js';\nexport default class extends Base {\n    async __before() {\n            //网站配置\n            this.setup = await this.model(\"setup\").getset();\n            this.api = new API(this.setup.wx_AppID, this.setup.wx_AppSecret);\n            this.jssdk = JSSDK; //new JSSDK(this.setup.wx_AppID, this.setup.wx_AppSecret);\n        }\n        /**\n         * index action\n         * @return {Promise} []\n         */\n    indexAction() {\n        //auto render template file index_index.html\n        return this.display();\n    }\n    async oauthAction() {\n            //判断是否是微信浏览器\n            //微信公众账号内自动登陆\n            let openid = await this.session(\"wx_openid\");\n            //openid =null;// await this.session(\"wx_openid\",null);\n\t\t\tconsole.log(\"oauthAction--------\"+openid);\n            if (is_weixin(this.userAgent()) && (think.isEmpty(openid)||typeof openid == 'undefined')) {\n                // 先把url暂存起来\n                this.cookie(\"bieber_wx_url\", this.http.url);\n                var oauthUrl = pingpp.wxPubOauth.createOauthUrlForCode(this.setup.wx_AppID, `http://${this.http.host}/uc/weixin/getopenid?showwxpaytitle=1`,true);\n                console.log(\"oauthAction-----------\" + oauthUrl)\n                this.redirect(oauthUrl);\n            }\n\n        }\n        //用微信客户端获取getopenid\n    async getopenidAction() {\n        //获取用户openid\n        let code = this.get(\"code\");\n        console.log(code);\n        //获取openid\n        let getopenid = () => {\n            let deferred = think.defer();\n            pingpp.wxPubOauth.getOpenid(this.setup.wx_AppID, this.setup.wx_AppSecret, code, function(err, openid) {\n                //console.log(openid);\n                deferred.resolve(openid);\n                // ...\n                // pass openid to extra['open_id'] and create a charge\n                // ...\n            });\n            return deferred.promise;\n        };\n        let openid = await getopenid();\n        //9think.log(think.isEmpty(openid));\n        let userinfo = await getUser(this.api, openid);\n        console.log(\"userinfo-------------\"+JSON.stringify(userinfo));\n        //如果没有关注先跳到关注页面\n        //if (userinfo.subscribe == 0) {\n        //    console.log(1111111111111)\n        //    this.redirect('/uc/weixin/follow');\n        //    return false;\n        //};\n        //userinfo.subscribe_time = userinfo.subscribe_time * 1000;\n\t\tuserinfo.subscribe_time = new Date().getTime();\n        let wx_user = await this.model(\"wx_user\").where({ openid: openid }).find();\n\n        //存储Openid\n        await this.session('wx_openid', openid);\n        if (think.isEmpty(wx_user)) {\n            await this.model(\"wx_user\").add(userinfo);\n            //this.redirect(\"/uc/weixin/signin\");\n        } else {\n            await this.model(\"wx_user\").where({ openid: openid }).update(userinfo);\n\n            //检查微信号是否跟网站会员绑定\n            //if (think.isEmpty(wx_user.uid)) {\n                //没绑定跳转绑定页面\n            //    this.redirect(\"/uc/weixin/signin\");\n\n            //} else \n\t\t\t\t{\n                //更新微信头像\n                let filePath = think.RESOURCE_PATH + '/upload/avatar/' + wx_user.uid;\n                think.mkdir(filePath)\n                await this.spiderImage(userinfo.headimgurl, filePath + '/avatar.png')\n                    //绑定直接登陆\n                let last_login_time = await this.model(\"member\").where({ id: wx_user.uid }).getField(\"last_login_time\", true);\n\n                let wx_userInfo = {\n                    'uid': wx_user.uid,\n                    'username': userinfo.nickname,\n                    'last_login_time': last_login_time,\n                };\n                await this.session('webuser', wx_userInfo);\n                this.redirect(this.cookie(\"bieber_wx_url\"));\n            }\n        }\n\n\n    }\n\n    /**\n     * 没有关注提示关注\n     */\n    async followAction() {\n        //console.log(this.setup)\n        //创建关注二维码\n        //TODO\n        // let titck =await createLimitQRCode(this.api,1);\n        // console.log(titck);\n        let qrcod = this.api.showQRCodeURL(\"gQF_8DwAAAAAAAAAAS5odHRwOi8vd2VpeGluLnFxLmNvbS9xLzAyMXRCbEExc2pmbDAxMDAwMGcwM08AAgTTf1JZAwQAAAAA\");\n        this.assign(\"qrurl\", qrcod);\n        console.log(\"qrurl============\" + qrcod);\n        //think.log(qrcod);\n        // this.end(qrcod);\n        this.meta_title = `扫码关注`;\n        //判断浏览客户端\n        if (checkMobile(this.userAgent())) {\n            return this.display(`mobile/${this.http.controller}/${this.http.action}`);\n        } else {\n            return this.display();\n        }\n    }\n\n    /**\n     * 微信账号与网站会员绑定\n     */\n    async signinAction() {\n            // await this.session('wx_openid',\"o33lBt0Pz3rEXUARWtUUO5GxuUG0\");\n            let open_id;\n            if (think.isEmpty(this.cookie(\"wx_openid\"))) {\n                open_id = await this.session(\"wx_openid\");\n                this.cookie(\"wx_openid\", open_id);\n            } else {\n                open_id = this.cookie(\"wx_openid\");\n            }\n\n            //清除openid，如果中途失败，可重新激活注册流程\n            await this.session('wx_openid', null);\n            let wx_info = await this.model(\"wx_user\").where({ openid: open_id }).find();\n            this.assign(\"wx_info\", wx_info);\n            this.meta_title = \"账号绑定\";\n            this.assign(\"openid\", open_id);\n            this.assign(\"headimgurl\", wx_info.headimgurl)\n                //todo\n            if (checkMobile(this.userAgent())) {\n                return this.display(`mobile/${this.http.controller}/${this.http.action}`);\n            } else {\n                return this.display();\n            }\n            // this.end(\"网站会员绑定页面\")\n        }\n        /**完善资料绑定 */\n    async organizingAction() {\n            let data = this.post();\n            //验证\n            let res;\n            if (think.isEmpty(data.username)) {\n                return this.fail(\"用户昵称不能为空！\");\n            } else {\n                res = await this.model(\"member\").where({ username: ltrim(data.username) }).find();\n                if (!think.isEmpty(res)) {\n                    return this.fail(\"用户昵称已存在，请重新填写！\")\n                }\n            }\n            if (think.isEmpty(data.mobile)) {\n                return this.fail(\"手机号码不能为空！\")\n            } else {\n                res = await this.model(\"member\").where({ mobile: data.mobile }).find();\n                if (!think.isEmpty(res)) {\n                    return this.fail(\"手机号码已存在，请重新填写！\")\n                }\n            }\n            if (think.isEmpty(data.email)) {\n                return this.fail(\"电子邮箱不能为空！\")\n            } else {\n                res = await this.model(\"member\").where({ email: data.email }).find();\n                if (!think.isEmpty(res)) {\n                    return this.fail(\"电子邮箱已存在，请重新填写！\")\n                }\n            }\n            if (think.isEmpty(data.password) && think.isEmpty(data.password2)) {\n                return this.fail(\"密码不能为空！\")\n            } else {\n\n                if (data.password != data.password2) {\n                    return this.fail(\"两次输入的密码不一致，请重新填写！\")\n                }\n            }\n            data.status = 1;\n            data.reg_time = new Date().valueOf();\n            data.reg_ip = _ip2int(this.ip());\n            data.password = encryptPassword(data.password);\n            let reg = await this.model(\"member\").add(data);\n\n            if (!think.isEmpty(reg)) {\n                //用户副表\n                await this.model(\"wx_user\").where({ openid: data.openid }).update({ uid: reg });\n                //更新微信头像\n                let filePath = think.RESOURCE_PATH + '/upload/avatar/' + reg;\n                think.mkdir(filePath)\n                await this.spiderImage(data.headimgurl, filePath + '/avatar.png')\n            }\n            console.log(data);\n            await this.model(\"member\").autoLogin({ id: reg }, this.ip()); //更新用户登录信息，自动登陆\n            let wx_userInfo = {\n                'uid': reg,\n                'username': data.username,\n                'last_login_time': data.reg_time,\n            };\n            await this.session('webuser', wx_userInfo);\n            //成功后储存opid,防止无限登陆\n            await this.session('wx_openid', data.openid);\n            this.cookie('wx_openid', null);\n            return this.success({ name: \"绑定成功\", url: \"/uc/index\" });\n\n\n        }\n        /**登录绑定 */\n    async logonbindingAction() {\n            let data = this.post();\n            //console.log(data);\n            let username = this.post('username');\n            let password = this.post('password');\n            password = encryptPassword(password);\n            console.log(data);\n\n            let res = await this.model(\"member\").signin(username, password, this.ip(), 5, 0);\n            if (0 < res.uid) {\n                //记录用户登录行为\n                // await this.model(\"action\",).log(\"user_login\", \"member\", res.uid, res.uid, this.ip(), this.http.url);\n                //console.log(11111111111111);\n                let wx_info = await this.model(\"wx_user\").where({ openid: data.openid }).find();\n                await this.model(\"wx_user\").where({ openid: data.openid }).update({ uid: res.uid });\n                //更新微信头像\n                let filePath = think.RESOURCE_PATH + '/upload/avatar/' + res.uid;\n                think.mkdir(filePath)\n                await this.spiderImage(data.headimgurl, filePath + '/avatar.png')\n                res.username = wx_info.nickname;\n                await this.session('webuser', res);\n                //成功后储存opid,防止无限登陆\n                await this.session('wx_openid', data.openid);\n                this.cookie('wx_openid', null);\n                //TODO 用户密钥\n                return this.success({ name: \"绑定成功\", url: \"/uc/index\" });\n            } else { //登录失败\n                let fail;\n                switch (res) {\n                    case -1:\n                        fail = '用户不存在或被禁用';\n                        break; //系统级别禁用\n                    case -2:\n                        fail = '密码错误';\n                        break;\n                    default:\n                        fail = '未知错误';\n                        break; // 0-接口参数错误（调试阶段使用）\n                }\n                this.fail(fail);\n            }\n        }\n        /**\n         * 更新微信头像\n         */\n    spiderImage(imgUrl, filePath) {\n            let deferred = think.defer();\n            http.get(imgUrl, function(res) {\n                var imgData = \"\";\n                res.setEncoding(\"binary\");\n                res.on(\"data\", function(chunk) {\n                    imgData += chunk;\n                });\n\n                res.on(\"end\", function() {\n                    fs.writeFileSync(filePath, imgData, \"binary\");\n                    deferred.resolve(filePath);\n                });\n            });\n            return deferred.promise;\n        }\n        async tuokecopyAction() {\n\n        // data: {\n        //         \"docid\": did,\n        //         \"name\": user_name.val(),\n        //         \"phone\": user_phone.val(),\n        //         // csrfmiddlewaretoken: $.cookie(\"csrftoken\")\n        //     }\n        if (is_weixin(this.userAgent())) {\n            let data = this.post();\n            console.log(data);\n            let openid = await this.session(\"wx_openid\");\n            \n            //已是微信用户，\n\n            let map = {\n                openid: openid,\n                docid: data.docid\n            };\n            let res = await this.model(\"doc_wxuser\").where(map).find();\n            console.log(res);\n            if (!think.isEmpty(res)) {\n                console.log(\"have---------\" + res);\n                return this.success({ status: 0, name: \"用户已经报名!\" });\n                //已经报名\n            } else {\n\n                let mmap = {\n                    openid: openid,\n                    docid: data.docid,\n                    status: 1,\n                    create_time: new Date().valueOf()\n                }\n                console.log(mmap);\n                res = await this.model(\"doc_wxuser\").add(mmap);\n                //报名人数+1\n                let document = this.model('document');\n                let info = await document.detail(data.docid);\n                info.addnums++;\n                console.log(\"info.nums\" + info.addnums);\n                //报名人数+1\n                let doc = await document.updates(info);\n\n                return this.success({ status: 0, name: \"用户报名成功!\" });\n            }\n        } else {\n            //PC端\n            let data = this.post();\n            console.log(data);\n            let islogin = await this.islogin();\n            if (!islogin) {\n                //未登录，提示登录\n                return this.success({ status: -1, name: \"请先登录，谢谢参与\" });\n            }\n            console.log(\"islogn----------\" + islogin);\n            let document = this.model('document');\n            let info = await document.detail(data.docId);\n            // console.log(\"tuoke info------\"+JSON.stringify(info));\n            if(info.uid==islogin){\n                return this.success({ status: 0, name: \"您已经拥有该拓客模板!\" });\n            }\n            info.uid=islogin;\n            info.id=null;\n            info.create_time=null;\n            info.position=0;\n            let cname=data.cname;\n            let mytuokeid=await this.model('category').where({name:cname}).find();\n            console.log(\"mytuokeid.id===================\"+mytuokeid.id);\n            info.category_id=mytuokeid.id;//我的拓客模板\n            // console.log(\"tuoke info------\"+JSON.stringify(info));\n            let res = await document.updates(info);\n            // // let openid = await this.model(\"wx_user\").where({ uid: islogin }).getField('openid');\n            // // console.log(\"openid----------\" + openid);\n            // // if (think.isEmpty(openid)) {\n            // //     return this.success({ status: -1, name: \"请先关注微信公众号，谢谢参与\" });\n            // // }\n            // let mmap = {\n            //     openid: openid[0],\n            //     docid: data.docid,\n            //     status: 1,\n            //     create_time: new Date().valueOf()\n            // }\n            // console.log(mmap);\n            // await this.model(\"doc_wxuser\").add(mmap);\n            // await this.model(\"wx_user\").where({ openid: openid[0] }).update({ phone: data.phone });\n\n            // let document = this.model('document');\n            // let info = await document.detail(data.docid);\n            // info.addnums++;\n            // console.log(\"info.nums\" + info.addnums);\n            // //报名人数+1\n            // let doc = await document.updates(info);\n            // console.log(\"info.nums doc -----\"+doc);\n            return this.success({ status: 0, name: \"拓客模板拷贝成功!\" });\n        }\n        return this.success({ status: -1, name: \"用户报名失败!\" });\n    }\n        //报名\n    async enrollAction() {\n\n        // data: {\n        //         \"docid\": did,\n        //         \"name\": user_name.val(),\n        //         \"phone\": user_phone.val(),\n        //         // csrfmiddlewaretoken: $.cookie(\"csrftoken\")\n        //     }\n        if (is_weixin(this.userAgent())) {\n            let data = this.post();\n            console.log(data);\n            let openid = await this.session(\"wx_openid\");\n            \n            //已是微信用户，\n\n            let map = {\n                openid: openid,\n                docid: data.docid\n            };\n            let res = await this.model(\"doc_wxuser\").where(map).find();\n            console.log(res);\n            if (!think.isEmpty(res)) {\n                console.log(\"have---------\" + res);\n                return this.success({ status: 0, name: \"用户已经报名!\" });\n                //已经报名\n            } else {\n\n                let mmap = {\n                    openid: openid,\n                    docid: data.docid,\n                    status: 1,\n                    create_time: new Date().valueOf()\n                }\n                console.log(mmap);\n                res = await this.model(\"doc_wxuser\").add(mmap);\n                //报名人数+1\n                let document = this.model('document');\n                let info = await document.detail(data.docid);\n                info.addnums++;\n                console.log(\"info.nums\" + info.addnums);\n                //报名人数+1\n                let doc = await document.updates(info);\n\n                return this.success({ status: 0, name: \"用户报名成功!\" });\n            }\n        } else {\n            //PC端\n            let data = this.post();\n            console.log(data);\n            let islogin = await this.islogin();\n            if (!islogin) {\n                //未登录，提示登录\n                return this.success({ status: -1, name: \"请先登录，谢谢参与\" });\n            }\n            console.log(\"islogn----------\" + islogin);\n            let openid = await this.model(\"wx_user\").where({ uid: islogin }).getField('openid');\n            console.log(\"openid----------\" + openid);\n            if (think.isEmpty(openid)) {\n                return this.success({ status: -1, name: \"请先关注微信公众号，谢谢参与\" });\n            }\n            let mmap = {\n                openid: openid[0],\n                docid: data.docid,\n                status: 1,\n                create_time: new Date().valueOf()\n            }\n            console.log(mmap);\n            await this.model(\"doc_wxuser\").add(mmap);\n            await this.model(\"wx_user\").where({ openid: openid[0] }).update({ phone: data.phone });\n\n            let document = this.model('document');\n            let info = await document.detail(data.docid);\n            info.addnums++;\n            console.log(\"info.nums\" + info.addnums);\n            //报名人数+1\n            let doc = await document.updates(info);\n            // console.log(\"info.nums doc -----\"+doc);\n            return this.success({ status: 0, name: \"用户报名成功!\" });\n        }\n        return this.success({ status: -1, name: \"用户报名失败!\" });\n    }\n\n    async tuokeAction() {\n        let uurl = \"http://www.gzxinbibo.com\" + this.http.url;\n        console.log(\"url-------------\" + uurl);\n        if (!is_weixin(this.userAgent())) {\n            this.redirect(\"/uc/public/login\");\n        }\n        if (is_weixin(this.userAgent())) {\n            await this.oauthAction();\n            let aa = function(jssdk, url) {\n                let deferred = think.defer();\n                jssdk.getSignPackage(url, (err, signPackage) => {\n                    if (!think.isEmpty(signPackage)) {\n                        deferred.resolve(signPackage);\n                    } else {\n                        console.error(err);\n                    }\n                });\n                return deferred.promise;\n            }\n            let signPackage = await aa(this.jssdk, uurl);\n            console.log(signPackage);\n            this.assign(\"signPackage\", signPackage);\n        }\n\n        let id = this.get(\"id\");\n        console.log(\"id==========\"+id);\n        let document = this.model('document');\n        let info = await document.detail(id);\n        this.assign(\"docid\", id);\n        let islogin = await this.islogin();\n        \n        let str = info.content;\n        if (!think.isEmpty(str)) {\n            let img;\n            if (checkMobile(this.userAgent())) {\n                //手机端\n                img = image_view(str, 640, 4);\n            } else {\n                //pc端\n\n                img = image_view(str, 847, 0);\n            }\n            info.content = img\n        }\n        //console.log(info);\n        //分类信息\n        let cate = await this.category(info.category_id);\n        cate = think.extend({}, cate);\n        //seo\n        this.meta_title = info.title; //标题\n        this.keywords = info.keyname ? info.keyname : ''; //seo关键词\n        this.description = info.description ? info.description : \"\"; //seo描述\n        //keywords\n        let keywords;\n        if (!think.isEmpty(info.keyname)) {\n            keywords = (info.keyname).split(\",\");\n        }\n        this.assign(\"keywords\", keywords);\n        //访问统计\n        await document.where({ id: info.id }).increment('view');\n        //外链\n        // if (!think.isEmpty(info.link_id) && info.link_id != 0) {\n        //     return this.redirect(info.link_id);\n        // }\n        // 获取面包屑信息\n        // let breadcrumb = await this.model('category').get_parent_category(cate.id, true);\n        // this.assign('breadcrumb', breadcrumb);\n\n        // 上一篇\n        // let previous = await document.where({ id: ['>', info.id], category_id: info.category_id, 'pid': 0, 'status': 1 }).order('id DESC').find();\n        // this.assign('previous', previous)\n        //     // 下一篇\n        // let next = await document.where({ id: ['<', info.id], category_id: info.category_id, 'pid': 0, 'status': 1 }).order('id DESC').find();\n        // this.assign('next', next)\n\n        //获取模板\n        let temp;\n        let model = await this.model('model').get_model(info.model_id, 'name');\n        console.log(\"model-------\"+JSON.stringify( model));\n        // 详情模版 TODO\n        // 手机版模版\n\n        this.assign('category', cate);\n       // console.log(info);\n        // 目录/文章/段落\n        let pid;\n        let pinfo;\n        if (info.pid != 0) {\n            let i = info.id;\n            //\n            while (i != 0) {\n                let nav = await document.where({ id: i }).find();\n                if (nav.pid == 0) {\n                    pinfo = nav;\n                    pid = nav.id;\n                }\n                i = nav.pid;\n            }\n\n        } else {\n            pinfo = info;\n            pid = info.id;\n        }\n        // 获取最后更新时间\n        let lastinfo = await document.where({ topid: pid }).order(\"update_time DESC\").find();\n        //console.log(lasttime);\n        this.assign(\"lastinfo\", lastinfo);\n        console.log(pid);\n        let plist = await document.where({ pid: pid }).order(\"level DESC\").select();\n        this.assign(\"pinfo\", pinfo);\n        this.assign(\"plist\", plist);\n        //console.log(plist);\n        if (plist[0]) {\n            //let lastlevel = plist[0].level;\n            //console.log(lastlevel);\n            this.assign(\"lastlevel\", plist[0]);\n        }\n        console.log(plist);\n        // 文档无限级目录\n        let ptree_ = await document.where({ topid: pid }).field('id,title,pid,name,level as sort').select();\n        let ptree = get_children(ptree_, pid, 1);\n        //console.log(ptree);\n        this.assign('topid', pid);\n        this.assign(\"ptree\", ptree);\n\n        // 如果是目录并且模板为空,模块为视频时，目录id，显示最后更新的主题\n        if (info.type == 1 && (think.isEmpty(info.template) || info.template == 0) && info.model_id == 6) {\n            if (plist[0]) {\n                console.log(111111);\n                let model_id = plist[0].model_id;\n                let p_id = plist[0].id;\n                let table = await this.model(\"model\").get_table_name(model_id);\n                let p_info = await this.model(table).find(p_id);\n                info = think.extend(info, p_info);\n\n            }\n        }\n        info.fmurl = await get_cover2(info.fmurl, this.setup.QINIU_DOMAIN_NAME);\n        // console.log(\"tuoke.  pic---------\" + JSON.stringify(pic));\n        // info.fmurl = 'http://' + this.setup.QINIU_DOMAIN_NAME + '/' + pic.path;\n        info.twourl = await get_cover2(info.twourl, this.setup.QINIU_DOMAIN_NAME);\n        // info.twourl = '//' + this.setup.QINIU_DOMAIN_NAME + '/' + pic.path;\n        // console.log(\"tuokeAction---------\" + JSON.stringify(info));\n        this.assign(\"info\", info);\n        //console.log(\"description-------------\" + info.description);\n        this.assign(\"desc\", info.description);\n        let openid;\n        if (checkMobile(this.userAgent())) {\n            //手机用户\n            openid = await this.session(\"wx_openid\");\n            \n            let map = {\n                openid: openid,\n                docid: id\n            };\n\t\t\t\n            if (typeof openid == 'undefined') {\n                this.assign(\"pay_type\", 0);\n            } else {\n                let res = await this.model(\"doc_wxuser\").where(map).find();\n                console.log(res);\n                //是否已经报名\n                if (res.openid != undefined) {\n                    this.assign(\"pay_type\", 1);\n                } else {\n                    //未报名\n                    this.assign(\"pay_type\", 0);\n                }\n            }\n            //手机模版\n            if (!think.isEmpty(info.template) && info.template != 0) {\n                temp = info.template; //todo 已设置详情模板\n            } else if (!think.isEmpty(cate.template_m_detail)) {\n                temp = cate.template_m_detail; //分类已经设置模板\n            } else {\n                temp = model;\n            }\n\n            //内容分页\n            if (!think.isEmpty(info.content)) {\n                info.content = info.content.split(\"_ueditor_page_break_tag_\");\n            }\n            console.log(\"tuokeAction 手机========\" + `${this.http.controller}/${temp}`);\n            return this.display(`mobile/${this.http.controller}/${temp}`);\n        }\n        if (!islogin) {\n                //未登录，提示登录\n                return this.success({ status: -1, name: \"请先登录，谢谢参与\" });\n        }\n        // PC用户\n        let oid = await this.model(\"wx_user\").where({ uid: islogin }).find();\n        if (!think.isEmpty(oid)) {\n            console.log(\"PC用户--------------\" + oid);\n            openid = oid.openid;\n            let map = {\n                openid: openid,\n                docid: id\n            };\n            console.log(\"PC用户 oid,--------------\" + JSON.stringify(map));\n            let res = await this.model(\"doc_wxuser\").where(map).find();\n            //是否已经报名\n            if (!think.isEmpty(res)) {\n                this.assign(\"pay_type\", 1);\n            } else {\n                //未报名\n                this.assign(\"pay_type\", 0);\n            }\n        } else {\n            //未报名\n            this.assign(\"pay_type\", 0);\n        }\n        // if (!think.isEmpty(info.template) && info.template != 0) {\n        //     temp = info.template; //已设置详情模板\n        // } else if (!think.isEmpty(cate.template_detail)) {\n        //     temp = cate.template_detail; //分类已经设置模板\n        // } else {\n        //     temp = model;\n        // }\n        // console.log(temp);\n        //console.log(info);\n        //内容分页\n        if (!think.isEmpty(info.content)) {\n            info.content = info.content.split(\"_ueditor_page_break_tag_\");\n        }\n\n        // if(model==\"myshop\"){\n        //     return this.display(`${this.http.controller}/myshop`);\n        // }\n        console.log(\"tuokeAction========\" + `${this.http.controller}/${model}`);\n        return this.display(`${this.http.controller}/${model}`);\n\n\n    }\n}\n"
    ]
}