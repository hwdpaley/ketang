{
    "version": 3,
    "sources": [
        "../../../src/uc/controller/user.js"
    ],
    "names": [
        "locale",
        "init",
        "http",
        "indexAction",
        "weblogin",
        "model",
        "join",
        "table",
        "jion",
        "on",
        "find",
        "user",
        "uid",
        "userInfo",
        "assign",
        "where",
        "user_id",
        "pay_status",
        "getField",
        "order",
        "orderTotal",
        "eval",
        "status",
        "count",
        "onOrder",
        "meta_title",
        "checkMobile",
        "userAgent",
        "mtype",
        "get",
        "vuedata",
        "json",
        "active",
        "controller",
        "action",
        "display",
        "orderAction",
        "param",
        "map",
        "think",
        "isEmpty",
        "type",
        "delivery_status",
        "is_del",
        "page",
        "countSelect",
        "data",
        "html",
        "desc",
        "pageNum",
        "url",
        "class",
        "text",
        "next",
        "prev",
        "total",
        "val",
        "payment",
        "channel",
        "id",
        "province",
        "city",
        "county",
        "end_time",
        "date_from",
        "create_time",
        "Number",
        "setup",
        "ORDER_DELAY",
        "order_id",
        "select",
        "goods",
        "numarr",
        "v",
        "prom_goods",
        "JSON",
        "parse",
        "push",
        "goods_nums",
        "extend",
        "nums",
        "nopaid",
        "receipt",
        "isAjax",
        "format",
        "delorderAction",
        "res",
        "update",
        "delete",
        "success",
        "name",
        "fail",
        "confirmreceiptAction",
        "addressAction",
        "province_num",
        "city_num",
        "county_num",
        "accountAction",
        "unpaid",
        "time",
        "amount",
        "formatCurrency",
        "amount_log",
        "rechargeAction",
        "post",
        "order_amount",
        "isNumberString",
        "nowtime",
        "Date",
        "valueOf",
        "oid",
        "order_no",
        "open_id",
        "session",
        "service",
        "pay",
        "pingxx",
        "ip",
        "charges",
        "pingxx_id",
        "add",
        "receiving",
        "getTime",
        "payment_time",
        "doc_type",
        "payment_id",
        "is_weixin",
        "paylist",
        "setingAction",
        "parent_id",
        "updateinfoAction",
        "member",
        "email",
        "mobile",
        "customer",
        "real_name",
        "sex",
        "birthday",
        "phone",
        "addr",
        "city_picke",
        "split",
        "update1",
        "update2",
        "updatepasswordAction",
        "password",
        "encryptPassword",
        "oldpassword",
        "updateavatarAction",
        "file",
        "console",
        "log",
        "filepath",
        "path",
        "uploadPath",
        "RESOURCE_PATH",
        "mkdir",
        "jimp2",
        "deferred",
        "defer",
        "self",
        "read",
        "err",
        "lenna",
        "resize",
        "quality",
        "write",
        "e",
        "r",
        "resolve",
        "promise",
        "avatar_data",
        "jimp",
        "crop",
        "x",
        "y",
        "width",
        "height",
        "end",
        "avatarAction",
        "isFile",
        "pic",
        "readFileSync",
        "priv",
        "cate_id",
        "get_all_category",
        "cate",
        "roleid",
        "cates",
        "parr",
        "pid",
        "in_array",
        "getDocumentList",
        "model_id",
        "position",
        "field",
        "group_id",
        "sortval",
        "sortid",
        "title",
        "update_time",
        "Document",
        "get_sub_category",
        "subcate",
        "category_id",
        "getSchema",
        "tablefields",
        "isArray",
        "array_diff",
        "modelName",
        "alias",
        "as",
        "key",
        "array_search",
        "sort_id",
        "nsobj",
        "optionidarr",
        "valuearr",
        "qarr",
        "vv",
        "fid",
        "list",
        "Pages",
        "adapter",
        "pages",
        "article",
        "get_category",
        "allow_publish",
        "addAction",
        "error",
        "Error",
        "statusAction",
        "groups",
        "parse_config_attr",
        "sort",
        "defaultshow",
        "typevar",
        "optionid",
        "option",
        "rules",
        "parse_type_attr",
        "choices",
        "check_category",
        "get_document_model",
        "info",
        "get_model_attribute",
        "fields",
        "get_type_bycate",
        "type_list",
        "get_parent_category",
        "nav",
        "editAction",
        "document",
        "details",
        "tid",
        "value",
        "tags",
        "updateAction",
        "is_ajax",
        "updates",
        "alipayinweixinAction"
    ],
    "mappings": "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",
    "file": "../../../src/uc/controller/user.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\nimport moment from \"moment\"\nmoment.locale('zh-cn');\nimport Base from './base.js';\nimport pagination from 'think-pagination';\nimport fs from 'fs';\nimport Jimp from \"jimp\";\nexport default class extends Base {\n     init(http) {\n        super.init(http);\n        //let login = await super.islogin()\n        ////是否验证登陆\n        //if(!login){\n        //    return this.fail(\"你木有登录！\")\n        //}\n    }\n\n    /**\n     * index action\n     * 用户中心主页\n     * @return {Promise} []\n     */\n    async indexAction() {\n        //auto render template file index_index.html\n        // if (!this.is_login) {\n        //     return think.statusAction(700, this.http);\n        // }\n        //判断是否登陆\n        await this.weblogin();\n        // this.http.error = new Error('成功信息！');\n        // return think.statusAction(701, this.http);\n        // this.http.error = new Error('错误信息！');\n        // return think.statusAction(702, this.http);\n        //获取用户信息\n        let userInfo = await this.model(\"member\").join({\n            table: \"customer\",\n            jion: \"left\",\n            on: [\"id\", \"user_id\"]\n        }).find(this.user.uid);\n        this.assign(\"userInfo\", userInfo);\n        //订单交易总金额\n        let order = await this.model(\"order\").where({user_id: this.user.uid, pay_status: 1}).getField('order_amount');\n        let orderTotal = eval(order.join(\"+\"));\n        this.assign(\"orderTotal\", orderTotal);\n        //进行中的订单\n        let onOrder = await this.model(\"order\").where({status: 4,user_id: this.user.uid}).count(\"id\");\n        this.assign(\"onOrder\", onOrder);\n        //带评价的商品 TODO\n        this.meta_title = \"用户中心\";\n        //判断浏览客户端\n        if (checkMobile(this.userAgent())) {\n            let mtype = this.get('mtype')\n            if(mtype == 'vue'){\n            //vue\n                let vuedata = {orderTotal:orderTotal,onOrder:onOrder}\n                return this.json(vuedata)\n            }else {//普通模板\n                this.active = this.http.controller+\"/\"+this.http.action;\n                return this.display(`mobile/${this.http.controller}/${this.http.action}`)\n            }\n            \n        } else {\n            return this.display();\n        }\n    }\n\n    //我的订单\n    async orderAction() {\n        //判断是否登陆\n        await this.weblogin();\n        let status = this.param(\"status\") || null;\n        //console.log(status);\n        let map;\n\n        //当前位置\n        if (!think.isEmpty(status)) {\n            this.assign('status', status);\n        }\n        //筛选订单\n\n        if (status == 0) {//未付款的订单\n            map = {\n                type: 0,\n                pay_status: 0,\n                delivery_status: [\"!=\", 1],\n                status: [\"NOTIN\", [4, 6]],\n                is_del: 0,\n                user_id: this.user.uid,\n            }\n        } else if (status == 1) {//代收货的订单\n            //(item.pay_status == 1 or item.status ==3) and item.delivery_status != 1 and item.status != 6 and item.status != 4\n            //item.delivery_status == 1 and item.status != 6 and item.status != 4\n            // map={\n            //     status: [\"NOTIN\", [4, 6]],\n            //     delivery_status: [\"!=\", 1],\n            //     is_del: 0,\n            //     user_id: this.user.uid,\n            //     _complex:{\n            //         pay_status: 1,\n            //         status: 3,\n            //         _logic: \"or\"\n            //     }\n            // }\n            map = {\n                type: 0,\n                status: [\"NOTIN\", [4, 6]],\n                delivery_status: 1,\n                is_del: 0,\n                user_id: this.user.uid,\n            }\n        } else {\n            map = {\n                type: 0,\n                is_del: 0,\n                user_id: this.user.uid,\n            }\n        }\n\n\n        //console.log(map);\n        // this.config(\"db.nums_per_page\",20)\n        let data = await this.model(\"order\").where(map).page(this.param('page')).order(\"create_time DESC\").countSelect();\n        let html = pagination(data, this.http, {\n            desc: false, //show description\n            pageNum: 2,\n            url: '', //page url, when not set, it will auto generated\n            class: 'nomargin', //pagenation extra class\n            text: {\n                next: '下一页',\n                prev: '上一页',\n                total: 'count: ${count} , pages: ${pages}'\n            }\n        });\n        this.assign('pagination', html);\n        for (let val of data.data) {\n            switch (val.payment) {\n                case 100:\n                    val.channel = \"预付款支付\";\n                    break;\n                case 1001:\n                    val.channel = \"货到付款\";\n                    break;\n                default:\n                    val.channel = await this.model(\"pingxx\").where({id: val.payment}).getField(\"title\", true);\n            }\n            val.province = await this.model(\"area\").where({id: val.province}).getField(\"name\", true);\n            val.city = await this.model(\"area\").where({id: val.city}).getField(\"name\", true);\n            val.county = await this.model(\"area\").where({id: val.county}).getField(\"name\", true);\n            //未付款订单倒计时\n            if (val.pay_status == 0) {\n                val.end_time = date_from(val.create_time + (Number(this.setup.ORDER_DELAY) * 60000))\n            }\n            //console.log(this.setup.ORDER_DELAY_BUND)\n            //查出订单里面的商品列表\n            val.goods = await this.model(\"order_goods\").where({order_id: val.id}).select();\n             let numarr=[];\n            for (let v of val.goods) {\n                v.prom_goods = JSON.parse(v.prom_goods);\n                numarr.push(v.goods_nums);\n                v = think.extend(v, v.prom_goods);\n                delete v.prom_goods;\n            }\n            //console.log(val.goods)\n            val.nums = eval(numarr.join(\"+\"));\n        }\n        //未付款统计\n        let nopaid = await this.model(\"order\").where({\n            type: 0,\n            pay_status: 0,\n            delivery_status: [\"!=\", 1],\n            status: [\"NOTIN\", [4, 6]],\n            is_del: 0,\n            user_id: this.user.uid,\n        }).count(\"id\");\n        this.assign(\"nopaid\", nopaid);\n        //未付款统计\n        let receipt = await this.model(\"order\").where({\n            type: 0,\n            status: [\"NOTIN\", [4, 6]],\n            delivery_status: 1,\n            is_del: 0,\n            user_id: this.user.uid,\n        }).count(\"id\");\n        this.assign(\"nopaid\", nopaid);\n        this.assign(\"receipt\", receipt);\n         //console.log(data.data);\n        this.assign(\"count\",data.count);\n        this.assign('list', data.data);\n        this.meta_title = \"我的订单\";\n        //判断浏览客户端\n        if (checkMobile(this.userAgent())) {\n            if(this.isAjax(\"get\")){\n                for(let v of data.data){\n                    v.create_time =moment(v.create_time).format('lll')\n                }\n                return this.json(data);\n            }else {\n                this.active = \"user/index\";\n                return this.display(`mobile/${this.http.controller}/${this.http.action}`)\n            }\n        } else {\n            return this.display();\n        }\n    }\n\n    //删除订单\n    async delorderAction() {\n        //判断是否登陆\n        await this.weblogin();\n\n        let res;\n        let type = this.get(\"type\") || null;\n        if (think.isEmpty(type)) {\n            let map = {\n                id: this.get(\"id\"),\n                user_id: this.user.uid,\n                status: [\"IN\", [4, 6]]\n            }\n            res = await this.model(\"order\").where(map).update({is_del: 1});\n        } else {\n            res = await this.model(\"order\").where({id: this.get(\"id\"), user_id: this.user.uid}).delete()\n        }\n\n        if (res) {\n            return this.success({name: \"删除成功！\"});\n        } else {\n            return this.fail(\"删除失败!\");\n        }\n    }\n\n    //确认收货\n    async confirmreceiptAction() {\n        //判断是否登陆\n        await this.weblogin();\n        let map = {\n            id: this.get(\"id\"),\n            user_id: this.user.uid,\n            delivery_status: 1,\n            status: [\"NOTIN\", [4, 6]]\n        }\n        let res = await this.model(\"order\").where(map).update({status: 4});\n        if (res) {\n            return this.success({name: \"操作成功！\"});\n        } else {\n            return this.fail(\"操作失败!\");\n        }\n    }\n\n    /**\n     * 收货地址管理\n     * @returns {PreventPromise}\n     */\n    async addressAction() {\n        //判断是否登陆\n        await this.weblogin();\n        let data = await this.model(\"address\").where({user_id: this.user.uid}).page(this.get('page')).order(\"is_default DESC,id DESC\").countSelect();\n        let html = pagination(data, this.http, {\n            desc: false, //show description\n            pageNum: 2,\n            url: '', //page url, when not set, it will auto generated\n            class: 'nomargin', //pagenation extra class\n            text: {\n                next: '下一页',\n                prev: '上一页',\n                total: 'count: ${count} , pages: ${pages}'\n            }\n        });\n        //think.log(data);\n        this.assign('pagination', html);\n        if (!think.isEmpty(data.data)) {\n            for (let val of data.data) {\n                val.province_num = val.province;\n                val.city_num = val.city;\n                val.county_num = val.county;\n                val.province = await this.model(\"area\").where({id: val.province}).getField(\"name\", true);\n                val.city = await this.model(\"area\").where({id: val.city}).getField(\"name\", true);\n                val.county = await this.model(\"area\").where({id: val.county}).getField(\"name\", true);\n            }\n        }\n        this.assign(\"list\", data.data);\n        this.meta_title = \"收货地址\";\n        //判断浏览客户端\n        if (checkMobile(this.userAgent())) {\n            this.active = \"user/index\";\n            return this.display(`mobile/${this.http.controller}/${this.http.action}`)\n        } else {\n            return this.display();\n        }\n    }\n\n    /**\n     * 账户金额管理\n     * @returns {PreventPromise}\n     */\n    async accountAction() {\n        //判断是否登陆\n        await this.weblogin();\n        let type = this.get(\"type\") || null;\n        let data;\n        if (think.isEmpty(type)) {\n            data = await this.model(\"balance_log\").where({user_id: this.user.uid}).page(this.param('page')).order(\"time DESC\").countSelect();\n        } else if (type == 1) {\n            data = await this.model(\"balance_log\").where({user_id: 10000}).page(this.param('page')).order(\"time DESC\").countSelect();\n        } else {\n            data = await this.model(\"order\").where({\n                user_id: this.user.uid,\n                type: 1,\n                is_del: 0\n            }).page(this.get('page')).order(\"create_time DESC\").countSelect();\n            for (let val of data.data) {\n\n                val.channel = await this.model(\"pingxx\").where({id: val.payment}).getField(\"title\", true);\n            }\n        }\n\n        let html = pagination(data, this.http, {\n            desc: false, //show description\n            pageNum: 2,\n            url: '', //page url, when not set, it will auto generated\n            class: 'nomargin', //pagenation extra class\n            text: {\n                next: '下一页',\n                prev: '上一页',\n                total: 'count: ${count} , pages: ${pages}'\n            }\n        });\n        //think.log(data);\n        this.assign('pagination', html);\n        this.assign(\"list\", data.data);\n        this.assign(\"type\", type);\n        this.assign(\"count\",data.count)\n        //获取用户信息\n        let userInfo = await this.model(\"member\").join({\n            table: \"customer\",\n            jion: \"left\",\n            on: [\"id\", \"user_id\"]\n        }).find(this.user.uid);\n        this.assign(\"userInfo\", userInfo);\n        //未付款的充值订单统计\n        let unpaid = await this.model(\"order\").where({\n            user_id: this.user.uid,\n            type: 1,\n            is_del: 0,\n            pay_status: 0\n        }).count(\"id\");\n        this.assign(\"unpaid\", unpaid);\n        this.meta_title = \"账户金额管理\";\n        //判断浏览客户端\n        if (checkMobile(this.userAgent())) {\n\n            if(this.isAjax(\"get\")){\n                for(let v of data.data){\n                    v.time =moment(v.create_time).format('YYYY-MM-DD HH:mm:ss');\n                    v.amount = formatCurrency(v.amount);\n                    v.amount_log = formatCurrency(v.amount_log);\n                }\n                return this.json(data);\n            }else {\n                this.active = \"user/index\";\n                return this.display(`mobile/${this.http.controller}/${this.http.action}`)\n            }\n\n        } else {\n            return this.display();\n        }\n    }\n\n    /**\n     * 充值\n     */\n    async rechargeAction() {\n        //判断是否登陆\n        await this.weblogin();\n        if (this.isAjax(\"POST\")) {\n            let data = this.post();\n            if (think.isEmpty(data.order_amount)) {\n                return this.fail(\"请输入金额！\");\n            } else if (!think.isNumberString(data.order_amount)) {\n                return this.fail(\"金额类型错误！\")\n            } else if (think.isEmpty(data.payment)) {\n                return this.fail(\"必须选一种支付方式！\")\n            }\n\n            //用户\n            data.user_id = this.user.uid;\n            //生成订单编号//todo\n            let nowtime = new Date().valueOf();\n            let oid = [\"c\", this.user.uid, nowtime]\n            data.order_no = oid.join(\"\");\n            //支付状态 pay_stayus 0:未付款 ,1:已付款\n            data.pay_status = 0;\n            //订单状态 status 2:等待审核，3:已审核\n            data.status = 2;\n            //发货状态 type 0:普通，1:充值\n            data.type = 1;\n            //订单创建时间 create_time\n            data.create_time = new Date().valueOf();\n            //生成订单\n\n            //判断是否已经绑定pingxx_id,如果已绑定查询pingxx订单直接支付。防止订单重复生成。\n            // console.log(111111111)\n            //获取渠道\n            let channel = await this.model(\"pingxx\").where({id: data.payment}).getField(\"channel\", true);\n            let open_id;\n            if(channel == \"wx_pub\"){\n                open_id=await this.session(\"wx_openid\")\n            }\n            //调用ping++ 服务端\n            let payment = think.service(\"payment\");\n            let pay = new payment(this.http);\n            //传入 channel,order_no,order_amount,this.ip()\n            let charges = await pay.pingxx(channel, data.order_no, data.order_amount, this.ip(),open_id);\n\n\n            //console.log(charges);\n            if (charges) {\n                //把pingxx_id存到订单\n                data.pingxx_id = charges.id;\n                let order_id = await this.model(\"order\").add(data);\n\n                //支付日志\n                let receiving = {\n                    order_id: order_id,\n                    user_id: this.user.uid,\n                    amount: data.order_amount,\n                    create_time: new Date().getTime(),\n                    payment_time: new Date().getTime(),\n                    doc_type: 1,\n                    payment_id: data.payment,\n                    pay_status: 0\n                }\n                await this.model(\"doc_receiving\").add(receiving);\n                return this.success({name: \"支付订单对接成功，正在转跳！\", data: charges})\n            } else {\n                return this.fail(\"调用接口失败！\");\n            }\n            // think.log(data);\n        } else {\n            //ping++ 支付渠道 pc网页\n             //根据不同的客户端调用不同的支付方式\n           let map;\n           if (checkMobile(this.userAgent())) {\n               map={\n                   type:2,\n                   status:1\n               }\n               if(!is_weixin(this.userAgent())){\n                  map.channel =[\"!=\",\"wx_pub\"]\n               }\n              \n           }else {\n               map={\n                    type:1,\n                    status:1\n               }\n              \n           }\n                let paylist = await this.model(\"pingxx\").where(map).order(\"sort ASC\").select();\n                this.assign(\"paylist\", paylist);\n                this.meta_title = \"充值\";\n            if (checkMobile(this.userAgent())) {\n                this.active = \"user/index\";\n                return this.display(`mobile/${this.http.controller}/${this.http.action}`)\n            } else {\n               \n                this.display();\n            }\n\n        }\n\n    }\n\n//   用户设置\n    async setingAction() {\n        //判断是否登陆\n        await this.weblogin();\n        //获取用户信息\n        let userInfo = await this.model(\"member\").join({\n            table: \"customer\",\n            jion: \"left\",\n            on: [\"id\", \"user_id\"]\n        }).find(this.user.uid);\n        //console.log(userInfo);\n        this.assign(\"userInfo\", userInfo);\n        let province, city, county;\n        //获取省份\n        if (checkMobile(this.userAgent())) {\n            province = await this.model('area').where({id: userInfo.province}).getField(\"name\", true);\n            city = await this.model('area').where({id: userInfo.city}).getField(\"name\", true);\n            county = await this.model('area').where({id: userInfo.county}).getField(\"name\", true);\n        } else {\n            province = await this.model('area').where({parent_id: 0}).select();\n            city = await this.model('area').where({parent_id: userInfo.province}).select();\n            county = await this.model('area').where({parent_id: userInfo.city}).select();\n        }\n\n        this.assign(\"province\", province);\n        this.assign(\"city\", city);\n        this.assign(\"county\", county);\n        this.meta_title = \"用户设置\";\n        //判断浏览客户端\n        if (checkMobile(this.userAgent())) {\n            this.active = \"user/index\";\n            return this.display(`mobile/${this.http.controller}/${this.http.action}`)\n        } else {\n            return this.display();\n        }\n    }\n\n    //更新用户信息\n    async updateinfoAction() {\n        //判断是否登陆\n        await this.weblogin();\n        let data = this.post();\n        // think.log(data);\n        let member = {\n            email: data.email,\n            mobile: data.mobile\n        }\n        let customer = {\n            real_name: data.real_name,\n            sex: data.sex,\n            birthday: new Date(data.birthday).getTime(),\n            phone: data.phone,\n            province: data.province,\n            city: data.city,\n            county: data.county,\n            addr: data.addr\n        }\n\n        //判断浏览客户端\n        if (checkMobile(this.userAgent())) {\n            if (!think.isEmpty(data.city_picke)) {\n                let city_picke = data.city_picke.split(\" \");\n                customer.province = await this.model(\"area\").where({\n                    name: [\"like\", `%${city_picke[0]}%`],\n                    parent_id: 0\n                }).getField(\"id\", true);\n                customer.city = await this.model(\"area\").where({\n                    name: [\"like\", `%${city_picke[1]}%`],\n                    parent_id: customer.province\n                }).getField(\"id\", true);\n                customer.county = await this.model(\"area\").where({\n                    name: [\"like\", `%${city_picke[2]}%`],\n                    parent_id: customer.city\n                }).getField(\"id\", true);\n            }\n        }\n\n        let update1 = await this.model(\"member\").where({id: this.user.uid}).update(member);\n        let update2 = await this.model(\"customer\").where({user_id: this.user.uid}).update(customer);\n\n        // think.log(customer);\n        if (update1 && update2) {\n            return this.success({name: \"更新用户资料成功！\"})\n        } else {\n            return this.fail(\"更新失败！\")\n        }\n\n    }\n\n    //修改密码\n    async updatepasswordAction() {\n        //判断是否登陆\n        await this.weblogin();\n        let data = this.post();\n        let password = await this.model(\"member\").where({id: this.user.uid}).getField(\"password\", true);\n        if (password === encryptPassword(data.oldpassword)) {\n            await this.model(\"member\").where({id: this.user.uid}).update({password: encryptPassword(data.password)})\n            return this.success({name: \"密码修改成功，请用新密码重新登陆！\"});\n        } else {\n            return this.fail(\"旧密码不正确，请重新输入。\")\n        }\n\n    }\n\n    //上传头像\n    async updateavatarAction() {\n        //判断是否登陆\n        await this.weblogin();\n        let file = think.extend({}, this.file('file'));\n        console.log(file);\n        //think.log(avatar_data);\n        var filepath = file.path;\n        //文件上传后，需要将文件移动到项目其他地方，否则会在请求结束时删除掉该文件\n        var uploadPath = think.RESOURCE_PATH + '/upload/avatar/' + this.user.uid;\n        think.mkdir(uploadPath);\n        let res;\n        if (checkMobile(this.userAgent())) {\n            let jimp2 = ()=> {\n                console.log(111)\n                let deferred = think.defer();\n                let self = this;\n                Jimp.read(filepath, function (err, lenna) {\n                    if (err) throw err;\n                    lenna.resize(200, 200)            // resize\n                        .quality(60)                 // set JPEG quality\n                        .write(uploadPath + \"/avatar.png\", function (e, r) {\n                            deferred.resolve('/upload/avatar/' + self.user.uid + \"/avatar.png\");\n                        }); // save\n                });\n                return deferred.promise;\n            }\n            res = await jimp2();\n        } else {\n            let post = this.post();\n            let avatar_data = JSON.parse(post.avatar_data);\n            let jimp = () => {\n                let deferred = think.defer();\n                let self = this;\n                Jimp.read(filepath, function (err, lenna) {\n                    //console.log(lenna)\n\n                    if (err) throw err;\n                    lenna.crop(avatar_data.x, avatar_data.y, avatar_data.width, avatar_data.height)            // resize\n                        .quality(60)\n                        .write(uploadPath + \"/avatar.png\", function (e, r) {\n                            deferred.resolve('/upload/avatar/' + self.user.uid + \"/avatar.png\");\n                        }); // save\n\n                });\n                return deferred.promise;\n            }\n            res = await jimp();\n        }\n\n\n        //think.log(res);\n        let data = {\n            \"result\": res,\n            \"errno\": 0,\n            \"message\": \"头像上传成功！\"\n        }\n        return this.end(data);\n    }\n\n    //获取头像\n    async avatarAction() {\n        let uid = this.get(\"uid\")||this.user.uid\n        var uploadPath = think.RESOURCE_PATH + '/upload/avatar/' + uid;\n        let path = think.isFile(uploadPath + \"/\" + \"avatar.png\");\n        this.type(\"image/png\");\n        let pic;\n        if (path) {\n            // this.download(uploadPath + \"/\" + \"/avatar.png\");\n            pic = fs.readFileSync(uploadPath + \"/\" + \"avatar.png\")\n        } else {\n            //this.download(think.RESOURCE_PATH + '/upload/avatar/avatar.jpg')\n            pic = fs.readFileSync(think.RESOURCE_PATH + '/upload/avatar/avatar.jpg')\n        }\n        this.end(pic)\n    }\n\n\n    /**\n     * 显示左边菜单，进行权限控制\n     * @author\n     */\n\n    async priv(cate_id) {\n        let cate = cate_id || await this.model(\"category\",{},'admin').get_all_category();\n        let roleid = await this.model(\"member\").where({id:this.user.uid}).getField('groupid', true);\n        let cates= [];\n        if(cate_id){\n            let priv = await this.model(\"category_priv\").priv(cate_id,roleid,'add');\n            if(priv==1){\n                cates.push(priv)\n            }\n        }else {\n            // let priv = await this.model(\"category_priv\").where({catid:39,is_admin:0,roleid:2,action:'add'}).select();\n            // console.log(priv);\n            //前台投稿分类\n            //TODO 权限控制(管理员)\n            let parr =[];\n            for (let val of cate) {\n                let priv = await this.model(\"category_priv\").priv(val.id,roleid,'add');\n                val.priv=priv\n                if(priv==1 && val.pid !=0){\n                    parr.push(val.pid)\n                }\n            }\n\n            if(think.isEmpty(parr)){\n                cates=cate;\n            }else {\n\n                for(let val of cate){\n                    if(in_array(val.id,parr)){\n                        val.priv=1\n                    }\n                }\n\n                for(let val of cate){\n                    if(val.priv==1){\n                        cates.push(val);\n                    }\n                }\n            }\n        }\n\n\n\n        return think.isEmpty(cates)\n    }\n    /**\n     * 默认文档列表方法\n     * @param integer $cate_id 分类id\n     * @param integer $model_id 模型id\n     * @param integer $position 推荐标志\n     * @param mixed $field 字段列表\n     * @param integer $group_id 分组id\n     */\n    async getDocumentList(cate_id, model_id, position, field, group_id,sortval,sortid) {\n        //console.log(2222222);\n        /* 查询条件初始化 */\n        cate_id = cate_id||0,field=field||true;\n        let map = {};\n        //获取当前用户的信息\n        map.uid = this.user.uid;\n        let status;\n        if (!think.isEmpty(this.get('title'))) {\n            map.title = ['like', '%' + this.param('title') + '%'];\n        }\n        if (!think.isEmpty(this.get('status'))) {\n            map.status = this.param('status');\n            status = map.status;\n        } else {\n            status = null;\n            map.status = ['IN', '0,1,2'];\n        }\n        if (!think.isEmpty(this.get('time-start'))) {\n            map.update_time = {'>=': new Date(this.param('time-start').valueOf())};\n        }\n        if (!think.isEmpty(this.get('time-end'))) {\n            map.update_time = {'<=': 24 * 60 * 60 + new Date(this.param('time-end').valueOf())};\n        }\n        if (!think.isEmpty(this.get('nickname'))) {\n            map.uid = await this.model('member').where({'nickname': this.param('nickname')}).getField('uid');\n        }\n\n        // 构建列表数据\n        let Document = this.model('document');\n\n        if (cate_id) {\n            //获取当前分类的所有子栏目\n            let subcate = await this.model('category', {}, 'admin').get_sub_category(cate_id);\n            // console.log(subcate);\n            subcate.push(cate_id);\n            map.category_id = ['IN', subcate];\n        }\n        // console.log(map);\n        map.pid = this.param('pid') || 0;\n        //console.log(map.pid);\n        if (map.pid != 0) { // 子文档列表忽略分类\n            delete map.category_id;\n        }\n\n        //console.log(array_diff(tablefields,field));\n        if (!think.isEmpty(model_id)) {\n            map.model_id = model_id;\n            await Document.select();\n            let tablefields = Object.keys(await Document.getSchema());\n            //console.log(array_diff(tablefields,field));\n            // console.log(field);\n            //return\n            if (think.isArray(field) && array_diff(tablefields, field)) {\n                let modelName = await this.model('model').where({id: model_id}).getField('name');\n                //console.log('__DOCUMENT_'+modelName[0].toUpperCase()+'__ '+modelName[0]+' ON DOCUMENT.id='+modelName[0]+'.id');\n                // let sql = Document.parseSql(sql)\n                //console.log(`${this.config('db.prefix')}document_${modelName[0]} ${modelName[0]} ON DOCUMENT.id=${modelName[0]}.id`);\n                // return\n                //Document.join('__DOCUMENT_'+modelName[0].toUpperCase()+'__ '+modelName[0]+' ON DOCUMENT.id='+modelName[0]+'.id');\n                //Document.alias('DOCUMENT').join(`${this.config('db.prefix')}document_${modelName[0]} ${modelName[0]} ON DOCUMENT.id=${modelName[0]}.id`);\n                //console.log(3333333333);\n                Document.alias('DOCUMENT').join({\n                    table: `document_${modelName[0]}`,\n                    join: \"inner\",\n                    as: modelName[0],\n                    on: [\"id\", \"id\"]\n                })\n                let key = array_search(field, 'id');\n                //console.log(key)\n                if (false !== key) {\n                    delete field[key];\n                    field[key] = 'DOCUMENT.id';\n                }\n            }\n        }\n        //console.log(field);\n        //console.log(1111111);\n        if (!think.isEmpty(position)) {\n            map[1] = \"position & {$position} = {$position}\";\n        }\n        if (!think.isEmpty(group_id)) {\n            map['group_id'] = group_id;\n        }\n        if(!think.isEmpty(sortid)){\n            map.sort_id = [\"IN\",[sortid,0]];\n        }\n        let nsobj = {};\n        if(!think.isEmpty(sortval)) {\n            sortval = sortval.split(\"|\");\n            nsobj = {}\n            let optionidarr = [];\n            let valuearr = [];\n            for (let v of sortval) {\n                let qarr = v.split(\"_\");\n                nsobj[qarr[0]] = qarr[1];\n                if(qarr[1] !=0){\n                    let vv = qarr[1].split(\">\");\n                    //console.log(vv);\n                    if(vv[0]==\"d\" && !think.isEmpty(vv[1])){\n                        map[\"t.\"+qarr[0]] = [\"<\",vv[1]];\n                    }else if(vv[0]==\"u\" && !think.isEmpty(vv[1])){\n                        map[\"t.\"+qarr[0]] = [\">\",vv[1]];\n                    }else if(vv[0]==\"l\" && !think.isEmpty(vv[1])){\n                        map[\"t.\"+qarr[0]] = [\"like\",`%\"${vv[1]}\"%`];\n                    }else if(!think.isEmpty(vv[0])&&!think.isEmpty(vv[1])){\n                        map[\"t.\"+qarr[0]] = [\"BETWEEN\", Number(vv[0]), Number(vv[1])];\n                    }else {\n                        map[\"t.\"+qarr[0]] = qarr[1];\n                    }\n\n                }\n            }\n            map.fid = cate_id;\n            // where.optionid = [\"IN\",optionidarr];\n            // where['value'] = [\"IN\",valuearr];\n            // let type= await this.model(\"typeoptionvar\").where(where).select();\n            //  console.log(type);\n            // console.log(map);\n        }\n        //console.log(map);\n        let list;\n        if(!think.isEmpty(sortval)){\n            list = await Document.alias('DOCUMENT').join({\n                table: \"type_optionvalue\"+sortid,\n                join: \"left\", // 有 left,right,inner 3 个值\n                as: \"t\",\n                on: [\"id\", \"tid\"]\n\n            }).where(map).order('level DESC,DOCUMENT.id DESC').field(field.join(\",\")).page(this.get(\"page\"),20).countSelect();\n        }else {\n            list = await Document.alias('DOCUMENT').where(map).order('level DESC,DOCUMENT.id DESC').field(field.join(\",\")).page(this.get(\"page\"),20).countSelect();\n        }\n        //let list=await this.model('document').where(map).order('level DESC').field(field.join(\",\")).page(this.get(\"page\")).countSelect();\n        let Pages = think.adapter(\"pages\", \"page\"); //加载名为 dot 的 Template Adapter\n        let pages = new Pages(); //实例化 Adapter\n        let page = pages.pages(list);\n\n\n        if (map['pid'] != 0) {\n            // 获取上级文档\n            let article = await Document.field('id,title,type').find(map['pid']);\n            this.assign('article', article);\n            // console.log(article);\n        }\n\n        //检查该分类是否允许发布内容\n        let allow_publish = await this.model(\"category\",{},'admin').get_category(cate_id, 'allow_publish');\n        this.assign(\"nsobj\",nsobj);\n        this.assign('_total', list.count);//该分类下的文档总数\n        this.assign('pagerData', page); //分页展示使用\n        this.assign('status', status);\n        this.assign('allow', allow_publish);\n        this.assign('pid', map.pid);\n        //console.log(list.data);\n        this.meta_title = '文档列表';\n        return list.data;\n    }\n\n    /**\n     * 新增投稿\n     */\n    async addAction() {\n        await this.weblogin();\n        let cate_id = this.get(\"cate_id\") || 0;\n        //权限控制\n        let priv = await this.priv(cate_id);\n        if(priv){\n            this.http.error = new Error('您所在的会员组,禁止在本栏目投稿！');\n            return think.statusAction(702, this.http);\n        }\n        let model_id = this.get(\"model_id\") || 0;\n        let group_id = this.get(\"group_id\") || '';\n        let sortid = this.get('sortid')||0;\n        think.isEmpty(cate_id) && this.fail(\"参数不能为空\");\n        think.isEmpty(model_id) && this.fail(\"该分类未绑定模型\");\n        // 获取分组定义\n        let groups = await this.model(\"category\",{},'admin').get_category(cate_id, 'groups');\n        if (groups) {\n            groups = parse_config_attr(groups);\n        }\n        // 获取分类信息\n        let sort = await this.model(\"category\",{},'admin').get_category(cate_id, 'documentsorts');\n        if (sort) {\n            sort = JSON.parse(sort);\n            if(sortid==0){\n                sortid=sort.defaultshow;\n            }\n            let typevar = await this.model(\"typevar\",{},'admin').where({sortid:sortid}).select();\n            for (let val of typevar){\n\n                val.option= await this.model(\"typeoption\",{},'admin').where({optionid:val.optionid}).find();\n                if(val.option.type == 'select'){\n                    if(!think.isEmpty(val.option.rules)){\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.rules=parse_type_attr(val.option.rules.choices);\n                        val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n                    }\n\n                }else if (val.option.type ==\"radio\" || val.option.type ==\"checkbox\"){\n                    if(!think.isEmpty(val.option.rules)){\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n                    }\n                }else {\n                    if(!think.isEmpty(val.option.rules)){\n                        val.option.rules = JSON.parse(val.option.rules);\n                    }\n                }\n            }\n            //console.log(typevar);\n            this.assign(\"typevar\",typevar);\n        }\n        //console.log(sort);\n        this.assign(\"sort\",sort);\n        //检查该分类是否允许发布\n        let allow_publish = await this.model(\"category\",{},'admin').check_category(cate_id);\n        //console.log(allow_publish);\n        !allow_publish && this.fail(\"该分类不允许发布内容\");\n\n        //获取当先的模型信息\n        let model = await this.model(\"model\",{},'admin').get_document_model(model_id);\n\n        //处理结果\n        let info = {};\n        info.pid = this.get(\"pid\") ? this.get(\"pid\") : 0;\n        info.model_id = model_id;\n        info.category_id = cate_id;\n        info.group_id = group_id;\n\n        if (info.pid) {\n            let article = await this.model(\"document\",{},'admin').field('id,title,type').find(info.pid);\n            this.assign(\"article\", article);\n        }\n        //获取表单字段排序\n        let fields = await this.model(\"attribute\",{},'admin').get_model_attribute(model.id,true);\n        think.log(fields);\n        //获取当前分类文档的类型\n        let type_list = await this.model(\"category\",{},'admin').get_type_bycate(cate_id);\n        //console.log(type_list);\n        //获取面包屑信息\n        let nav = await this.model('category',{},'admin').get_parent_category(cate_id);\n        //console.log(model);\n        this.assign('groups',groups);\n        this.assign('breadcrumb', nav);\n        this.assign('info', info);\n        this.assign('fields', fields);\n        this.assign('type_list', type_list);\n        this.assign('model', model);\n        this.meta_title = '新增' + model.title;\n        this.active = \"admin/article/index\";\n        return this.display();\n    }\n\n    //编辑文档\n    async editAction() {\n        await this.weblogin();\n        let id = this.get('id') || \"\";\n        let sortid = this.get('sortid')||0;\n        if (think.isEmpty(id)) {\n            this.fail(\"参数不能为空\");\n        }\n        //获取详细数据；\n        let document = this.model(\"document\",{},'admin')\n        let data = await document.details(id);\n        //安全验证\n        if(data.uid != this.user.uid){\n            this.http.error = new Error('只能编辑自己的稿件哦(*^_^*)!');\n            return think.statusAction(702, this.http);\n        }\n        //let model =  this.model(\"model\").getmodel(2);\n        if (data.pid != 0) {\n            //获取上级文档\n            let article = document.field(\"id,title,type\").find(data.pid);\n            this.assign('article', article);\n        }\n        let model = await this.model(\"model\",{},'admin').get_document_model(data.model_id);\n\n        // 获取分组定义\n        let groups = await this.model(\"category\",{},'admin').get_category(data.category_id, 'groups');\n        if (groups) {\n            groups = parse_config_attr(groups);\n        }\n        this.assign('groups',groups);\n        // 获取分类信息\n        let sort = await this.model(\"category\",{},'admin').get_category(data.category_id, 'documentsorts');\n        if (sort) {\n            sort = JSON.parse(sort);\n            if(sortid !=0){\n                data.sort_id=sortid;\n            }else if(data.sort_id==0){\n                data.sort_id=sort.defaultshow;\n            }\n            let typevar = await this.model(\"typevar\").where({sortid:data.sort_id}).select();\n            for (let val of typevar){\n\n                val.option= await this.model(\"typeoption\").where({optionid:val.optionid}).find();\n                if(val.option.type == 'select'){\n                    if(!think.isEmpty(val.option.rules)){\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n                        val.option.value = await this.model(\"typeoptionvar\").where({sortid:data.sort_id,tid:data.id,fid:data.category_id,optionid:val.option.optionid}).getField(\"value\",true)||\"\";\n                    }\n\n                }else if (val.option.type ==\"radio\" || val.option.type ==\"checkbox\"){\n                    if(!think.isEmpty(val.option.rules)){\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.option.rules.choices = parse_config_attr(val.option.rules.choices);\n                        val.option.value = await this.model(\"typeoptionvar\").where({sortid:data.sort_id,tid:data.id,fid:data.category_id,optionid:val.option.optionid}).getField(\"value\",true)||\"\";\n                    }\n                }else {\n                    if(!think.isEmpty(val.option.rules)){\n                        val.option.rules = JSON.parse(val.option.rules);\n                        val.option.value = await this.model(\"typeoptionvar\").where({sortid:data.sort_id,tid:data.id,fid:data.category_id,optionid:val.option.optionid}).getField(\"value\",true)||\"\";\n                    }\n                }\n            }\n            // console.log(typevar);\n            this.assign(\"typevar\",typevar);\n        }\n        //console.log(sort);\n        this.assign(\"sort\",sort);\n        //获取表单字段排序\n        let fields = await this.model(\"attribute\",{},'admin').get_model_attribute(model.id,true);\n        this.assign('fields', fields);\n        //获取当前分类文档的类型\n        let type_list = await this.model(\"category\",{},'admin').get_type_bycate(data.category_id)\n        //获取suk tags\n        let tags = await this.model('tags').where({model_id:data.model_id}).select();\n        this.assign('tags',tags);\n        //获取面包屑信息\n        let nav = await this.model('category',{},'admin').get_parent_category(data.category_id);\n        //console.log(model);\n        this.assign('breadcrumb', nav);\n        //console.log(model);\n        this.assign('type_list', type_list);\n        this.meta_title = '编辑' + model.title;\n        this.active = \"admin/article/index\";\n        this.assign({\n            \"navxs\": true,\n        });\n        //console.log(data);\n        this.assign('data', data);\n        this.assign('model_id', data.model_id);\n        this.assign('model', model);\n        this.display();\n    }\n    /**\n     * 更新或者添加数据\n     */\n    async updateAction() {\n        await this.weblogin();\n        let data = this.post();\n        //绑定发布者id\n        data.uid=this.user.uid;\n        //安全验证\n        if(data.is_ajax != 'true'){\n            return this.fail(\"非法提交！\");\n        }\n        //console.log(data);\n        //return false;\n        let res = await this.model('document',{},'admin').updates(data);\n        // let res ={ data:\n        // { name: '',\n        //     title: '1111',\n        //     description: '',\n        //     type: '2',\n        //     cover_id: '',\n        //     file: '',\n        //     link_id: '0',\n        //     display: '1',\n        //     deadline: '',\n        //     view: '0',\n        //     comment: '0',\n        //     level: '0',\n        //     create_time: 1470888723186,\n        //     template: '',\n        //     bookmark: '0',\n        //     id: null,\n        //     pid: '0',\n        //     model_id: '2',\n        //     category_id: '39',\n        //     uid: 2,\n        //     is_ajax: 'true',\n        //     update_time: 1470888723186,\n        //     status: 1 },\n        //     id: 248 }\n        //console.log(res);\n        if (res) {\n            //行为记录\n            if (!res.data.id) {\n                //await this.model(\"action\").log(\"add_document\", \"document\", res.id, this.user.uid, this.ip(), this.http.url);//添加行为日志\n               return this.success({name: \"添加成功\", url: \"/user/publish/cate_id/\" + res.data.category_id});\n            } else {\n               return this.success({name: \"更新成功\", url: \"/user/publish/cate_id/\" + res.data.category_id});\n            }\n\n        } else {\n           return this.fail(\"操作失败！\");\n        }\n\n\n    }\n\n//alipay_in_weixin 在微信客户端中使用支付宝手机网页支付（alipay_wap）\n    alipayinweixinAction(){\n        return this.display();\n    }\n\n}"
    ]
}