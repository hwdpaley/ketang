{
    "version": 3,
    "sources": [
        "../../../src/uc/controller/changyan.js"
    ],
    "names": [
        "indexAction",
        "display",
        "getuserinfoAction",
        "cy_appkey",
        "setup",
        "CY_APPKEY",
        "ret",
        "is_login",
        "user",
        "uid",
        "username",
        "http",
        "host",
        "cysign",
        "console",
        "log",
        "jsonp",
        "loginAction",
        "get",
        "img_url",
        "decodeURIComponent",
        "sign",
        "profile_url",
        "nickname",
        "cy_user_id",
        "user_id",
        "model",
        "where",
        "find",
        "cy_user",
        "think",
        "isEmpty",
        "add",
        "getField",
        "session",
        "userinfo",
        "autoLogin",
        "id",
        "ip",
        "cy_userInfo",
        "reg_time",
        "binduserAction",
        "data",
        "cookie",
        "referrer",
        "meta_title",
        "assign",
        "organizingAction",
        "post",
        "res",
        "fail",
        "ltrim",
        "mobile",
        "email",
        "password",
        "password2",
        "status",
        "Date",
        "valueOf",
        "reg_ip",
        "_ip2int",
        "encryptPassword",
        "resurl",
        "reg",
        "update",
        "filePath",
        "RESOURCE_PATH",
        "mkdir",
        "isFile",
        "spiderImage",
        "headimgurl",
        "wx_userInfo",
        "success",
        "name",
        "url",
        "logonbindingAction",
        "signin",
        "signinAction",
        "isPost",
        "key",
        "imgUrl",
        "profileUrl",
        "isvUserId",
        "str",
        "createHmac",
        "digest",
        "toString",
        "deferred",
        "defer",
        "imgData",
        "setEncoding",
        "on",
        "chunk",
        "writeFileSync",
        "resolve",
        "promise"
    ],
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEE;;;;qBAIAA,W,0BAAa;AACX;AACA,eAAO,KAAKC,OAAL,EAAP;AAED,K;AACC;;;qBACFC,iB,gCAAmB;AACjB;;AAEA,YAAIC,YAAY,KAAKC,KAAL,CAAWC,SAA3B;AACA,YAAIC,YAAJ;AACA,YAAG,KAAKC,QAAR,EAAiB;AACfD,kBAAI;AACA,4BAAW,CADX,EACc;AACd,wBAAO;AACP,+BAAU,KAAKE,IAAL,CAAUC,GADb;AAEP,gCAAW,KAAKD,IAAL,CAAUE,QAFd;AAGP,+BAAU,OAAK,KAAKC,IAAL,CAAUC,IAAf,GAAoB,uBAApB,GAA4C,KAAKJ,IAAL,CAAUC,GAHzD;AAIP,mCAAc,EAJP;AAKP,4BAAO,KAAKI,MAAL,CAAYV,SAAZ,EAAsB,EAAtB,EAAyB,EAAzB,EAA4B,KAAKK,IAAL,CAAUE,QAAtC,EAA+C,EAA/C,EAAkD,KAAKF,IAAL,CAAUC,GAA5D,CALA;AAFP,aAAJ;AASD,SAVD,MAUM;AACJH,kBAAI;AACF,4BAAW,CADT,CACU;AADV,aAAJ;AAGD;AACDQ,gBAAQC,GAAR,CAAYT,GAAZ;AACD,eAAO,KAAKU,KAAL,CAAWV,GAAX,CAAP;AACA,K;AACC;;;qBACKW,W;;;;;;;AACGd,qC,GAAY,KAAKC,KAAL,CAAWC,S;AACvBa,+B,GAAM,KAAKA,GAAL,E;;AACVA,gCAAIC,OAAJ,GAAYC,mBAAmBF,IAAIC,OAAvB,CAAZ;AACAD,gCAAIG,IAAJ,GAAWD,mBAAmBF,IAAIG,IAAvB,CAAX;AACAH,gCAAII,WAAJ,GAAkBF,mBAAmBF,IAAII,WAAvB,CAAlB;AACAJ,gCAAIK,QAAJ,GAAeH,mBAAmBF,IAAIK,QAAvB,CAAf;;AAEDT,oCAAQC,GAAR,CAAYG,GAAZ;AACAJ,oCAAQC,GAAR,CAAY,KAAKF,MAAL,CAAYV,SAAZ,EAAsBe,IAAIM,UAA1B,EAAsCN,IAAIC,OAA1C,EAAmDD,IAAIK,QAAvD,EAAiEL,IAAII,WAArE,EAAkFJ,IAAIO,OAAtF,CAAZ;;mCACoB,KAAKC,KAAL,CAAW,SAAX,EAAsBC,KAAtB,CAA4B,EAACH,YAAWN,IAAIM,UAAhB,EAA5B,EAAyDI,IAAzD,E;;;AAAhBC,mC;;iCACDC,MAAMC,OAAN,CAAcF,OAAd,C;;;;;;mCACQ,KAAKH,KAAL,CAAW,SAAX,EAAsBM,GAAtB,CAA0Bd,GAA1B,C;;;;mCAEK,KAAKQ,KAAL,CAAW,SAAX,EAAsBC,KAAtB,CAA4B,EAACH,YAAWN,IAAIM,UAAhB,EAA5B,EAAyDS,QAAzD,CAAkE,KAAlE,EAAyE,IAAzE,C;;;AAAZxB,+B;;AACJ;AACA;AACKH,+B;;gCACD,KAAKC,Q;;;;;iCACLuB,MAAMC,OAAN,CAActB,GAAd,C;;;;;AACK;AACAH,kCAAI;AACA,2CAAU,GADV;AAEA,+CAAc,CAFd;AAGA,0CAAS,QAAM,KAAKK,IAAL,CAAUC,IAAhB;AAHT,6BAAJ;;mCAKM,KAAKsB,OAAL,CAAa,UAAb,EAAwBhB,GAAxB,C;;;;;;;;mCAIS,KAAKQ,KAAL,CAAW,QAAX,EAAqBE,IAArB,CAA0BnB,GAA1B,C;;;AAAjB0B,oC;;mCACI,KAAKT,KAAL,CAAW,QAAX,EAAqBU,SAArB,CAA+B,EAACC,IAAGF,SAASE,EAAb,EAA/B,EAAiD,KAAKC,EAAL,EAAjD,C;;;AAA4D;AAC9DC,uC,GAAc;AACd,uCAAMJ,SAASE,EADD;AAEd,4CAAYF,SAASzB,QAFP;AAGd,mDAAmByB,SAASK;AAHd,6B;;mCAKZ,KAAKN,OAAL,CAAa,SAAb,EAAwBK,WAAxB,C;;;AACFjC,kCAAI;AACA,2CAAU6B,SAASE,EADnB;AAEA,+CAAc;AAFd,6BAAJ;;;;;;;AAOL/B,kCAAI;AACA,2CAAU,KAAKE,IAAL,CAAUC,GADpB;AAEA,+CAAc;AAFd,6BAAJ;;;6DAMG,KAAKO,KAAL,CAAWV,GAAX,C;;;;;;;;;;;;;;;;AAEV;;;qBACKmC,c;;;;;;;;mCACe,KAAKP,OAAL,CAAa,UAAb,C;;;AAAbQ,gC;;AACJ,iCAAKC,MAAL,CAAY,aAAZ,EAA0B,KAAKhC,IAAL,CAAUiC,QAAV,EAA1B;AACA,iCAAKC,UAAL,GAAgB,QAAhB;AACC,iCAAKC,MAAL,CAAY,MAAZ,EAAmBJ,IAAnB;8DACO,KAAKzC,OAAL,E;;;;;;;;;;;;;;;;;AAGX;;;qBACM8C,gB;;;;;;;AACEL,gC,GAAO,KAAKM,IAAL,E;AACX;;AACIC,+B;;iCACDnB,MAAMC,OAAN,CAAcW,KAAKhC,QAAnB,C;;;;;8DACQ,KAAKwC,IAAL,CAAU,WAAV,C;;;;mCAEK,KAAKxB,KAAL,CAAW,QAAX,EAAqBC,KAArB,CAA2B,EAACjB,UAASyC,MAAMT,KAAKhC,QAAX,CAAV,EAA3B,EAA4DkB,IAA5D,E;;;AAAZqB,+B;;gCACInB,MAAMC,OAAN,CAAckB,GAAd,C;;;;;8DACO,KAAKC,IAAL,CAAU,gBAAV,C;;;iCAGZpB,MAAMC,OAAN,CAAcW,KAAKU,MAAnB,C;;;;;8DACQ,KAAKF,IAAL,CAAU,WAAV,C;;;;mCAEK,KAAKxB,KAAL,CAAW,QAAX,EAAqBC,KAArB,CAA2B,EAACyB,QAAOV,KAAKU,MAAb,EAA3B,EAAiDxB,IAAjD,E;;;AAAZqB,+B;;gCACInB,MAAMC,OAAN,CAAckB,GAAd,C;;;;;8DACO,KAAKC,IAAL,CAAU,gBAAV,C;;;iCAGZpB,MAAMC,OAAN,CAAcW,KAAKW,KAAnB,C;;;;;8DACQ,KAAKH,IAAL,CAAU,WAAV,C;;;;mCAEK,KAAKxB,KAAL,CAAW,QAAX,EAAqBC,KAArB,CAA2B,EAAC0B,OAAMX,KAAKW,KAAZ,EAA3B,EAA+CzB,IAA/C,E;;;AAAZqB,+B;;gCACInB,MAAMC,OAAN,CAAckB,GAAd,C;;;;;8DACO,KAAKC,IAAL,CAAU,gBAAV,C;;;kCAGZpB,MAAMC,OAAN,CAAcW,KAAKY,QAAnB,KAAgCxB,MAAMC,OAAN,CAAcW,KAAKa,SAAnB,C;;;;;8DACxB,KAAKL,IAAL,CAAU,SAAV,C;;;kCAGJR,KAAKY,QAAL,IAAiBZ,KAAKa,S;;;;;8DACd,KAAKL,IAAL,CAAU,mBAAV,C;;;AAGfR,iCAAKc,MAAL,GAAc,CAAd;AACAd,iCAAKF,QAAL,GAAgB,IAAIiB,IAAJ,GAAWC,OAAX,EAAhB;AACAhB,iCAAKiB,MAAL,GAAcC,QAAQ,KAAKtB,EAAL,EAAR,CAAd;AACAI,iCAAKY,QAAL,GAAgBO,gBAAgBnB,KAAKY,QAArB,CAAhB;AACAxC,oCAAQC,GAAR,CAAY2B,IAAZ;AACIoB,kC,GAAS,KAAKnB,MAAL,CAAY,aAAZ,C;;mCACG,KAAKjB,KAAL,CAAW,QAAX,EAAqBM,GAArB,CAAyBU,IAAzB,C;;;AAAZqB,+B;;gCACAjC,MAAMC,OAAN,CAAcgC,GAAd,C;;;;;;mCAEM,KAAKrC,KAAL,CAAW,SAAX,EAAsBC,KAAtB,CAA4B,EAACH,YAAWkB,KAAKlB,UAAjB,EAA5B,EAA0DwC,MAA1D,CAAiE,EAACvD,KAAIsD,GAAL,EAAjE,C;;;AACN;AACIE,oC,GAASnC,MAAMoC,aAAN,GAAsB,iBAAtB,GAAyCH,G;;AACtDjC,kCAAMqC,KAAN,CAAYF,QAAZ;;gCACInC,MAAMsC,MAAN,CAAaH,WAAS,aAAtB,C;;;;;;mCACM,KAAKI,WAAL,CAAiB3B,KAAK4B,UAAtB,EAAiCL,WAAS,aAA1C,C;;;AAGdnD,oCAAQC,GAAR,CAAY2B,IAAZ;;mCACM,KAAKhB,KAAL,CAAW,QAAX,EAAqBU,SAArB,CAA+B,EAACC,IAAG0B,GAAJ,EAA/B,EAAyC,KAAKzB,EAAL,EAAzC,C;;;AAAoD;AACtDiC,uC,GAAc;AACd,uCAAMR,GADQ;AAEd,4CAAYrB,KAAKhC,QAFH;AAGd,mDAAmBgC,KAAKF;AAHV,6B;;mCAKZ,KAAKN,OAAL,CAAa,SAAb,EAAwBqC,WAAxB,C;;;8DACC,KAAKC,OAAL,CAAa,EAACC,MAAK,MAAN,EAAaC,KAAIZ,MAAjB,EAAb,C;;;;;;;;;;;;;;;;AAEX;;;qBACMa,kB;;;;;;;AACEjC,gC,GAAO,KAAKM,IAAL,E;AACX;;AACItC,oC,GAAW,KAAKsC,IAAL,CAAU,UAAV,C;AACXM,oC,GAAW,KAAKN,IAAL,CAAU,UAAV,C;;AACfM,uCAAWO,gBAAgBP,QAAhB,CAAX;AACAxC,oCAAQC,GAAR,CAAY2B,IAAZ;AACIoB,kC,GAAS,KAAKnB,MAAL,CAAY,aAAZ,C;;mCACG,KAAKjB,KAAL,CAAW,QAAX,EAAqBkD,MAArB,CAA4BlE,QAA5B,EAAsC4C,QAAtC,EAAgD,KAAKhB,EAAL,EAAhD,EAA2D,CAA3D,EAA6D,CAA7D,C;;;AAAZW,+B;;kCACA,IAAIA,IAAIxC,G;;;;;;mCAKF,KAAKiB,KAAL,CAAW,SAAX,EAAsBC,KAAtB,CAA4B,EAACH,YAAWkB,KAAKlB,UAAjB,EAA5B,EAA0DwC,MAA1D,CAAiE,EAACvD,KAAIwC,IAAIxC,GAAT,EAAjE,C;;;AACFwD,oC,GAASnC,MAAMoC,aAAN,GAAsB,iBAAtB,GAAyCjB,IAAIxC,G;;AAC1DqB,kCAAMqC,KAAN,CAAYF,QAAZ;;gCACInC,MAAMsC,MAAN,CAAaH,WAAS,aAAtB,C;;;;;;mCACM,KAAKI,WAAL,CAAiB3B,KAAK4B,UAAtB,EAAkCL,WAAW,aAA7C,C;;;;mCAEL,KAAK/B,OAAL,CAAa,SAAb,EAAwBe,GAAxB,C;;;8DAGE,KAAKuB,OAAL,CAAa,EAACC,MAAK,MAAN,EAAaC,KAAIZ,MAAjB,EAAb,C;;;AACF;AACDZ,gC;2CACID,G;8DACC,CAAC,C,yBAGD,CAAC,C;;;;AAFFC,mCAAO,WAAP;;;;AAGAA,mCAAO,MAAP;;;;AAGAA,mCAAO,MAAP;;;;8DAGD,KAAKA,IAAL,CAAUA,IAAV,C;;;;;;;;;;;;;;;;;qBAIT2B,Y;;;;;;;iCAEC,KAAKC,MAAL,E;;;;;AACKpE,oC,GAAW,KAAKsC,IAAL,CAAU,UAAV,C;AACXM,oC,GAAW,KAAKN,IAAL,CAAU,UAAV,C;;AACfM,uCAAWO,gBAAgBP,QAAhB,CAAX;;mCACgB,KAAK5B,KAAL,CAAW,QAAX,EAAqBkD,MAArB,CAA4BlE,QAA5B,EAAqC4C,QAArC,EAA8C,KAAKhB,EAAL,EAA9C,EAAwD,CAAxD,EAA0D,CAA1D,C;;;AAAZW,+B;;kCACD,IAAEA,IAAIxC,G;;;;;;mCAIC,KAAKyB,OAAL,CAAa,SAAb,EAAwBe,GAAxB,C;;;8DAEC,KAAKuB,OAAL,CAAa,EAACC,MAAK,MAAN,EAAb,C;;;AACH;AACAvB,gC;2CACGD,G;8DACE,CAAC,C,yBACD,CAAC,C,yBACD,CAAC,C;;;;AAFGC,mCAAO,WAAP,C;;;AACAA,mCAAO,MAAP,C;;;AACAA,mCAAO,UAAP,C;;;AACAA,mCAAO,MAAP;;;8DAEN,KAAKA,IAAL,CAAUA,IAAV,C;;;;;;;8DAIA,KAAKjD,OAAL,E;;;;;;;;;;;;;;;;AAInB;AACA;AACA;AACA;AACA;AACF;;;qBACAY,M,mBAAOkE,G,EAAIvD,U,EAAYwD,M,EAAQzD,Q,EAAU0D,U,EAAYC,S,EAAU;AAC3D,YAAIC,YAAJ;AACAA,cAAM,aAAWH,MAAX,GAAkB,YAAlB,GAA+BzD,QAA/B,GAAwC,eAAxC,GAAwD0D,UAAxD,GAAmE,WAAnE,GAA+EC,SAArF;AACA,YAAG,CAACpD,MAAMC,OAAN,CAAcP,UAAd,CAAJ,EAA8B;AAC1B2D,kBAAI,gBAAc3D,UAAd,GAA4B2D,GAAhC;AACH;AACD,eAAO,iBAAOC,UAAP,CAAkB,MAAlB,EAA0BL,GAA1B,EAA+Bf,MAA/B,CAAsCmB,GAAtC,EAA0C,MAA1C,EAAkDE,MAAlD,GAA2DC,QAA3D,CAAoE,QAApE,CAAP;AACH,K;AACC;;;;;qBAGAjB,W,wBAAYW,M,EAAOf,Q,EAAU;AACzB,YAAIsB,WAAWzD,MAAM0D,KAAN,EAAf;AACA,uBAAKtE,GAAL,CAAS8D,MAAT,EAAiB,UAAU/B,GAAV,EAAe;AAC5B,gBAAIwC,UAAU,EAAd;AACAxC,gBAAIyC,WAAJ,CAAgB,QAAhB;AACAzC,gBAAI0C,EAAJ,CAAO,MAAP,EAAe,UAAUC,KAAV,EAAiB;AAC5BH,2BAAWG,KAAX;AACH,aAFD;;AAIA3C,gBAAI0C,EAAJ,CAAO,KAAP,EAAc,YAAY;AACtB,6BAAGE,aAAH,CAAiB5B,QAAjB,EAA2BwB,OAA3B,EAAoC,QAApC;AACAF,yBAASO,OAAT,CAAiB7B,QAAjB;AACH,aAHD;AAIH,SAXD;AAYA,eAAOsB,SAASQ,OAAhB;AACH,K",
    "file": "../../../src/uc/controller/changyan.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\n\nimport Base from './base.js';\nimport crypto from 'crypto';\nimport http from 'http';\nimport fs from 'fs';\nexport default class extends Base {\n  /**\n   * index action\n   * @return {Promise} []\n   */\n  indexAction(){\n    //auto render template file index_index.html\n    return this.display();\n\n  }\n    //获取用户信息接口\n  getuserinfoAction(){\n    //\n\n    let cy_appkey = this.setup.CY_APPKEY;\n    let ret;\n    if(this.is_login){\n      ret={\n          \"is_login\":1, //已登录，返回登录的用户信息\n          \"user\":{\n          \"user_id\":this.user.uid,\n          \"nickname\":this.user.username,\n          \"img_url\":\"//\"+this.http.host+\"/uc/index/avatar/uid/\"+this.user.uid,\n          \"profile_url\":\"\",\n          \"sign\":this.cysign(cy_appkey,\"\",\"\",this.user.username,\"\",this.user.uid)}\n      }\n    }else {\n      ret={\n        \"is_login\":0//为登录\n      }\n    }\n    console.log(ret);\n   return this.jsonp(ret);\n  }\n    //用户登录接口\n   async loginAction(){\n        let cy_appkey = this.setup.CY_APPKEY;\n        let get = this.get();\n        get.img_url=decodeURIComponent(get.img_url);\n        get.sign = decodeURIComponent(get.sign);\n        get.profile_url = decodeURIComponent(get.profile_url);\n        get.nickname = decodeURIComponent(get.nickname);\n\n       console.log(get);\n       console.log(this.cysign(cy_appkey,get.cy_user_id, get.img_url, get.nickname, get.profile_url, get.user_id));\n       let cy_user = await this.model(\"cy_user\").where({cy_user_id:get.cy_user_id}).find();\n       if(think.isEmpty(cy_user)){\n           await  this.model(\"cy_user\").add(get);\n       }\n       let uid = await this.model(\"cy_user\").where({cy_user_id:get.cy_user_id}).getField('uid', true);\n       // console.log(uid);\n       // return false;\n        let ret;\n       if(!this.is_login){\n        if(think.isEmpty(uid)){\n                //没有绑定网站用户去绑定\n                ret={\n                    'user_id':'0',\n                    'reload_page':0,\n                    'js_src':[`//${this.http.host}/static/assets/js/cy.js`]\n                };\n                await this.session(\"changyan\",get);\n        //return this.redirect('/changyan/binduser');\n        }else {\n            //已绑定用户直接登录/uc\n          let userinfo = await this.model(\"member\").find(uid);\n            await this.model(\"member\").autoLogin({id:userinfo.id}, this.ip());//更新用户登录信息，自动登陆\n            let cy_userInfo = {\n                'uid':userinfo.id,\n                'username': userinfo.username,\n                'last_login_time': userinfo.reg_time,\n            };\n            await this.session('webuser', cy_userInfo);\n                ret={\n                    'user_id':userinfo.id,\n                    'reload_page':1\n                }\n\n        }\n       }else {\n           ret={\n               'user_id':this.user.uid,\n               'reload_page':0\n           }\n\n       }\n       return this.jsonp(ret);\n    }\n    //补充资料\n   async binduserAction(){\n       let data = await this.session(\"changyan\")\n       this.cookie('changyanurl',this.http.referrer());\n       this.meta_title=\"畅言用户绑定\";\n        this.assign(\"data\",data);\n        return this.display();\n    }\n\n    /**完善资料绑定 */\n    async organizingAction(){\n        let data = this.post();\n        //验证\n        let res;\n        if(think.isEmpty(data.username)){\n            return this.fail(\"用户昵称不能为空！\");\n        }else{\n            res = await this.model(\"member\").where({username:ltrim(data.username)}).find();\n            if(!think.isEmpty(res)){\n                return this.fail(\"用户昵称已存在，请重新填写！\")\n            }\n        }\n        if(think.isEmpty(data.mobile)){\n            return this.fail(\"手机号码不能为空！\")\n        }else{\n            res = await this.model(\"member\").where({mobile:data.mobile}).find();\n            if(!think.isEmpty(res)){\n                return this.fail(\"手机号码已存在，请重新填写！\")\n            }\n        }\n        if(think.isEmpty(data.email)){\n            return this.fail(\"电子邮箱不能为空！\")\n        }else{\n            res = await this.model(\"member\").where({email:data.email}).find();\n            if(!think.isEmpty(res)){\n                return this.fail(\"电子邮箱已存在，请重新填写！\")\n            }\n        }\n        if(think.isEmpty(data.password) && think.isEmpty(data.password2)){\n            return this.fail(\"密码不能为空！\")\n        }else{\n\n            if(data.password != data.password2){\n                return this.fail(\"两次输入的密码不一致，请重新填写！\")\n            }\n        }\n        data.status = 1;\n        data.reg_time = new Date().valueOf();\n        data.reg_ip = _ip2int(this.ip());\n        data.password = encryptPassword(data.password);\n        console.log(data);\n        let resurl = this.cookie(\"changyanurl\");\n        let reg = await this.model(\"member\").add(data);\n        if(!think.isEmpty(reg)){\n            //添加用户副表\n            await this.model(\"cy_user\").where({cy_user_id:data.cy_user_id}).update({uid:reg});\n            //更新微信头像\n            let filePath=think.RESOURCE_PATH + '/upload/avatar/' +reg;\n            think.mkdir(filePath)\n            if(!think.isFile(filePath+'/avatar.png')){\n                await this.spiderImage(data.headimgurl,filePath+'/avatar.png')\n            }\n        }\n        console.log(data);\n        await this.model(\"member\").autoLogin({id:reg}, this.ip());//更新用户登录信息，自动登陆\n        let wx_userInfo = {\n            'uid':reg,\n            'username': data.username,\n            'last_login_time': data.reg_time,\n        };\n        await this.session('webuser', wx_userInfo);\n        return this.success({name:\"绑定成功\",url:resurl});\n    }\n    /**登录绑定 */\n    async logonbindingAction(){\n        let data = this.post();\n        //console.log(data);\n        let username = this.post('username');\n        let password = this.post('password');\n        password = encryptPassword(password);\n        console.log(data);\n        let resurl = this.cookie(\"changyanurl\");\n        let res = await this.model(\"member\").signin(username, password, this.ip(), 5,0);\n        if (0 < res.uid) {\n            //记录用户登录行为\n            // await this.model(\"action\", {}, \"admin\").log(\"user_login\", \"member\", res.uid, res.uid, this.ip(), this.http.url);\n            //console.log(11111111111111);\n            //更新微信头像\n            await this.model(\"cy_user\").where({cy_user_id:data.cy_user_id}).update({uid:res.uid});\n            let filePath=think.RESOURCE_PATH + '/upload/avatar/' +res.uid;\n            think.mkdir(filePath)\n            if(!think.isFile(filePath+'/avatar.png')) {\n                await this.spiderImage(data.headimgurl, filePath + '/avatar.png')\n            }\n           await this.session('webuser', res);\n           \n            //TODO 用户密钥\n            return this.success({name:\"绑定成功\",url:resurl});\n        } else { //登录失败\n            let fail;\n            switch (res) {\n                case -1:\n                    fail = '用户不存在或被禁用';\n                    break; //系统级别禁用\n                case -2:\n                    fail = '密码错误';\n                    break;\n                default:\n                    fail = '未知错误';\n                    break; // 0-接口参数错误（调试阶段使用）\n            }\n            return this.fail(fail);\n        }\n    }\n\n    async signinAction(){\n        //用户登录\n        if(this.isPost()){\n            let username = this.post('username');\n            let password = this.post('password');\n            password = encryptPassword(password);\n            let res = await this.model(\"member\").signin(username,password,this.ip(),5,0);\n            if(0<res.uid){\n                //记录用户登录行为\n                // await this.model(\"action\").log(\"user_login\",\"member\",res.uid,res.uid,this.ip(),this.http.url);\n                //console.log(11111111111111);\n                await this.session('webuser', res);\n                //TODO 用户密钥\n                return this.success({name:\"绑定成功\"});\n            }else { //登录失败\n                let fail;\n                switch(res) {\n                    case -1: fail = '用户不存在或被禁用'; break; //系统级别禁用\n                    case -2: fail = '密码错误'; break;\n                    case -3: fail = '您无权登陆后台！'; break;\n                    default: fail = '未知错误';  // 0-接口参数错误（调试阶段使用）\n                }\n                return this.fail(fail);\n            }\n\n        }else{\n                return this.display();\n\n        }\n    }\n    // //签名验证\n    // truesign(cy_user_id,img_url,nickname,profile_url,user_id){\n    //    let toSign=`cy_user_id=${cy_user_id}&img_url=${img_url}&nickname=${nickname}&profile_url=${profile_url}&user_id=${user_id}`\n    //     return crypto.createHmac('sha1', user_id).update(toSign,'utf8').digest('hex');\n    // }\n  //生成畅言回调签名\n  cysign(key,cy_user_id, imgUrl, nickname, profileUrl, isvUserId){\n      let str\n      str = \"img_url=\"+imgUrl+\"&nickname=\"+nickname+\"&profile_url=\"+profileUrl+\"&user_id=\"+isvUserId;\n      if(!think.isEmpty(cy_user_id)){\n          str=`cy_user_id=${cy_user_id}`+ str;\n      }\n      return crypto.createHmac('sha1', key).update(str,'utf8').digest().toString('base64');\n  }\n    /**\n     * 更新微信头像\n     */\n    spiderImage(imgUrl,filePath) {\n        let deferred = think.defer();\n        http.get(imgUrl, function (res) {\n            var imgData = \"\";\n            res.setEncoding(\"binary\");\n            res.on(\"data\", function (chunk) {\n                imgData += chunk;\n            });\n\n            res.on(\"end\", function () {\n                fs.writeFileSync(filePath, imgData, \"binary\");\n                deferred.resolve(filePath);\n            });\n        });\n        return deferred.promise;\n    }\n}"
    ]
}