{
    "version": 3,
    "sources": [
        "../../../src/uc/controller/wechatPay.js"
    ],
    "names": [
        "url",
        "require",
        "queryString",
        "crypto",
        "request",
        "xml2jsparseString",
        "parseString",
        "config",
        "WechatPay",
        "userInfo",
        "getUnifiedorderXmlParams",
        "obj",
        "body",
        "wxappid",
        "attach",
        "mch_id",
        "nonce_str",
        "notify_url",
        "openid",
        "out_trade_no",
        "spbill_create_ip",
        "total_fee",
        "trade_type",
        "sign",
        "getPrepayId",
        "that",
        "UnifiedorderParams",
        "appid",
        "createNonceStr",
        "resolve",
        "reject",
        "getSign",
        "post",
        "error",
        "response",
        "prepay_id",
        "statusCode",
        "async",
        "result",
        "xml",
        "signParams",
        "keys",
        "sort",
        "newArgs",
        "forEach",
        "val",
        "key",
        "string",
        "stringify",
        "wxpaykey",
        "createHash",
        "update",
        "unescape",
        "digest",
        "toUpperCase",
        "getBrandWCPayParams",
        "callback",
        "prepay_id_promise",
        "then",
        "wcPayParams",
        "parseInt",
        "Date",
        "getTime",
        "toString",
        "paySign",
        "Math",
        "random",
        "substr",
        "getAccessToken",
        "cb",
        "getAccessTokenUrl",
        "wxappsecret",
        "code",
        "errcode",
        "JSON",
        "parse",
        "access_token",
        "expires_in",
        "refresh_token",
        "scope",
        "responseData",
        "module",
        "exports"
    ],
    "mappings": "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",
    "file": "../../../src/uc/controller/wechatPay.js",
    "sourcesContent": [
        "\n/*\n* @Author: anziguoer\n* @Email: anziguoer@sina.com\n* @Date:   2016-09-14 11:40:12\n* @Last Modified by:   anziguoer\n* @Last Modified time: 2016-09-14 11:40:31\n* @Descrition : wechat 微信支付功能\n*/\n// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\nvar url = require('url');\nvar queryString = require('querystring');\nvar crypto = require('crypto');\nvar request = require('request');\nvar xml2jsparseString = require('xml2js').parseString;\n// 引入项目的配置信息\nvar config = require('../config/index.js');\n\n// wechat 支付类 (使用 es6 的语法)\nclass WechatPay {\n    /**\n     * 构造函数\n     * @param params 传递进来的方法\n     */\n    constructor( userInfo ){\n        this.userInfo = userInfo;\n    }\n\n    /**\n     * 获取微信统一下单参数\n     */\n    getUnifiedorderXmlParams(obj){\n        var body = '<xml> ' +\n            '<appid>'+config.wxappid+'</appid> ' +\n            '<attach>'+obj.attach+'</attach> ' +\n            '<body>'+obj.body+'</body> ' +\n            '<mch_id>'+config.mch_id+'</mch_id> ' +\n            '<nonce_str>'+obj.nonce_str+'</nonce_str> ' +\n            '<notify_url>'+obj.notify_url+'</notify_url>' +\n            '<openid>'+obj.openid+'</openid> ' +\n            '<out_trade_no>'+obj.out_trade_no+'</out_trade_no>'+\n            '<spbill_create_ip>'+obj.spbill_create_ip+'</spbill_create_ip> ' +\n            '<total_fee>'+obj.total_fee+'</total_fee> ' +\n            '<trade_type>'+obj.trade_type+'</trade_type> ' +\n            '<sign>'+obj.sign+'</sign> ' +\n            '</xml>';\n        return body;\n    }\n\n    /**\n     * 获取微信统一下单的接口数据\n     */\n    getPrepayId(obj){\n        var that = this;\n        // 生成统一下单接口参数\n        var UnifiedorderParams = {\n            appid : config.wxappid,\n            attach : obj.attach,\n            body : obj.body,\n            mch_id : config.mch_id,\n            nonce_str: this.createNonceStr(),\n            notify_url : obj.notify_url,// 微信付款后的回调地址\n            openid : this.userInfo.openid,\n            out_trade_no : obj.out_trade_no,//new Date().getTime(), //订单号\n            spbill_create_ip : obj.spbill_create_ip,\n            total_fee : obj.total_fee,\n            trade_type : 'JSAPI',\n            // sign : getSign(),\n        };\n        // 返回 promise 对象\n        return  new Promise(function (resolve, reject) {\n            // 获取 sign 参数\n            UnifiedorderParams.sign = that.getSign(UnifiedorderParams);\n            var url = 'https://api.mch.weixin.qq.com/pay/unifiedorder';\n            request.post({url : url, body:JSON.stringify(that.getUnifiedorderXmlParams(UnifiedorderParams))}, function (error, response, body) {\n                var prepay_id = '';\n                if (!error && response.statusCode == 200) {\n                    // 微信返回的数据为 xml 格式， 需要装换为 json 数据， 便于使用\n                    xml2jsparseString(body, {async:true}, function (error, result) {\n                        prepay_id = result.xml.prepay_id[0];\n                        // 放回数组的第一个元素\n                        resolve(prepay_id);\n                    });\n                } else {\n                    reject(body);\n                }\n            });\n        })\n    }\n\n    /**\n     * 获取微信支付的签名\n     * @param payParams\n     */\n    getSign(signParams){\n        // 按 key 值的ascll 排序\n        var keys = Object.keys(signParams);\n        keys = keys.sort();\n        var newArgs = {};\n        keys.forEach(function (val, key) {\n            if (signParams[val]){\n                newArgs[val] = signParams[val];\n            }\n        })\n        var string = queryString.stringify(newArgs)+'&key='+config.wxpaykey;\n        // 生成签名\n        return crypto.createHash('md5').update(queryString.unescape(string), 'utf8').digest(\"hex\").toUpperCase();\n    }\n\n    /**\n     * 微信支付的所有参数\n     * @param req 请求的资源, 获取必要的数据\n     * @returns {{appId: string, timeStamp: Number, nonceStr: *, package: string, signType: string, paySign: *}}\n     */\n    getBrandWCPayParams( obj, callback ){\n        var that = this;\n        var prepay_id_promise = that.getPrepayId(obj);\n        prepay_id_promise.then(function (prepay_id) {\n            var prepay_id = prepay_id;\n            var wcPayParams = {\n                \"appId\" : config.wxappid,     //公众号名称，由商户传入\n                \"timeStamp\" : parseInt(new Date().getTime() / 1000).toString(),         //时间戳，自1970年以来的秒数\n                \"nonceStr\" : that.createNonceStr(), //随机串\n                // 通过统一下单接口获取\n                \"package\" : \"prepay_id=\"+prepay_id,\n                \"signType\" : \"MD5\",         //微信签名方式：\n            };\n            wcPayParams.paySign = that.getSign(wcPayParams); //微信支付签名\n            callback(null, wcPayParams);\n        },function (error) {\n            callback(error);\n        });\n    }\n\n    /**\n     * 获取随机的NonceStr\n     */\n    createNonceStr() {\n        return Math.random().toString(36).substr(2, 15);\n    };\n\n    /**\n     * 获取微信的 AccessToken\n     */\n    getAccessToken(obj, cb){\n        var that = this;\n        var getAccessTokenUrl = \"https://api.weixin.qq.com/sns/oauth2/access_token?appid=\"+config.wxappid+\"&secret=\"+config.wxappsecret+\"&code=\"+that.userInfo.code+\"&grant_type=authorization_code\";\n        request.post({url : getAccessTokenUrl}, function (error, response, body) {\n            if (!error && response.statusCode == 200){\n                if (40029 == body.errcode) {\n                    cb(error, body);\n                } else {\n                    body = JSON.parse(body);\n                    that.userInfo.access_token = body.access_token;\n                    that.userInfo.expires_in = body.expires_in;\n                    that.userInfo.refresh_token = body.refresh_token;\n                    that.userInfo.openid = body.openid;\n                    that.userInfo.scope = body.scope;\n                    // console.log(that.userInfo);\n                    // 拼接微信的支付的参数\n                    that.getBrandWCPayParams(obj, function (error, responseData) {\n                        if (error) {\n                            cb(error);\n                        } else {\n                            cb(null, responseData);\n                        }\n                    });\n                }\n            } else {\n                cb(error);\n            }\n        });\n    }\n}\n\nmodule.exports = WechatPay;"
    ]
}