{
    "version": 3,
    "sources": [
        "../../../src/uc/controller/pay.js"
    ],
    "names": [
        "indexAction",
        "display",
        "payAction",
        "console",
        "log",
        "post",
        "weblogin",
        "isAjax",
        "payment",
        "pay",
        "charges",
        "model",
        "where",
        "pay_status",
        "user_id",
        "user",
        "uid",
        "find",
        "order_id",
        "order",
        "think",
        "isEmpty",
        "fail",
        "id",
        "update",
        "receiving",
        "amount",
        "order_amount",
        "create_time",
        "Date",
        "getTime",
        "payment_time",
        "doc_type",
        "payment_id",
        "getField",
        "balance",
        "Number",
        "decrement",
        "order_no",
        "status",
        "valueOf",
        "get_nickname",
        "admin_id",
        "type",
        "time",
        "amount_log",
        "note",
        "add",
        "url",
        "success",
        "name",
        "pingxx_id",
        "channel",
        "open_id",
        "session",
        "service",
        "http",
        "pingxx",
        "ip",
        "charge",
        "data",
        "get",
        "setp",
        "error",
        "Error",
        "statusAction",
        "end_time",
        "date_from",
        "setup",
        "ORDER_DELAY",
        "assign",
        "map",
        "checkMobile",
        "userAgent",
        "is_weixin",
        "select",
        "paylist",
        "meta_title",
        "keywords",
        "WEB_SITE_KEYWORD",
        "description",
        "WEB_SITE_DESCRIPTION",
        "controller",
        "action",
        "webhooksAction",
        "verify_signature",
        "raw_data",
        "signature",
        "pub_key_path",
        "verifier",
        "createVerify",
        "pub_key",
        "readFileSync",
        "verify",
        "headers",
        "RESOURCE_PATH",
        "object",
        "paid",
        "pay_time",
        "time_paid",
        "increment",
        "payresAction",
        "code",
        "param",
        "c_o_id",
        "out_trade_no",
        "orderId",
        "delete"
    ],
    "mappings": "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",
    "file": "../../../src/uc/controller/pay.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\n\nimport Base from './base.js';\nimport crypto from \"crypto\";\nimport fs from 'fs';\nexport default class extends Base {\n  /**\n   * index action\n   * @return {Promise} []\n   */\n  indexAction(){\n    //auto render template file index_index.html\n    return this.display();\n  }\n  //支付\n  async  payAction(){\n    console.log(this.post());\n    //判断是否登录\n    await this.weblogin();\n    if(this.isAjax(\"post\")){\n      let payment;\n      let pay;\n      let charges;\n      let post = this.post();\n      //获取订单信息\n      let order = await this.model(\"order\").where({pay_status:0,user_id:this.user.uid}).find(post.order_id);\n      if(think.isEmpty(order)){\n        return this.fail(\"订单不存在！\");\n      }\n      //更新订单的支付方式\n      await this.model(\"order\").where({id:order.id}).update({payment:post.payment});\n      //支付日志\n      let receiving = {\n        order_id:post.order_id,\n        user_id:this.user.uid,\n        amount:order.order_amount,\n        create_time:new Date().getTime(),\n        payment_time:new Date().getTime(),\n        doc_type:0,\n        payment_id:post.payment,\n        pay_status:0\n      }\n\n      //100预付款支付\n\n      if(post.payment == 100){\n        //先检查下用户余额\n        let balance = await this.model(\"member\").where({user_id:this.user.uid}).getField(\"amount\",true);\n        if(Number(balance) < Number(order.order_amount)){\n          return this.fail(\"您余额不足，请充值，或者选择其他支付方式！\")\n        }else {\n          //扣款\n          let decrement = this.model(\"member\").where({user_id:this.user.uid}).decrement(\"amount\",Number(order.order_amount));\n          if(decrement){\n            //扣款成功改变订单状态\n            await this.model(\"order\").where({order_no:order.order_no}).update({status:3,pay_status:1});\n            //扣款成功后插入日志\n            let log = {\n              admin_id:0,\n              user_id:this.user.uid,\n              type:2,\n              time:new Date().valueOf(),\n              amount:(0 - Number(order.order_amount)),\n              amount_log:await this.model(\"member\").where({id:this.user.uid}).getField(\"amount\",true),\n              note:`${await get_nickname(this.user.uid)} 通过余额支付方式进行商品购买,订单编号：${order.order_no}`\n            }\n            await this.model('balance_log').add(log);\n            receiving.pay_status=1;\n            await this.model(\"doc_receiving\").add(receiving);\n            let url = `/uc/pay/cart/payres/c_o_id/${post.order_id}`;\n            return this.success({name:\"支付订单对接成功，正在转跳！\",url:url})\n          }else {\n            return this.fail(\"您没有要支付的订单\");\n          }\n        }\n\n      }\n      if(post.payment == 1001){\n        let url = `/uc/pay/payres/c_o_id/${post.order_id}`;\n        return this.success({name:\"支付订单对接成功，正在转跳！\",url:url})\n      }\n      //1001货到付款\n      if(think.isEmpty(order)){\n        return this.fail(\"您没有要支付的订单\");\n      }else {\n        //判断是否已经绑定pingxx_id,如果已绑定查询pingxx订单直接支付。防止订单重复生成。\n        // console.log(order.id);\n        if(think.isEmpty(order.pingxx_id)){\n          // console.log(111111111)\n          //获取渠道\n          let channel = await this.model(\"pingxx\").where({id:post.payment}).getField(\"channel\",true);\n          let open_id;\n          if(channel == \"wx_pub\"){\n            open_id=await this.session(\"wx_openid\")\n          }\n          //调用ping++ 服务端\n          payment = think.service(\"payment\");\n          pay = new payment(this.http);\n          //传入 channel,order_no,order_amount,this.ip()\n          charges = await pay.pingxx(channel,order.order_no,order.order_amount,this.ip(),open_id);\n          //把pingxx_id存到订单\n          await this.model('order').where({id:post.order_id}).update({pingxx_id:charges.id});\n        }else {\n          // console.log(33333333);\n          //调用ping++ 服务端\n          payment = think.service(\"payment\");\n          pay = new payment(this.http);\n          charges = await pay.charge(order.pingxx_id);\n        }\n        //console.log(charges);\n        if(charges){\n          await this.model(\"doc_receiving\").add(receiving);\n          return this.success({name:\"支付订单对接成功，正在转跳！\",data:charges})\n        }else {\n          return this.fail(\"调用接口失败！\");\n        }\n\n\n      }\n\n    }else {\n      let order_id = this.get(\"order\");\n      let setp = this.get(\"setp\")||\"\";\n      //this.end(order_id  + \"=\" + setp)\n      //订单信息\n      let order = await this.model(\"order\").where({pay_status:0,user_id:this.user.uid}).find(order_id);\n      if(think.isEmpty(order)){\n        this.http.error = new Error('订单不存在或者已经支付！');\n        return think.statusAction(702, this.http);\n      }\n      order.end_time = date_from(order.create_time+(Number(this.setup.ORDER_DELAY)*60000))\n      //console.log(order);\n      this.assign(\"order\",order);\n\n      //   //支付方式\n      // let paylist = await this.model(\"payment\").where({status:1}).order(\"sort ASC\").select();\n      // for(let val of paylist){\n      //      val.logo =  await this.model(\"pay_plugin\").where({id:val.plugin_id}).getField(\"logo\",true);\n      //   }\n      //   this.assign(\"paylist\",paylist);\n      //根据不同的客户端调用不同的支付方式\n      let map;\n      if (checkMobile(this.userAgent())) {\n        map={\n          type:2,\n          status:1\n        }\n        if(!is_weixin(this.userAgent())){\n          map.channel =[\"!=\",\"wx_pub\"]\n        }\n\n      }else {\n        map={\n          type:1,\n          status:1\n        }\n\n      }\n      let paylist = await this.model(\"pingxx\").where(map).order(\"sort ASC\").select();\n      this.assign(\"paylist\",paylist);\n      this.assign(\"setp\",setp);\n      this.meta_title = \"订单支付\";//标题1\n      this.keywords = this.setup.WEB_SITE_KEYWORD ? this.setup.WEB_SITE_KEYWORD : '';//seo关键词\n      this.description = this.setup.WEB_SITE_DESCRIPTION ? this.setup.WEB_SITE_DESCRIPTION : \"\";//seo描述\n      //判断浏览客户端\n      if (checkMobile(this.userAgent())) {\n        return this.display(`mobile/${this.http.controller}/${this.http.action}`)\n      } else {\n        return this.display();\n      }\n    }\n\n\n  }\n  //Webhooks\n  async webhooksAction (){\n    let data = this.post()\n// 验证 webhooks 签名\n    var verify_signature = function(raw_data, signature, pub_key_path) {\n      var verifier = crypto.createVerify('RSA-SHA256').update(raw_data, \"utf8\");\n      var pub_key = fs.readFileSync(pub_key_path, \"utf8\");\n      return verifier.verify(pub_key, signature, 'base64');\n    }\n\n// POST 原始请求数据是待验签数据，请根据实际情况获取\n    var raw_data =JSON.stringify(data);\n// 签名在头部信息的 x-pingplusplus-signature 字段\n    var signature =this.http.headers[\"x-pingplusplus-signature\"];\n// 请从 https://dashboard.pingxx.com 获取「Webhooks 验证 Ping++ 公钥」\n    var pub_key_path = think.RESOURCE_PATH + \"/upload/pingpp/pingpp_rsa_public_key.pem\";\n\n    if (!verify_signature(raw_data, signature, pub_key_path,fs,crypto)) {\n      return this.fail(\"服务其验证失败！\")\n    }\n\n    switch (data.type) {\n      case \"charge.succeeded\":\n        // 开发者在此处加入对支付异步通知的处理代码\n        //console.log(data.data.object.paid);\n        if(data.data.object.paid){\n          let order = await this.model(\"order\").where({order_no:data.data.object.order_no}).find();\n          //支付成功改变订单状态\n          let update = await this.model(\"order\").where({order_no:data.data.object.order_no}).update({status:3,pay_status:1,pay_time:(data.data.object.time_paid*1000)});\n          if(order.type == 1 && update) {\n            await this.model(\"member\").where({user_id:order.user_id}).increment(\"amount\",order.order_amount);\n            //充值成功后插入日志\n            let log = {\n              admin_id:0,\n              user_id:order.user_id,\n              type:2,\n              time:new Date().valueOf(),\n              amount:Number(order.order_amount),\n              amount_log:await this.model(\"member\").where({user_id:order.user_id}).getField(\"amount\",true),\n              note:`${await get_nickname(order.user_id)} 通过[${await this.model(\"pingxx\").where({id: order.payment}).getField(\"title\", true)}]支付方式进行充值,订单编号：${data.data.object.order_no}`\n            }\n            await this.model('balance_log').add(log);\n\n          }\n          //记录支付日志\n          await this.model(\"doc_receiving\").where({order_id:order.id}).update({pay_status:1,payment_time:(data.data.object.time_paid*1000)});\n          this.success({name:\"成功！\"});\n        }else {\n          this.fail(\"失败！\");\n        }\n        break;\n      case \"refund.succeeded\":\n        // 开发者在此处加入对退款异步通知的处理代码sfdsfs\n        break;\n      default:\n    }\n  }\n  //支付回掉\n  async payresAction(){\n    let code = this.param();\n\n    //orderId: '1458722092073', respMsg: 'success'\n    console.log(code);\n    //站内支付回掉\n    if(code.c_o_id){\n      let order = await this.model(\"order\").find(code.c_o_id);\n      order.amount = order.order_amount;\n      switch (order.payment){\n        case 100:\n          order.channel = \"预付款支付\";\n          break;\n        default:\n          order.channel = \"货到付款\";\n          break;\n      }\n      this.assign(\"order\",order);\n    }else {\n      //支付接口回掉\n      let order = await this.model(\"order\").where({order_no:code.out_trade_no||code.orderId||code.order_no}).find();\n      //调用ping++ 服务端\n      let payment = think.service(\"payment\");\n      let pay = new payment(this.http);\n      let charges = await pay.charge(order.pingxx_id);\n\n      if(charges.paid && order.pay_status == 0){\n        //支付成功改变订单状态\n        let update = await this.model(\"order\").where({order_no:charges.order_no}).update({status:3,pay_status:1,pay_time:(charges.time_paid*1000)});\n\n        if(order.type == 1 && update){\n          await this.model(\"member\").where({id:order.user_id}).increment(\"amount\",order.order_amount);\n\n          //充值成功后插入日志\n          let log = {\n            admin_id:0,\n            user_id:order.user_id,\n            type:2,\n            time:new Date().valueOf(),\n            amount:Number(order.order_amount),\n            amount_log:await this.model(\"member\").where({id:order.user_id}).getField(\"amount\",true),\n            note:`${await get_nickname(order.user_id)} 通过[${await this.model(\"pingxx\").where({id: order.payment}).getField(\"title\", true)}]支付方式进行充值,订单编号：${order.order_no}`\n          }\n          await this.model('balance_log').add(log);\n\n        }\n        //记录支付日志\n        await this.model(\"doc_receiving\").where({order_id:order.id}).update({pay_status:1,payment_time:(charges.time_paid*1000)});\n      }\n      if(charges.paid && order.pay_status == 0 && order.type==1){\n        await this.model(\"order\").where({order_no:order.order_no}).delete();\n      }\n      charges.amount = charges.amount/100;\n      charges.channel = await this.model(\"pingxx\").where({channel:charges.channel}).getField(\"title\",true);\n      this.assign(\"order\",charges);\n    }\n\n\n    this.meta_title = \"支付结果\";//标题1\n    this.keywords = this.setup.WEB_SITE_KEYWORD ? this.setup.WEB_SITE_KEYWORD : '';//seo关键词\n    this.description = this.setup.WEB_SITE_DESCRIPTION ? this.setup.WEB_SITE_DESCRIPTION : \"\";//seo描述\n    //判断浏览客户端\n    if (checkMobile(this.userAgent())) {\n      return this.display(`mobile/${this.http.controller}/${this.http.action}`)\n    } else {\n      return this.display();\n    }\n  }\n}"
    ]
}