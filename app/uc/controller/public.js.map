{
    "version": 3,
    "sources": [
        "../../../src/uc/controller/public.js"
    ],
    "names": [
        "indexAction",
        "display",
        "registerAction",
        "isPost",
        "data",
        "post",
        "console",
        "log",
        "res",
        "think",
        "isEmpty",
        "username",
        "fail",
        "model",
        "where",
        "ltrim",
        "find",
        "mobile",
        "email",
        "password",
        "password2",
        "clause",
        "status",
        "reg_time",
        "Date",
        "valueOf",
        "reg_ip",
        "_ip2int",
        "ip",
        "encryptPassword",
        "add",
        "reg",
        "autoLogin",
        "id",
        "userInfo",
        "session",
        "success",
        "name",
        "url",
        "meta_title",
        "loginAction",
        "isAjax",
        "setup",
        "GEETEST_IS_LOGIN",
        "Geetest",
        "service",
        "geetest",
        "validate",
        "get",
        "signin",
        "uid",
        "is_login",
        "redirect",
        "checkMobile",
        "userAgent",
        "active",
        "http",
        "controller",
        "action",
        "verifycodesendAction",
        "code",
        "MathRand",
        "check",
        "map",
        "type",
        "create_time",
        "count",
        "exec_count",
        "dayu",
        "adapter",
        "instance",
        "qianming",
        "SMS_qianming",
        "temp_code",
        "SMS_zhuce",
        "info",
        "SMS_product",
        "send",
        "result",
        "err_code",
        "json",
        "smsregAction",
        "sms_type",
        "order",
        "getField",
        "verifycode",
        "patrn",
        "test",
        "user_id",
        "verifymemberAction",
        "v",
        "f",
        "logoutAction"
    ],
    "mappings": "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",
    "file": "../../../src/uc/controller/public.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\n\nimport Base from './base.js';\n\nexport default class extends Base {\n  /**\n   * index action\n   * @return {Promise} []\n   */\n  indexAction(){\n    //auto render template file index_index.html\n    return this.display();\n  }\n  /**\n   * 注册页面\n   */\n  async registerAction() {\n    if(this.isPost()){\n      let data = this.post();\n      console.log(data);\n      //验证\n      let res;\n      if(think.isEmpty(data.username)){\n        return this.fail(\"用户昵称不能为空！\");\n      }else{\n        res = await this.model(\"member\").where({username:ltrim(data.username)}).find();\n        if(!think.isEmpty(res)){\n          return this.fail(\"用户昵称已存在，请重新填写！\")\n        }\n      }\n      if(think.isEmpty(data.mobile)){\n        return this.fail(\"手机号码不能为空！\")\n      }else{\n        res = await this.model(\"member\").where({mobile:data.mobile}).find();\n        if(!think.isEmpty(res)){\n          return this.fail(\"手机号码已存在，请重新填写！\")\n        }\n      }\n      if(think.isEmpty(data.email)){\n        return this.fail(\"电子邮箱不能为空！\")\n      }else{\n        res = await this.model(\"member\").where({email:data.email}).find();\n        if(!think.isEmpty(res)){\n          return this.fail(\"电子邮箱已存在，请重新填写！\")\n        }\n      }\n      if(think.isEmpty(data.password) && think.isEmpty(data.password2)){\n        return this.fail(\"密码不能为空！\")\n      }else{\n\n        if(data.password != data.password2){\n          return this.fail(\"两次输入的密码不一致，请重新填写！\")\n        }\n      }\n      if(data.clause != \"on\"){\n        return this.fail(\"必须要同意,网站服务条款\")\n      }\n\n      data.status = 1;\n      data.reg_time = new Date().valueOf();\n      data.reg_ip = _ip2int(this.ip());\n      data.password = encryptPassword(data.password);\n      let reg = await this.model(\"member\").add(data);\n      await this.model(\"member\").autoLogin({id:reg}, this.ip());//更新用户登录信息，自动登陆\n      let userInfo = {\n        'uid':reg,\n        'username': data.username,\n        'last_login_time': data.reg_time,\n      };\n      await this.session('webuser', userInfo);\n      return this.success({name:\"注册成功,登录中!\",url:\"/uc/index\"});\n    }else {\n      this.meta_title = \"用户注册\";\n      return this.display();\n    }\n\n  }\n  //   登陆页面\n  async loginAction() {\n    console.log(\"is post?============\"+this.isAjax(\"post\"));\n    if (this.isAjax(\"post\")) {\n      //验证码\n      if(1==this.setup.GEETEST_IS_LOGIN){\n        let Geetest = think.service(\"geetest\"); //加载 commoon 模块下的 geetset service\n        let geetest = new Geetest();\n        let res = await geetest.validate(this.post(),this.get('type'));\n        console.log(res);\n        if(\"success\" != res.status){\n          // this.http.error = new Error(\"验证码不正确\");\n          // return think.statusAction(702, this.http);\n          return this.fail(-3,\"验证码不正确!\");\n        }\n      }\n      //用户账号密码验证\n      let username = this.post('username');\n      let password = this.post('password');\n      password = encryptPassword(password);\n      let res = await this.model(\"member\").signin(username, password, this.ip(), 5,0);\n\n      if (0 < res.uid) {\n        //记录用户登录行为\n        // await this.model(\"action\").log(\"user_login\", \"member\", res.uid, res.uid, this.ip(), this.http.url);\n        // console.log(111111111111121);\n        // console.log(res);\n        await this.session('webuser', res);\n        //TODO 用户密钥\n        return this.success({name: '登录成功！'});\n      } else { //登录失败\n        let fail;\n        switch (res) {\n          case -1:\n            fail = '用户不存在或被禁用';\n            break; //系统级别禁用\n          case -2:\n            fail = '密码错误';\n            break;\n          default:\n            fail = '未知错误';\n            break; // 0-接口参数错误（调试阶段使用）\n        }\n        return this.fail(res, fail);\n      }\n    } else {\n      //如果已经登陆直接跳转到用户中心\n      if (this.is_login) {\n        this.redirect(\"/uc/index\")\n\n      }\n      this.meta_title = \"用户登录\";\n      //判断浏览客户端\n      if (checkMobile(this.userAgent())) {\n        this.active = \"user/index\";\n        return this.display(`mobile/${this.http.controller}/${this.http.action}`)\n      } else {\n        console.log(\"uc-public-login\");\n        return this.display();\n      }\n    }\n\n  }\n//获取短信验证码\n  async verifycodesendAction(){\n    if(!this.isPost()){\n      return this.fail(\"请求错误！\")\n    }\n    let data = this.post();\n    let code = MathRand();\n    if(data.check ==1){\n      let res = await this.model(\"member\").where({mobile:data.mobile}).find();\n      if(!think.isEmpty(res)){\n        return this.fail(\"该手机号已存在！\")\n      }\n    }\n    //检查执行周期\n    let map = {\n      mobile:data.mobile,\n      type:data.type\n    }\n    map.create_time = [\">\",new Date().valueOf() - 24 * 3600 * 1000]\n    // console.log(map);\n    let exec_count = await this.model(\"sms_log\").where(map).count();\n    //console.log(exec_count);\n    if(exec_count >= 3 ){\n      return this.fail(\"发送过于频发请24小时后，再尝试。\")\n    }\n\n    let dayu = think.adapter(\"alidayu\", \"client\");\n    let instance = new dayu();\n    let qianming = this.setup.SMS_qianming;\n    let temp_code;\n    if(data.type ==1){\n      temp_code = this.setup.SMS_zhuce\n    }\n    let info = {\n      'extend':data.mobile,\n      'sms_type':'normal',\n      'sms_free_sign_name':qianming,\n      'sms_param':`{\"code\":\"${code}\",\"product\":\"${this.setup.SMS_product}\"}`,\n      'rec_num':data.mobile,\n      'sms_template_code':temp_code\n    }\n    let result = await instance.send(info);\n    // let result ={ err_code: '0',\n    //     model: '102201717069^1102848633337',\n    //     success: true }\n    console.log(result);\n    //发送成功记录到数据库\n    if( 0 == result.result.err_code){\n      await this.model(\"sms_log\").add({\n        mobile:data.mobile,\n        type:data.type,\n        code:code,\n        create_time:new Date().valueOf()\n      });\n    }\n    return this.json(result.result)\n  }\n  //短信注册\n  async smsregAction(){\n    let data = this.post();\n    //对比验证码\n    let map = {\n      mobile:data.mobile,\n      type:data.sms_type\n    }\n    map.create_time = [\">\",new Date().valueOf() - 1 * 3600 * 1000]\n    // console.log(map);\n    let code = await this.model(\"sms_log\").where(map).order(\"id DESC\").getField(\"code\",true);\n    if(think.isEmpty(code)||code != data.verifycode){\n      return this.fail(\"验证码不正确!\")\n    }\n    let patrn=/^(\\w){6,20}$/;\n    if(!patrn.test(data.password)){\n      return this.fail(\"密码：只能输入6-20个字母、数字、下划线\")\n    }\n    data.email = 0;\n    data.username = data.mobile;\n    data.status = 1;\n    data.reg_time = new Date().valueOf();\n    data.reg_ip = _ip2int(this.ip());\n    data.password = encryptPassword(data.password);\n    let reg = await this.model(\"member\").add(data);\n    if(reg){\n      //用户副表\n      await this.model(\"customer\").add({user_id:reg});\n    }\n    await this.model(\"member\").autoLogin({id:reg}, this.ip());//更新用户登录信息，自动登陆\n    let userInfo = {\n      'uid':reg,\n      'username': data.username,\n      'last_login_time': data.reg_time,\n    };\n    await this.session('webuser', userInfo);\n    return this.success({name:\"注册成功,登录中!\",url:\"/uc/index\"});\n  }\n  async verifymemberAction(){\n    let v = this.get(\"v\");\n    let f = this.get(\"f\");\n    let map = {}\n    map[f]=v;\n    let res = await this.model(\"member\").where(map).find();\n    if(!think.isEmpty(res)){\n      return this.fail(\"已存在\");\n    }else {\n      return this.success(\"不存在\");\n    }\n  }\n\n  //退出登录\n  async logoutAction() {\n    //退出登录\n\n    if (this.is_login) {\n\n      await this.session('webuser', null);\n      //清楚cy_id\n      //await this.session(\"wx_openid\",null);\n      // cysoIp9AH\n      // return this.display()\n\n    } else {\n      this.redirect(\"/index\");\n    }\n    this.redirect(\"/index\");\n  }\n\n  \n\n}"
    ]
}