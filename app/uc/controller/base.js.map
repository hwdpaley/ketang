{
    "version": 3,
    "sources": [
        "../../../src/uc/controller/base.js"
    ],
    "names": [],
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AACA",
    "file": "../../../src/uc/controller/base.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\nimport Base from '../../topic/controller/base.js';\nexport default class extends Base {\n  // init(http) {\n  //   super.init(http);\n  // }\n  //\n  // async __before() {\n  //   await this.action(\"weixin\", \"oauth\");\n  //   //网站配置\n  //   this.setup = await this.model(\"setup\").getset();\n  //   // console.log(this.setup);\n  //   //当前登录状态\n  //   this.is_login = await this.islogin();\n  //   //用户信息\n  //   this.user = await this.session('webuser');\n  //   //console.log(this.user);\n  //\n  //   //获取当前分类信息\n  //   //console.log(action);\n  //   // this.meta_title = cate.meta_title?cate.meta_title:cate.title;\n  //   //设置主题\n  //   //this.http.theme(\"default);\n  //   //购物车\n  //\n  //   let cartList = await this.shopCart();\n  //   let cartInfo;\n  //   if(think.isEmpty(cartList)){\n  //     cartInfo = {\n  //       total:0,\n  //       num:0,\n  //       data:null\n  //     }\n  //\n  //   }else{\n  //\n  //     let total = [];\n  //     let num = [];\n  //     for(let val of cartList){\n  //       total.push(val.price);\n  //       num.push(val.qty);\n  //       //判断是否有库存\n  //       let stock = await this.model(\"order\").getstock(val.product_id,val.type);\n  //\n  //       if(val.qty > stock){\n  //         val.stock = 0;\n  //       }else {\n  //         val.stock =stock;\n  //       }\n  //     }\n  //     cartInfo = {\n  //       total:eval(total.join('+')),\n  //       num:eval(num.join('+')),\n  //       data:cartList\n  //     }\n  //   }\n  //   this.cart = cartInfo;\n  //   //console.log(this.cart);\n  // }\n  // /**\n  //  * 判断是否登录\n  //  * @returns {boolean}\n  //  */\n  // async islogin() {\n  //   //前台判断是否登录\n  //   let user = await this.session('webuser');\n  //   let res = think.isEmpty(user) ? false : user.uid;\n  //   return res;\n  //\n  // }\n  // async weblogin(){\n  //   let islogin =await this.islogin();\n  //   if(!islogin){\n  //     //判断浏览客户端\n  //     if (checkMobile(this.userAgent())) {\n  //       //手机端直接跳转到登录页面\n  //       return this.redirect('/uc/public/login')\n  //     } else {\n  //       //pc端跳转到错误页面\n  //       return think.statusAction(700,this.http);\n  //     }\n  //\n  //   }\n  // }\n  //\n  // //获取分类信息\n  // async category(id, field) {\n  //   id = id || 0;\n  //   field = field || \"\";\n  //   if (think.isEmpty(id)) {\n  //     //this.fail('没有指定数据分类！');\n  //     this.http.error = new Error('没有指定数据分类！');\n  //     return think.statusAction(702, this.http);\n  //   }\n  //   let cate = await this.model(\"category\").info(id, field);\n  //   //console.log(cate);\n  //   if (cate && 1 == cate.status) {\n  //\n  //     switch (cate.display) {\n  //       case 0:\n  //         //this.fail('该分类禁止显示')\n  //         this.http.error = new Error('该分类禁止显示！');\n  //         return think.statusAction(702, this.http);\n  //         break;\n  //         //TODO:更多分类显示状态判断\n  //       default:\n  //\n  //         return cate;\n  //     }\n  //\n  //   } else {\n  //\n  //     //this.fail(\"分类不存在或者被禁用！\");\n  //     this.http.error = new Error('分类不存在或者被禁用！');\n  //     return think.statusAction(702, this.http);\n  //   }\n  // }\n  // //购物车\n  // async shopCart(){\n  //   let cartdata =null;\n  //   if(this.is_login){\n  //     let loadata = await this.session(\"cart_goods_item\");\n  //     if(think.isEmpty(loadata)){\n  //       cartdata = await this.model('cart').where({uid:this.user.uid}).select();\n  //     }else{\n  //       //loadata = JSON.parse(loadata);\n  //       for(let val of loadata){\n  //         val.uid = this.user.uid;\n  //         //验证原有的数据是否已经存在\n  //         let res = await this.model('cart').where({product_id: val.product_id, type:val.type,uid:this.user.uid}).select();\n  //         //console.log(res);\n  //         if(!think.isEmpty(res)){\n  //           val.qty =Number(val.qty)+Number(res[0].qty);\n  //           val.id = res[0].id;\n  //           await this.model('cart').update(val);\n  //         }else{\n  //           await this.model('cart').add(val);\n  //         }\n  //\n  //       }\n  //       await this.session(\"cart_goods_item\",null);\n  //       cartdata = await this.model('cart').where({uid:this.user.uid}).select();\n  //     }\n  //   }else{\n  //     cartdata =await this.session(\"cart_goods_item\");\n  //     // if(cartdata){\n  //     // cartdata = JSON.parse(cartdata);\n  //     // }\n  //   }\n  //   //console.log(cartdata);\n  //   return cartdata;\n  // }\n  //\n  // /**\n  //  * 处理文档列表显示\n  //  * @param {array} list 列表数据\n  //  * @param {integer} model_id 模型id\n  //  */\n  // async parseDocumentList(list, model_id) {\n  //   model_id = model_id || 1;\n  //   let attrList = await this.model('attribute').get_model_attribute(model_id, false, 'id,name,type,extra');\n  //   //attrList=attrList[model_id];\n  //   //this.end(attrList);\n  //   // console.log(attrList);\n  //   if (think.isArray(list)) {\n  //     list.forEach((data, k) => {\n  //       //console.log(data);\n  //       for (let key in data) {\n  //         //console.log(key)\n  //         if (!think.isEmpty(attrList[key])) {\n  //           let extra = attrList[key]['extra'];\n  //           let type = attrList[key]['type'];\n  //           //console.log(extra);\n  //           if ('select' == type || 'checkbox' == type || 'radio' == type || 'bool' == type) {\n  //             // 枚举/多选/单选/布尔型\n  //             let options = parse_config_attr(extra);\n  //             let oparr = Object.keys(options);\n  //             if (options && in_array(data[key], oparr)) {\n  //               data[key] = options[data[key]];\n  //             }\n  //           } else if ('date' == type) { // 日期型\n  //             data[key] = dateformat('Y-m-d', data[key]);\n  //           } else if ('datetime' == type) { // 时间型\n  //             data[key] = dateformat('Y-m-d H:i', data[key]);\n  //           } else if ('pics' === type) {\n  //             data[key] = `<span class=\"thumb-sm\"><img alt=\"...\" src=\"${data[key]}\" class=\"img-responsive img-thumbnail\"></span>`;\n  //           }\n  //         }\n  //       }\n  //       data.model_id = model_id;\n  //       list[k] = data;\n  //     })\n  //     //console.log(222)\n  //     return list;\n  //   }\n  // }\n  // //跨域设置\n  // setCorsHeader(){\n  //   this.header(\"Access-Control-Allow-Origin\", this.header(\"origin\") || \"*\");\n  //   this.header(\"Access-Control-Allow-Headers\", \"x-requested-with\");\n  //   this.header(\"Access-Control-Request-Method\", \"GET,POST,PUT,DELETE\");\n  //   this.header(\"Access-Control-Allow-Credentials\", \"true\");\n  // }\n}\n"
    ]
}