{
    "version": 3,
    "sources": [
        "../../../src/uc/controller/seting.js"
    ],
    "names": [
        "indexAction",
        "weblogin",
        "model",
        "find",
        "user",
        "uid",
        "userInfo",
        "console",
        "log",
        "assign",
        "province",
        "city",
        "county",
        "checkMobile",
        "userAgent",
        "where",
        "id",
        "getField",
        "parent_id",
        "select",
        "meta_title",
        "active",
        "display",
        "http",
        "controller",
        "action",
        "updateinfoAction",
        "data",
        "post",
        "birthday",
        "Date",
        "getTime",
        "member",
        "email",
        "mobile",
        "real_name",
        "sex",
        "addr",
        "think",
        "isEmpty",
        "city_picke",
        "split",
        "name",
        "update",
        "success",
        "fail",
        "updatepasswordAction",
        "password",
        "encryptPassword",
        "oldpassword",
        "updateavatarAction",
        "file",
        "extend",
        "filepath",
        "path",
        "uploadPath",
        "RESOURCE_PATH",
        "mkdir",
        "res",
        "jimp2",
        "deferred",
        "defer",
        "self",
        "read",
        "err",
        "lenna",
        "resize",
        "quality",
        "write",
        "e",
        "r",
        "resolve",
        "promise",
        "avatar_data",
        "JSON",
        "parse",
        "jimp",
        "crop",
        "x",
        "y",
        "width",
        "height",
        "end"
    ],
    "mappings": "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",
    "file": "../../../src/uc/controller/seting.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\n// | Bieber [ 美媒网站内容管理框架 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2017 http://www.gzxinbibo.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Author: Tony <912697590@qq.com>\n// +----------------------------------------------------------------------\n'use strict';\nimport Jimp from \"jimp\";\nimport Base from './base.js';\n\nexport default class extends Base {\n  /**\n   * index action\n   * @return {Promise} []\n   */\n  //   用户设置\n  async indexAction() {\n    //判断是否登陆\n    await this.weblogin();\n    //获取用户信息\n    let userInfo = await this.model(\"member\").find(this.user.uid);\n      console.log(userInfo);\n      //console.log(userInfo);\n    this.assign(\"userInfo\", userInfo);\n    let province, city, county;\n    //获取省份\n    if (checkMobile(this.userAgent())) {\n      province = await this.model('area').where({id: userInfo.province}).getField(\"name\", true);\n      city = await this.model('area').where({id: userInfo.city}).getField(\"name\", true);\n      county = await this.model('area').where({id: userInfo.county}).getField(\"name\", true);\n    } else {\n      province = await this.model('area').where({parent_id: 0}).select();\n      city = await this.model('area').where({parent_id: userInfo.province}).select();\n      county = await this.model('area').where({parent_id: userInfo.city}).select();\n    }\n\n    this.assign(\"province\", province);\n    this.assign(\"city\", city);\n    this.assign(\"county\", county);\n    this.meta_title = \"用户设置\";\n    //判断浏览客户端\n    if (checkMobile(this.userAgent())) {\n      this.active = \"user/index\";\n      return this.display(`mobile/${this.http.controller}/${this.http.action}`)\n    } else {\n      return this.display();\n    }\n  }\n\n  //更新用户信息\n  async updateinfoAction() {\n    //判断是否登陆\n    await this.weblogin();\n    let data = this.post();\n    // console.log(\"updateinfoAction-----------,\"+JSON.stringify(data));\n    if(!data.birthday){\n      data.birthday=new Date().getTime();\n    }else{\n      data.birthday=new Date(data.birthday).getTime();\n    }\n    let member = {\n      email: data.email,\n      mobile: data.mobile,\n      real_name: data.real_name,\n      sex: data.sex,\n      birthday: data.birthday,\n      province: data.province,\n      city: data.city,\n      county: data.county,\n      addr: data.addr\n    }\n\n    //判断浏览客户端\n    if (checkMobile(this.userAgent())) {\n      if (!think.isEmpty(data.city_picke)) {\n        let city_picke = data.city_picke.split(\" \");\n          member.province = await this.model(\"area\").where({\n          name: [\"like\", `%${city_picke[0]}%`],\n          parent_id: 0\n        }).getField(\"id\", true);\n          member.city = await this.model(\"area\").where({\n          name: [\"like\", `%${city_picke[1]}%`],\n          parent_id: member.province\n        }).getField(\"id\", true);\n          member.county = await this.model(\"area\").where({\n          name: [\"like\", `%${city_picke[2]}%`],\n          parent_id: member.city\n        }).getField(\"id\", true);\n      }\n    }\n\n    let update = await this.model(\"member\").where({id: this.user.uid}).update(member);\n    // think.log(customer);\n    if (update ) {\n      return this.success({name: \"更新用户资料成功！\"})\n    } else {\n      return this.fail(\"更新失败！\")\n    }\n\n  }\n\n  //修改密码\n  async updatepasswordAction() {\n    //判断是否登陆\n    await this.weblogin();\n    let data = this.post();\n    if(think.isEmpty(data.password)){\n      return this.fail(\"请填写新密码！\")\n    }\n    let password = await this.model(\"member\").where({id: this.user.uid}).getField(\"password\", true);\n    if (password === encryptPassword(data.oldpassword)) {\n      await this.model(\"member\").where({id: this.user.uid}).update({password: encryptPassword(data.password)})\n      return this.success({name: \"密码修改成功，请用新密码重新登陆！\"});\n    } else {\n      return this.fail(\"旧密码不正确，请重新输入。\")\n    }\n\n  }\n\n  //上传头像\n  async updateavatarAction() {\n    //判断是否登陆\n    await this.weblogin();\n    let file = think.extend({}, this.file('file'));\n    console.log(file);\n    //think.log(avatar_data);\n    var filepath = file.path;\n    //文件上传后，需要将文件移动到项目其他地方，否则会在请求结束时删除掉该文件\n    var uploadPath = think.RESOURCE_PATH + '/upload/avatar/' + this.user.uid;\n    think.mkdir(uploadPath);\n    let res;\n    if (checkMobile(this.userAgent())) {\n      let jimp2 = ()=> {\n        console.log(111)\n        let deferred = think.defer();\n        let self = this;\n        Jimp.read(filepath, function (err, lenna) {\n          if (err) throw err;\n          lenna.resize(200, 200)            // resize\n              .quality(60)                 // set JPEG quality\n              .write(uploadPath + \"/avatar.png\", function (e, r) {\n                deferred.resolve('/upload/avatar/' + self.user.uid + \"/avatar.png\");\n              }); // save\n        });\n        return deferred.promise;\n      }\n      res = await jimp2();\n    } else {\n      let post = this.post();\n      let avatar_data = JSON.parse(post.avatar_data);\n      let jimp = () => {\n        let deferred = think.defer();\n        let self = this;\n        Jimp.read(filepath, function (err, lenna) {\n          //console.log(lenna)\n\n          if (err) throw err;\n          lenna.crop(avatar_data.x, avatar_data.y, avatar_data.width, avatar_data.height)            // resize\n              .quality(60)\n              .write(uploadPath + \"/avatar.png\", function (e, r) {\n                deferred.resolve('/upload/avatar/' + self.user.uid + \"/avatar.png\");\n              }); // save\n\n        });\n        return deferred.promise;\n      }\n      res = await jimp();\n    }\n\n\n    //think.log(res);\n    let data = {\n      \"result\": res,\n      \"errno\": 0,\n      \"message\": \"头像上传成功！\"\n    }\n    return this.end(data);\n  }\n}"
    ]
}